{
	"id": "da2505a127448c5b79bcf9ad15ddaf7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./extensions/IERC20Metadata.sol\";\r\nimport \"./access/AccessControlEnumerable.sol\";\r\nimport \"./utils/Context.sol\";\r\nimport \"./security/Pausable.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, AccessControlEnumerable, IERC20, IERC20Metadata, Pausable {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint256 public MAX_TOKEN_COUNT;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 8;\r\n    }\r\n\r\n    function pausedOptions() public virtual returns (bool) {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\");\r\n        _pause();\r\n        return true;\r\n    }\r\n\r\n    function unPausedOptions() public virtual returns (bool) {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\");\r\n        _unpause();\r\n        return true;\r\n    }\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function _maxTokenCountSet(uint256  maxValue) internal virtual {\r\n        MAX_TOKEN_COUNT = maxValue;\r\n    }\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        require(\r\n            recipient != _msgSender(),\r\n            \"ERC20: caller and recipient must be different address.\"\r\n        );\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        require(recipient != _msgSender(), \"ERC20: caller and recipient must be different address.\");\r\n\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\");\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\");\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount \r\n    ) internal virtual {\r\n        require(!paused(), \"ERC20: transfer function is paused by admin.\");\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\");\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n        uint256 tokenCount = _totalSupply + amount;\r\n        require (tokenCount <= MAX_TOKEN_COUNT,\"TOKEN Max limit exist!\");\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        require(account == _msgSender(), \"ERC20: caller and address must be same.\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n}\r\n"
			},
			"ERC20/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"ERC20/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"ERC20/access/AccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccessControlEnumerable.sol\";\r\nimport \"./AccessControl.sol\";\r\nimport \"../utils/structs/EnumerableSet.sol\";\r\n\r\n/**\r\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\r\n */\r\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns one of the accounts that have `role`. `index` must be a\r\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\r\n     *\r\n     * Role bearers are not sorted in any particular way, and their ordering may\r\n     * change at any point.\r\n     *\r\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\r\n     * you perform all queries on the same block. See the following\r\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n     * for more information.\r\n     */\r\n    function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {\r\n        return _roleMembers[role].at(index);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of accounts that have `role`. Can be used\r\n     * together with {getRoleMember} to enumerate all bearers of a role.\r\n     */\r\n    function getRoleMemberCount(bytes32 role) public view override returns (uint256) {\r\n        return _roleMembers[role].length();\r\n    }\r\n\r\n    /**\r\n     * @dev Overload {grantRole} to track enumerable memberships\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {\r\n        super.grantRole(role, account);\r\n        _roleMembers[role].add(account);\r\n    }\r\n\r\n    /**\r\n     * @dev Overload {revokeRole} to track enumerable memberships\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {\r\n        require(account != _msgSender(), \"ERC20: caller can not revoke own address.\");\r\n        super.revokeRole(role, account);\r\n        _roleMembers[role].remove(account);\r\n    }\r\n\r\n    /**\r\n     * @dev Overload {renounceRole} to track enumerable memberships\r\n     */\r\n    // function renounceRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {\r\n    //     super.renounceRole(role, account);\r\n    //     _roleMembers[role].remove(account);\r\n    // }\r\n\r\n    /**\r\n     * @dev Overload {_setupRole} to track enumerable memberships\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual override {\r\n        super._setupRole(role, account);\r\n        _roleMembers[role].add(account);\r\n    }\r\n}\r\n"
			},
			"ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    \r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"ERC20/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastvalue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastvalue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"
			},
			"ERC20/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccessControl.sol\";\r\nimport \"../utils/Context.sol\";\r\nimport \"../utils/Strings.sol\";\r\nimport \"../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\r\n * members except through off-chain means by accessing the contract event logs. Some\r\n * applications may benefit from on-chain enumerability, for those cases see\r\n * {AccessControlEnumerable}.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it.\r\n */\r\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\r\n    struct RoleData {\r\n        mapping(address => bool) members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Modifier that checks that an account has a specific role. Reverts\r\n     * with a standardized message including the required role.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     *\r\n     * _Available since v4.1._\r\n     */\r\n    modifier onlyRole(bytes32 role) {\r\n        _checkRole(role, _msgSender());\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\r\n        return _roles[role].members[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `account` is missing `role`.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     */\r\n    function _checkRole(bytes32 role, address account) internal view {\r\n        if (!hasRole(role, account)) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        \"AccessControl: account \",\r\n                        Strings.toHexString(uint160(account), 20),\r\n                        \" is missing role \",\r\n                        Strings.toHexString(uint256(role), 32)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    // function renounceRole(bytes32 role, address account) public virtual override {\r\n    //     require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\r\n\r\n    //     _revokeRole(role, account);\r\n    // }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     *\r\n     * NOTE: This function is deprecated in favor of {_grantRole}.\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        bytes32 previousAdminRole = getRoleAdmin(role);\r\n        _roles[role].adminRole = adminRole;\r\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     */\r\n    function _grantRole(bytes32 role, address account) internal virtual {\r\n        if (!hasRole(role, account)) {\r\n            _roles[role].members[account] = true;\r\n            emit RoleGranted(role, account, _msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     */\r\n    function _revokeRole(bytes32 role, address account) internal virtual {\r\n        if (hasRole(role, account)) {\r\n            _roles[role].members[account] = false;\r\n            emit RoleRevoked(role, account, _msgSender());\r\n        }\r\n    }\r\n}\r\n"
			},
			"ERC20/access/IAccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccessControl.sol\";\r\n\r\n/**\r\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\r\n */\r\ninterface IAccessControlEnumerable is IAccessControl {\r\n    /**\r\n     * @dev Returns one of the accounts that have `role`. `index` must be a\r\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\r\n     *\r\n     * Role bearers are not sorted in any particular way, and their ordering may\r\n     * change at any point.\r\n     *\r\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\r\n     * you perform all queries on the same block. See the following\r\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n     * for more information.\r\n     */\r\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the number of accounts that have `role`. Can be used\r\n     * together with {getRoleMember} to enumerate all bearers of a role.\r\n     */\r\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\r\n}\r\n"
			},
			"ERC20/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev External interface of AccessControl declared to support ERC165 detection.\r\n */\r\ninterface IAccessControl {\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {AccessControl-_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    // function renounceRole(bytes32 role, address account) external;\r\n}\r\n"
			},
			"ERC20/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"ERC20/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n    \r\n}\r\n"
			},
			"ERC20/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TOKEN_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pausedOptions",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unPausedOptions",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Overload {grantRole} to track enumerable memberships"
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"revokeRole(bytes32,address)": {
								"details": "Overload {revokeRole} to track enumerable memberships"
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/ERC20.sol\":1443:13639  contract ERC20 is Context, AccessControlEnumerable, IERC20, IERC20Metadata, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20/ERC20.sol\":2109:2280  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20/security/Pausable.sol\":934:939  false */\n  0x00\n    /* \"ERC20/security/Pausable.sol\":924:931  _paused */\n  0x02\n  0x00\n    /* \"ERC20/security/Pausable.sol\":924:939  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ERC20/ERC20.sol\":2184:2189  name_ */\n  dup2\n    /* \"ERC20/ERC20.sol\":2176:2181  _name */\n  0x06\n    /* \"ERC20/ERC20.sol\":2176:2189  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20/ERC20.sol\":2210:2217  symbol_ */\n  dup1\n    /* \"ERC20/ERC20.sol\":2200:2207  _symbol */\n  0x07\n    /* \"ERC20/ERC20.sol\":2200:2217  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"ERC20/ERC20.sol\":2228:2272  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_11\n    /* \"ERC20/access/AccessControl.sol\":2052:2056  0x00 */\n  0x00\n    /* \"ERC20/ERC20.sol\":2239:2257  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"ERC20/ERC20.sol\":2259:2271  _msgSender() */\n  tag_12\n    /* \"ERC20/ERC20.sol\":2259:2269  _msgSender */\n  shl(0x20, tag_13)\n    /* \"ERC20/ERC20.sol\":2259:2271  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"ERC20/ERC20.sol\":2228:2238  _setupRole */\n  shl(0x20, tag_14)\n    /* \"ERC20/ERC20.sol\":2228:2272  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"ERC20/ERC20.sol\":2109:2280  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20/ERC20.sol\":1443:13639  contract ERC20 is Context, AccessControlEnumerable, IERC20, IERC20Metadata, Pausable {... */\n  jump(tag_15)\n    /* \"ERC20/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"ERC20/utils/Context.sol\":655:662  address */\n  0x00\n    /* \"ERC20/utils/Context.sol\":682:692  msg.sender */\n  caller\n    /* \"ERC20/utils/Context.sol\":675:692  return msg.sender */\n  swap1\n  pop\n    /* \"ERC20/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"ERC20/access/AccessControlEnumerable.sol\":2909:3078  function _setupRole(bytes32 role, address account) internal virtual override {... */\ntag_14:\n    /* \"ERC20/access/AccessControlEnumerable.sol\":2997:3028  super._setupRole(role, account) */\n  tag_18\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3014:3018  role */\n  dup3\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3020:3027  account */\n  dup3\n    /* \"ERC20/access/AccessControlEnumerable.sol\":2997:3013  super._setupRole */\n  or(tag_0_124, shl(0x20, tag_19))\n    /* \"ERC20/access/AccessControlEnumerable.sol\":2997:3028  super._setupRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3039:3070  _roleMembers[role].add(account) */\n  tag_20\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3062:3069  account */\n  dup2\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3039:3051  _roleMembers */\n  0x01\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3039:3057  _roleMembers[role] */\n  0x00\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3052:3056  role */\n  dup6\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3039:3057  _roleMembers[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3039:3061  _roleMembers[role].add */\n  or(tag_0_125, shl(0x20, tag_21))\n  swap1\n    /* \"ERC20/access/AccessControlEnumerable.sol\":3039:3070  _roleMembers[role].add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n  pop\n    /* \"ERC20/access/AccessControlEnumerable.sol\":2909:3078  function _setupRole(bytes32 role, address account) internal virtual override {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/access/AccessControl.sol\":6353:6465  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_19:\n    /* \"ERC20/access/AccessControl.sol\":6432:6457  _grantRole(role, account) */\n  tag_23\n    /* \"ERC20/access/AccessControl.sol\":6443:6447  role */\n  dup3\n    /* \"ERC20/access/AccessControl.sol\":6449:6456  account */\n  dup3\n    /* \"ERC20/access/AccessControl.sol\":6432:6442  _grantRole */\n  shl(0x20, tag_24)\n    /* \"ERC20/access/AccessControl.sol\":6432:6457  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"ERC20/access/AccessControl.sol\":6353:6465  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7767:7919  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_21:\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7837:7841  bool */\n  0x00\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7861:7911  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_26\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7866:7869  set */\n  dup4\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7866:7876  set._inner */\n  0x00\n  add\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7902:7907  value */\n  dup4\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7886:7909  uint256(uint160(value)) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7878:7910  bytes32(uint256(uint160(value))) */\n  0x00\n  shl\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7861:7865  _add */\n  shl(0x20, tag_27)\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7861:7911  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7854:7911  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":7767:7919  function add(AddressSet storage set, address value) internal returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/access/AccessControl.sol\":6977:7215  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_24:\n    /* \"ERC20/access/AccessControl.sol\":7061:7083  hasRole(role, account) */\n  tag_29\n    /* \"ERC20/access/AccessControl.sol\":7069:7073  role */\n  dup3\n    /* \"ERC20/access/AccessControl.sol\":7075:7082  account */\n  dup3\n    /* \"ERC20/access/AccessControl.sol\":7061:7068  hasRole */\n  shl(0x20, tag_30)\n    /* \"ERC20/access/AccessControl.sol\":7061:7083  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"ERC20/access/AccessControl.sol\":7056:7208  if (!hasRole(role, account)) {... */\n  tag_31\n  jumpi\n    /* \"ERC20/access/AccessControl.sol\":7132:7136  true */\n  0x01\n    /* \"ERC20/access/AccessControl.sol\":7100:7106  _roles */\n  0x00\n    /* \"ERC20/access/AccessControl.sol\":7100:7112  _roles[role] */\n  dup1\n    /* \"ERC20/access/AccessControl.sol\":7107:7111  role */\n  dup5\n    /* \"ERC20/access/AccessControl.sol\":7100:7112  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ERC20/access/AccessControl.sol\":7100:7120  _roles[role].members */\n  0x00\n  add\n    /* \"ERC20/access/AccessControl.sol\":7100:7129  _roles[role].members[account] */\n  0x00\n    /* \"ERC20/access/AccessControl.sol\":7121:7128  account */\n  dup4\n    /* \"ERC20/access/AccessControl.sol\":7100:7129  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"ERC20/access/AccessControl.sol\":7100:7136  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ERC20/access/AccessControl.sol\":7183:7195  _msgSender() */\n  tag_32\n    /* \"ERC20/access/AccessControl.sol\":7183:7193  _msgSender */\n  shl(0x20, tag_13)\n    /* \"ERC20/access/AccessControl.sol\":7183:7195  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"ERC20/access/AccessControl.sol\":7156:7196  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20/access/AccessControl.sol\":7174:7181  account */\n  dup2\n    /* \"ERC20/access/AccessControl.sol\":7156:7196  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20/access/AccessControl.sol\":7168:7172  role */\n  dup4\n    /* \"ERC20/access/AccessControl.sol\":7156:7196  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"ERC20/access/AccessControl.sol\":7056:7208  if (!hasRole(role, account)) {... */\ntag_31:\n    /* \"ERC20/access/AccessControl.sol\":6977:7215  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1682:2096  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_27:\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1745:1749  bool */\n  0x00\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1767:1788  _contains(set, value) */\n  tag_34\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1777:1780  set */\n  dup4\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1782:1787  value */\n  dup4\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1767:1776  _contains */\n  shl(0x20, tag_35)\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1767:1788  _contains(set, value) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1762:2089  if (!_contains(set, value)) {... */\n  tag_36\n  jumpi\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1805:1808  set */\n  dup3\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1805:1816  set._values */\n  0x00\n  add\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1822:1827  value */\n  dup3\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1805:1828  set._values.push(value) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1988:1991  set */\n  dup3\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1988:1999  set._values */\n  0x00\n  add\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1988:2006  set._values.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1969  set */\n  dup4\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1978  set._indexes */\n  0x01\n  add\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1985  set._indexes[value] */\n  0x00\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1979:1984  value */\n  dup5\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1985  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:2006  set._indexes[value] = set._values.length */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":2028:2032  true */\n  0x01\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":2021:2032  return true */\n  swap1\n  pop\n  jump(tag_33)\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1762:2089  if (!_contains(set, value)) {... */\ntag_36:\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":2072:2077  false */\n  0x00\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":2065:2077  return false */\n  swap1\n  pop\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":1682:2096  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_33:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/access/AccessControl.sol\":2916:3055  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\ntag_30:\n    /* \"ERC20/access/AccessControl.sol\":2994:2998  bool */\n  0x00\n    /* \"ERC20/access/AccessControl.sol\":3018:3024  _roles */\n  dup1\n    /* \"ERC20/access/AccessControl.sol\":3018:3030  _roles[role] */\n  0x00\n    /* \"ERC20/access/AccessControl.sol\":3025:3029  role */\n  dup5\n    /* \"ERC20/access/AccessControl.sol\":3018:3030  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ERC20/access/AccessControl.sol\":3018:3038  _roles[role].members */\n  0x00\n  add\n    /* \"ERC20/access/AccessControl.sol\":3018:3047  _roles[role].members[account] */\n  0x00\n    /* \"ERC20/access/AccessControl.sol\":3039:3046  account */\n  dup4\n    /* \"ERC20/access/AccessControl.sol\":3018:3047  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"ERC20/access/AccessControl.sol\":3011:3047  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"ERC20/access/AccessControl.sol\":2916:3055  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3778:3907  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_35:\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3851:3855  bool */\n  0x00\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3898:3899  0 */\n  dup1\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3878  set */\n  dup4\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3887  set._indexes */\n  0x01\n  add\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n  0x00\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3888:3893  value */\n  dup5\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3899  set._indexes[value] != 0 */\n  eq\n  iszero\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3868:3899  return set._indexes[value] != 0 */\n  swap1\n  pop\n    /* \"ERC20/utils/structs/EnumerableSet.sol\":3778:3907  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20/ERC20.sol\":1443:13639  contract ERC20 is Context, AccessControlEnumerable, IERC20, IERC20Metadata, Pausable {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_41\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_44\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_43)\ntag_44:\n  dup3\n  0x1f\n  lt\n  tag_45\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_43)\ntag_45:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_43\n  jumpi\n  swap2\n  dup3\n  add\ntag_46:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_47\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_46)\ntag_47:\ntag_43:\n  pop\n  swap1\n  pop\n  tag_48\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  pop\n  swap1\n  jump\t// out\ntag_49:\ntag_50:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_51\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_50)\ntag_51:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_52:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_53:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_54:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_55:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_56:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_57:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_58:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_59:\n    /* \"#utility.yul\":957:984   */\n  tag_75\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_57\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_77\n  tag_58\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1030:1118   */\ntag_76:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_60:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_79\n  tag_52\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_80\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_61:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_83\n  tag_58\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1434:1490   */\ntag_82:\n    /* \"#utility.yul\":1508:1537   */\n  tag_84\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_57\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_62:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_86:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_89:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_63:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_91\n    /* \"#utility.yul\":2053:2102   */\n  tag_92\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_61\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2037:2103   */\n  tag_60\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_94\n  tag_56\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2178:2290   */\ntag_93:\n    /* \"#utility.yul\":2299:2338   */\n  tag_95\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_62\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_64:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_98\n  tag_55\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2447:2569   */\ntag_97:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_99\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_63\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_102\n  tag_53\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2849:2968   */\ntag_101:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_104\n  tag_54\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3044:3161   */\ntag_103:\n    /* \"#utility.yul\":3185:3259   */\n  tag_105\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_64\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_107\n  tag_54\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3346:3463   */\ntag_106:\n    /* \"#utility.yul\":3487:3561   */\n  tag_108\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_64\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_65:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_42:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_111:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  sub\n    /* \"#utility.yul\":4000:4084   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_113\n  tag_65\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4000:4084   */\ntag_112:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC20/ERC20.sol\":1443:13639  contract ERC20 is Context, AccessControlEnumerable, IERC20, IERC20Metadata, Pausable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/ERC20.sol\":1443:13639  contract ERC20 is Context, AccessControlEnumerable, IERC20, IERC20Metadata, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc6e858fe\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd0bbb0d7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x248a9ca3\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5394a892\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20/access/AccessControlEnumerable.sol\":568:782  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":2350:2450  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":5178:5347  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":3879:3987  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":5829:6426  function transferFrom(... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControl.sol\":4031:4154  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1926:2122  function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"ERC20/ERC20.sol\":3312:3404  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":6835:7142  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":3412:3608  function pausedOptions() public virtual returns (bool) {... */\n    tag_12:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/security/Pausable.sol\":1041:1125  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4050:4177  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1381:1526  function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {... */\n    tag_15:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControl.sol\":2916:3055  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_16:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":2569:2673  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControl.sol\":2007:2056  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":7645:8150  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4504:4819  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":3616:3816  function unPausedOptions() public virtual returns (bool) {... */\n    tag_21:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1700:1834  function getRoleMemberCount(bytes32 role) public view override returns (uint256) {... */\n    tag_22:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":1758:1788  uint256 public MAX_TOKEN_COUNT */\n    tag_23:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2215:2504  function revokeRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_24:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"ERC20/ERC20.sol\":4880:5031  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_25:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/access/AccessControlEnumerable.sol\":568:782  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":653:657  bool */\n      0x00\n        /* \"ERC20/access/AccessControlEnumerable.sol\":692:734  type(IAccessControlEnumerable).interfaceId */\n      0x5a05180f00000000000000000000000000000000000000000000000000000000\n        /* \"ERC20/access/AccessControlEnumerable.sol\":677:734  interfaceId == type(IAccessControlEnumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC20/access/AccessControlEnumerable.sol\":677:688  interfaceId */\n      dup3\n        /* \"ERC20/access/AccessControlEnumerable.sol\":677:734  interfaceId == type(IAccessControlEnumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC20/access/AccessControlEnumerable.sol\":677:774  interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_127\n      jumpi\n      pop\n        /* \"ERC20/access/AccessControlEnumerable.sol\":738:774  super.supportsInterface(interfaceId) */\n      tag_128\n        /* \"ERC20/access/AccessControlEnumerable.sol\":762:773  interfaceId */\n      dup3\n        /* \"ERC20/access/AccessControlEnumerable.sol\":738:761  super.supportsInterface */\n      tag_129\n        /* \"ERC20/access/AccessControlEnumerable.sol\":738:774  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_128:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":677:774  interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_127:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":670:774  return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"ERC20/access/AccessControlEnumerable.sol\":568:782  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":2350:2450  function name() public view virtual override returns (string memory) {... */\n    tag_36:\n        /* \"ERC20/ERC20.sol\":2404:2417  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2437:2442  _name */\n      0x06\n        /* \"ERC20/ERC20.sol\":2430:2442  return _name */\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2350:2450  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":5178:5347  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_42:\n        /* \"ERC20/ERC20.sol\":5261:5265  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":5278:5317  _approve(_msgSender(), spender, amount) */\n      tag_138\n        /* \"ERC20/ERC20.sol\":5287:5299  _msgSender() */\n      tag_139\n        /* \"ERC20/ERC20.sol\":5287:5297  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":5287:5299  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"ERC20/ERC20.sol\":5301:5308  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":5310:5316  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":5278:5286  _approve */\n      tag_141\n        /* \"ERC20/ERC20.sol\":5278:5317  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_138:\n        /* \"ERC20/ERC20.sol\":5335:5339  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":5328:5339  return true */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":5178:5347  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3879:3987  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"ERC20/ERC20.sol\":3940:3947  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3967:3979  _totalSupply */\n      sload(0x05)\n        /* \"ERC20/ERC20.sol\":3960:3979  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3879:3987  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":5829:6426  function transferFrom(... */\n    tag_51:\n        /* \"ERC20/ERC20.sol\":5969:5973  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":6007:6019  _msgSender() */\n      tag_144\n        /* \"ERC20/ERC20.sol\":6007:6017  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":6007:6019  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"ERC20/ERC20.sol\":5994:6019  recipient != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":5994:6003  recipient */\n      dup4\n        /* \"ERC20/ERC20.sol\":5994:6019  recipient != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20/ERC20.sol\":5986:6078  require(recipient != _msgSender(), \"ERC20: caller and recipient must be different address.\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"ERC20/ERC20.sol\":6091:6127  _transfer(sender, recipient, amount) */\n      tag_148\n        /* \"ERC20/ERC20.sol\":6101:6107  sender */\n      dup5\n        /* \"ERC20/ERC20.sol\":6109:6118  recipient */\n      dup5\n        /* \"ERC20/ERC20.sol\":6120:6126  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":6091:6100  _transfer */\n      tag_149\n        /* \"ERC20/ERC20.sol\":6091:6127  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_148:\n        /* \"ERC20/ERC20.sol\":6140:6164  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":6167:6178  _allowances */\n      0x04\n        /* \"ERC20/ERC20.sol\":6167:6186  _allowances[sender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":6179:6185  sender */\n      dup7\n        /* \"ERC20/ERC20.sol\":6167:6186  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":6167:6200  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"ERC20/ERC20.sol\":6187:6199  _msgSender() */\n      tag_150\n        /* \"ERC20/ERC20.sol\":6187:6197  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":6187:6199  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"ERC20/ERC20.sol\":6167:6200  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":6140:6200  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":6239:6245  amount */\n      dup3\n        /* \"ERC20/ERC20.sol\":6219:6235  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":6219:6245  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":6211:6290  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"ERC20/ERC20.sol\":6326:6383  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_154\n        /* \"ERC20/ERC20.sol\":6335:6341  sender */\n      dup6\n        /* \"ERC20/ERC20.sol\":6343:6355  _msgSender() */\n      tag_155\n        /* \"ERC20/ERC20.sol\":6343:6353  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":6343:6355  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"ERC20/ERC20.sol\":6376:6382  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":6357:6373  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":6357:6382  currentAllowance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":6326:6334  _approve */\n      tag_141\n        /* \"ERC20/ERC20.sol\":6326:6383  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_154:\n        /* \"ERC20/ERC20.sol\":6414:6418  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":6407:6418  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":5829:6426  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":4031:4154  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n    tag_56:\n        /* \"ERC20/access/AccessControl.sol\":4097:4104  bytes32 */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":4124:4130  _roles */\n      dup1\n        /* \"ERC20/access/AccessControl.sol\":4124:4136  _roles[role] */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":4131:4135  role */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":4124:4136  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControl.sol\":4124:4146  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"ERC20/access/AccessControl.sol\":4117:4146  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"ERC20/access/AccessControl.sol\":4031:4154  function getRoleAdmin(bytes32 role) public view override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1926:2122  function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_62:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2042:2072  super.grantRole(role, account) */\n      tag_158\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2058:2062  role */\n      dup3\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2064:2071  account */\n      dup3\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2042:2057  super.grantRole */\n      tag_159\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2042:2072  super.grantRole(role, account) */\n      jump\t// in\n    tag_158:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2083:2114  _roleMembers[role].add(account) */\n      tag_160\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2106:2113  account */\n      dup2\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2083:2095  _roleMembers */\n      0x01\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2083:2101  _roleMembers[role] */\n      0x00\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2096:2100  role */\n      dup6\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2083:2101  _roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2083:2105  _roleMembers[role].add */\n      tag_125\n      swap1\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2083:2114  _roleMembers[role].add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n      pop\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1926:2122  function grantRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3312:3404  function decimals() public view virtual override returns (uint8) {... */\n    tag_64:\n        /* \"ERC20/ERC20.sol\":3370:3375  uint8 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3395:3396  8 */\n      0x08\n        /* \"ERC20/ERC20.sol\":3388:3396  return 8 */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3312:3404  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":6835:7142  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_69:\n        /* \"ERC20/ERC20.sol\":6923:6927  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":6948:6989  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_163\n        /* \"ERC20/access/AccessControl.sol\":2052:2056  0x00 */\n      0x00\n        /* \"ERC20/ERC20.sol\":6956:6974  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"ERC20/ERC20.sol\":6976:6988  _msgSender() */\n      tag_164\n        /* \"ERC20/ERC20.sol\":6976:6986  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":6976:6988  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"ERC20/ERC20.sol\":6948:6955  hasRole */\n      tag_90\n        /* \"ERC20/ERC20.sol\":6948:6989  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_163:\n        /* \"ERC20/ERC20.sol\":6940:7021  require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"ERC20/ERC20.sol\":7032:7112  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_168\n        /* \"ERC20/ERC20.sol\":7041:7053  _msgSender() */\n      tag_169\n        /* \"ERC20/ERC20.sol\":7041:7051  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":7041:7053  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"ERC20/ERC20.sol\":7055:7062  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":7101:7111  addedValue */\n      dup5\n        /* \"ERC20/ERC20.sol\":7064:7075  _allowances */\n      0x04\n        /* \"ERC20/ERC20.sol\":7064:7089  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20/ERC20.sol\":7076:7088  _msgSender() */\n      tag_170\n        /* \"ERC20/ERC20.sol\":7076:7086  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":7076:7088  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"ERC20/ERC20.sol\":7064:7089  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":7064:7098  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":7090:7097  spender */\n      dup9\n        /* \"ERC20/ERC20.sol\":7064:7098  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":7064:7111  _allowances[_msgSender()][spender] + addedValue */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"ERC20/ERC20.sol\":7032:7040  _approve */\n      tag_141\n        /* \"ERC20/ERC20.sol\":7032:7112  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n    tag_168:\n        /* \"ERC20/ERC20.sol\":7130:7134  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":7123:7134  return true */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":6835:7142  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3412:3608  function pausedOptions() public virtual returns (bool) {... */\n    tag_72:\n        /* \"ERC20/ERC20.sol\":3461:3465  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":3486:3527  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_174\n        /* \"ERC20/access/AccessControl.sol\":2052:2056  0x00 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3494:3512  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"ERC20/ERC20.sol\":3514:3526  _msgSender() */\n      tag_175\n        /* \"ERC20/ERC20.sol\":3514:3524  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":3514:3526  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"ERC20/ERC20.sol\":3486:3493  hasRole */\n      tag_90\n        /* \"ERC20/ERC20.sol\":3486:3527  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_174:\n        /* \"ERC20/ERC20.sol\":3478:3559  require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_167\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"ERC20/ERC20.sol\":3570:3578  _pause() */\n      tag_178\n        /* \"ERC20/ERC20.sol\":3570:3576  _pause */\n      tag_179\n        /* \"ERC20/ERC20.sol\":3570:3578  _pause() */\n      jump\t// in\n    tag_178:\n        /* \"ERC20/ERC20.sol\":3596:3600  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":3589:3600  return true */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3412:3608  function pausedOptions() public virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/security/Pausable.sol\":1041:1125  function paused() public view virtual returns (bool) {... */\n    tag_75:\n        /* \"ERC20/security/Pausable.sol\":1088:1092  bool */\n      0x00\n        /* \"ERC20/security/Pausable.sol\":1111:1118  _paused */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20/security/Pausable.sol\":1104:1118  return _paused */\n      swap1\n      pop\n        /* \"ERC20/security/Pausable.sol\":1041:1125  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4050:4177  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_80:\n        /* \"ERC20/ERC20.sol\":4124:4131  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":4151:4160  _balances */\n      0x03\n        /* \"ERC20/ERC20.sol\":4151:4169  _balances[account] */\n      0x00\n        /* \"ERC20/ERC20.sol\":4161:4168  account */\n      dup4\n        /* \"ERC20/ERC20.sol\":4151:4169  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":4144:4169  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":4050:4177  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1381:1526  function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {... */\n    tag_85:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1463:1470  address */\n      0x00\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1490:1518  _roleMembers[role].at(index) */\n      tag_183\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1512:1517  index */\n      dup3\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1490:1502  _roleMembers */\n      0x01\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1490:1508  _roleMembers[role] */\n      0x00\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1503:1507  role */\n      dup7\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1490:1508  _roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1490:1511  _roleMembers[role].at */\n      tag_184\n      swap1\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1490:1518  _roleMembers[role].at(index) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1483:1518  return _roleMembers[role].at(index) */\n      swap1\n      pop\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1381:1526  function getRoleMember(bytes32 role, uint256 index) public view override returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":2916:3055  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_90:\n        /* \"ERC20/access/AccessControl.sol\":2994:2998  bool */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":3018:3024  _roles */\n      dup1\n        /* \"ERC20/access/AccessControl.sol\":3018:3030  _roles[role] */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":3025:3029  role */\n      dup5\n        /* \"ERC20/access/AccessControl.sol\":3018:3030  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControl.sol\":3018:3038  _roles[role].members */\n      0x00\n      add\n        /* \"ERC20/access/AccessControl.sol\":3018:3047  _roles[role].members[account] */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":3039:3046  account */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":3018:3047  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20/access/AccessControl.sol\":3011:3047  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"ERC20/access/AccessControl.sol\":2916:3055  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":2569:2673  function symbol() public view virtual override returns (string memory) {... */\n    tag_93:\n        /* \"ERC20/ERC20.sol\":2625:2638  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2658:2665  _symbol */\n      0x07\n        /* \"ERC20/ERC20.sol\":2651:2665  return _symbol */\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_132\n      jump\t// in\n    tag_187:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_132\n      jump\t// in\n    tag_188:\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_190\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_189)\n    tag_190:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_191:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_191\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2569:2673  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":2007:2056  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_96:\n        /* \"ERC20/access/AccessControl.sol\":2052:2056  0x00 */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":2007:2056  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":7645:8150  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_100:\n        /* \"ERC20/ERC20.sol\":7738:7742  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":7763:7804  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_193\n        /* \"ERC20/access/AccessControl.sol\":2052:2056  0x00 */\n      0x00\n        /* \"ERC20/ERC20.sol\":7771:7789  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"ERC20/ERC20.sol\":7791:7803  _msgSender() */\n      tag_194\n        /* \"ERC20/ERC20.sol\":7791:7801  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":7791:7803  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"ERC20/ERC20.sol\":7763:7770  hasRole */\n      tag_90\n        /* \"ERC20/ERC20.sol\":7763:7804  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_193:\n        /* \"ERC20/ERC20.sol\":7755:7836  require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_167\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"ERC20/ERC20.sol\":7847:7871  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":7874:7885  _allowances */\n      0x04\n        /* \"ERC20/ERC20.sol\":7874:7899  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20/ERC20.sol\":7886:7898  _msgSender() */\n      tag_197\n        /* \"ERC20/ERC20.sol\":7886:7896  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":7886:7898  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"ERC20/ERC20.sol\":7874:7899  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":7874:7908  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":7900:7907  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":7874:7908  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":7847:7908  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":7947:7962  subtractedValue */\n      dup3\n        /* \"ERC20/ERC20.sol\":7927:7943  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":7927:7962  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":7919:8004  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"ERC20/ERC20.sol\":8040:8107  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_201\n        /* \"ERC20/ERC20.sol\":8049:8061  _msgSender() */\n      tag_202\n        /* \"ERC20/ERC20.sol\":8049:8059  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":8049:8061  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"ERC20/ERC20.sol\":8063:8070  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":8091:8106  subtractedValue */\n      dup6\n        /* \"ERC20/ERC20.sol\":8072:8088  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":8072:8106  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20/ERC20.sol\":8040:8048  _approve */\n      tag_141\n        /* \"ERC20/ERC20.sol\":8040:8107  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_201:\n        /* \"ERC20/ERC20.sol\":8138:8142  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":8131:8142  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":7645:8150  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4504:4819  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_104:\n        /* \"ERC20/ERC20.sol\":4590:4594  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":4642:4654  _msgSender() */\n      tag_204\n        /* \"ERC20/ERC20.sol\":4642:4652  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":4642:4654  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"ERC20/ERC20.sol\":4629:4654  recipient != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":4629:4638  recipient */\n      dup4\n        /* \"ERC20/ERC20.sol\":4629:4654  recipient != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20/ERC20.sol\":4607:4736  require(... */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_147\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"ERC20/ERC20.sol\":4747:4789  _transfer(_msgSender(), recipient, amount) */\n      tag_207\n        /* \"ERC20/ERC20.sol\":4757:4769  _msgSender() */\n      tag_208\n        /* \"ERC20/ERC20.sol\":4757:4767  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":4757:4769  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"ERC20/ERC20.sol\":4771:4780  recipient */\n      dup5\n        /* \"ERC20/ERC20.sol\":4782:4788  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":4747:4756  _transfer */\n      tag_149\n        /* \"ERC20/ERC20.sol\":4747:4789  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_207:\n        /* \"ERC20/ERC20.sol\":4807:4811  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":4800:4811  return true */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":4504:4819  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3616:3816  function unPausedOptions() public virtual returns (bool) {... */\n    tag_107:\n        /* \"ERC20/ERC20.sol\":3667:3671  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":3692:3733  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_210\n        /* \"ERC20/access/AccessControl.sol\":2052:2056  0x00 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3700:3718  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"ERC20/ERC20.sol\":3720:3732  _msgSender() */\n      tag_211\n        /* \"ERC20/ERC20.sol\":3720:3730  _msgSender */\n      tag_140\n        /* \"ERC20/ERC20.sol\":3720:3732  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"ERC20/ERC20.sol\":3692:3699  hasRole */\n      tag_90\n        /* \"ERC20/ERC20.sol\":3692:3733  hasRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_210:\n        /* \"ERC20/ERC20.sol\":3684:3765  require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"ERC20: must have admin role\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_167\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"ERC20/ERC20.sol\":3776:3786  _unpause() */\n      tag_214\n        /* \"ERC20/ERC20.sol\":3776:3784  _unpause */\n      tag_215\n        /* \"ERC20/ERC20.sol\":3776:3786  _unpause() */\n      jump\t// in\n    tag_214:\n        /* \"ERC20/ERC20.sol\":3804:3808  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":3797:3808  return true */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3616:3816  function unPausedOptions() public virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1700:1834  function getRoleMemberCount(bytes32 role) public view override returns (uint256) {... */\n    tag_111:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1772:1779  uint256 */\n      0x00\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1799:1826  _roleMembers[role].length() */\n      tag_217\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1799:1811  _roleMembers */\n      0x01\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1799:1817  _roleMembers[role] */\n      0x00\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1812:1816  role */\n      dup5\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1799:1817  _roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1799:1824  _roleMembers[role].length */\n      tag_218\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1799:1826  _roleMembers[role].length() */\n      jump\t// in\n    tag_217:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1792:1826  return _roleMembers[role].length() */\n      swap1\n      pop\n        /* \"ERC20/access/AccessControlEnumerable.sol\":1700:1834  function getRoleMemberCount(bytes32 role) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":1758:1788  uint256 public MAX_TOKEN_COUNT */\n    tag_114:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2215:2504  function revokeRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n    tag_118:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2351:2363  _msgSender() */\n      tag_220\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2351:2361  _msgSender */\n      tag_140\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2351:2363  _msgSender() */\n      jump\t// in\n    tag_220:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2340:2363  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2340:2347  account */\n      dup2\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2340:2363  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2332:2409  require(account != _msgSender(), \"ERC20: caller can not revoke own address.\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2420:2451  super.revokeRole(role, account) */\n      tag_224\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2437:2441  role */\n      dup3\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2443:2450  account */\n      dup3\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2420:2436  super.revokeRole */\n      tag_225\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2420:2451  super.revokeRole(role, account) */\n      jump\t// in\n    tag_224:\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2462:2496  _roleMembers[role].remove(account) */\n      tag_226\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2488:2495  account */\n      dup2\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2462:2474  _roleMembers */\n      0x01\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2462:2480  _roleMembers[role] */\n      0x00\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2475:2479  role */\n      dup6\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2462:2480  _roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2462:2487  _roleMembers[role].remove */\n      tag_227\n      swap1\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2462:2496  _roleMembers[role].remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n      pop\n        /* \"ERC20/access/AccessControlEnumerable.sol\":2215:2504  function revokeRole(bytes32 role, address account) public virtual override(AccessControl, IAccessControl) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4880:5031  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_122:\n        /* \"ERC20/ERC20.sol\":4969:4976  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":4996:5007  _allowances */\n      0x04\n        /* \"ERC20/ERC20.sol\":4996:5014  _allowances[owner] */\n      0x00\n        /* \"ERC20/ERC20.sol\":5008:5013  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":4996:5014  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":4996:5023  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":5015:5022  spender */\n      dup4\n        /* \"ERC20/ERC20.sol\":4996:5023  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":4989:5023  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":4880:5031  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":6353:6465  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_124:\n        /* \"ERC20/access/AccessControl.sol\":6432:6457  _grantRole(role, account) */\n      tag_230\n        /* \"ERC20/access/AccessControl.sol\":6443:6447  role */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":6449:6456  account */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":6432:6442  _grantRole */\n      tag_231\n        /* \"ERC20/access/AccessControl.sol\":6432:6457  _grantRole(role, account) */\n      jump\t// in\n    tag_230:\n        /* \"ERC20/access/AccessControl.sol\":6353:6465  function _setupRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7767:7919  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_125:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7837:7841  bool */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7861:7911  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_233\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7866:7869  set */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7866:7876  set._inner */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7902:7907  value */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7886:7909  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7878:7910  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7861:7865  _add */\n      tag_234\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7861:7911  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_233:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7854:7911  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":7767:7919  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":2620:2824  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_129:\n        /* \"ERC20/access/AccessControl.sol\":2705:2709  bool */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":2744:2776  type(IAccessControl).interfaceId */\n      0x4f3351b500000000000000000000000000000000000000000000000000000000\n        /* \"ERC20/access/AccessControl.sol\":2729:2776  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC20/access/AccessControl.sol\":2729:2740  interfaceId */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":2729:2776  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC20/access/AccessControl.sol\":2729:2816  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_236\n      jumpi\n      pop\n        /* \"ERC20/access/AccessControl.sol\":2780:2816  super.supportsInterface(interfaceId) */\n      tag_237\n        /* \"ERC20/access/AccessControl.sol\":2804:2815  interfaceId */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":2780:2803  super.supportsInterface */\n      tag_238\n        /* \"ERC20/access/AccessControl.sol\":2780:2816  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_237:\n        /* \"ERC20/access/AccessControl.sol\":2729:2816  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_236:\n        /* \"ERC20/access/AccessControl.sol\":2722:2816  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"ERC20/access/AccessControl.sol\":2620:2824  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n    tag_140:\n        /* \"ERC20/utils/Context.sol\":655:662  address */\n      0x00\n        /* \"ERC20/utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"ERC20/utils/Context.sol\":675:692  return msg.sender */\n      swap1\n      pop\n        /* \"ERC20/utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":11801:12181  function _approve(... */\n    tag_141:\n        /* \"ERC20/ERC20.sol\":11954:11955  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":11937:11956  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":11937:11942  owner */\n      dup4\n        /* \"ERC20/ERC20.sol\":11937:11956  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20/ERC20.sol\":11929:11997  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"ERC20/ERC20.sol\":12035:12036  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":12016:12037  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":12016:12023  spender */\n      dup3\n        /* \"ERC20/ERC20.sol\":12016:12037  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20/ERC20.sol\":12008:12076  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"ERC20/ERC20.sol\":12119:12125  amount */\n      dup1\n        /* \"ERC20/ERC20.sol\":12089:12100  _allowances */\n      0x04\n        /* \"ERC20/ERC20.sol\":12089:12107  _allowances[owner] */\n      0x00\n        /* \"ERC20/ERC20.sol\":12101:12106  owner */\n      dup6\n        /* \"ERC20/ERC20.sol\":12089:12107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":12089:12116  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":12108:12115  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":12089:12116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":12089:12125  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":12157:12164  spender */\n      dup2\n        /* \"ERC20/ERC20.sol\":12141:12173  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":12150:12155  owner */\n      dup4\n        /* \"ERC20/ERC20.sol\":12141:12173  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20/ERC20.sol\":12166:12172  amount */\n      dup4\n        /* \"ERC20/ERC20.sol\":12141:12173  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_247\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":11801:12181  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":8640:9449  function _transfer(... */\n    tag_149:\n        /* \"ERC20/ERC20.sol\":8782:8790  paused() */\n      tag_249\n        /* \"ERC20/ERC20.sol\":8782:8788  paused */\n      tag_75\n        /* \"ERC20/ERC20.sol\":8782:8790  paused() */\n      jump\t// in\n    tag_249:\n        /* \"ERC20/ERC20.sol\":8781:8790  !paused() */\n      iszero\n        /* \"ERC20/ERC20.sol\":8773:8839  require(!paused(), \"ERC20: transfer function is paused by admin.\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"ERC20/ERC20.sol\":8876:8877  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":8858:8878  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":8858:8864  sender */\n      dup4\n        /* \"ERC20/ERC20.sol\":8858:8878  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20/ERC20.sol\":8850:8920  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"ERC20/ERC20.sol\":8960:8961  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":8939:8962  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":8939:8948  recipient */\n      dup3\n        /* \"ERC20/ERC20.sol\":8939:8962  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20/ERC20.sol\":8931:9002  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"ERC20/ERC20.sol\":9013:9060  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_259\n        /* \"ERC20/ERC20.sol\":9034:9040  sender */\n      dup4\n        /* \"ERC20/ERC20.sol\":9042:9051  recipient */\n      dup4\n        /* \"ERC20/ERC20.sol\":9053:9059  amount */\n      dup4\n        /* \"ERC20/ERC20.sol\":9013:9033  _beforeTokenTransfer */\n      tag_260\n        /* \"ERC20/ERC20.sol\":9013:9060  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_259:\n        /* \"ERC20/ERC20.sol\":9073:9094  uint256 senderBalance */\n      0x00\n        /* \"ERC20/ERC20.sol\":9097:9106  _balances */\n      0x03\n        /* \"ERC20/ERC20.sol\":9097:9114  _balances[sender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":9107:9113  sender */\n      dup6\n        /* \"ERC20/ERC20.sol\":9097:9114  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":9073:9114  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":9150:9156  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":9133:9146  senderBalance */\n      dup2\n        /* \"ERC20/ERC20.sol\":9133:9156  senderBalance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":9125:9199  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"ERC20/ERC20.sol\":9271:9277  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":9255:9268  senderBalance */\n      dup2\n        /* \"ERC20/ERC20.sol\":9255:9277  senderBalance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":9235:9244  _balances */\n      0x03\n        /* \"ERC20/ERC20.sol\":9235:9252  _balances[sender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":9245:9251  sender */\n      dup7\n        /* \"ERC20/ERC20.sol\":9235:9252  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":9235:9277  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":9323:9329  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":9299:9308  _balances */\n      0x03\n        /* \"ERC20/ERC20.sol\":9299:9319  _balances[recipient] */\n      0x00\n        /* \"ERC20/ERC20.sol\":9309:9318  recipient */\n      dup6\n        /* \"ERC20/ERC20.sol\":9299:9319  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20/ERC20.sol\":9299:9329  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_264\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_264:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":9364:9373  recipient */\n      dup3\n        /* \"ERC20/ERC20.sol\":9347:9382  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":9356:9362  sender */\n      dup5\n        /* \"ERC20/ERC20.sol\":9347:9382  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20/ERC20.sol\":9375:9381  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":9347:9382  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":9395:9441  _afterTokenTransfer(sender, recipient, amount) */\n      tag_266\n        /* \"ERC20/ERC20.sol\":9415:9421  sender */\n      dup5\n        /* \"ERC20/ERC20.sol\":9423:9432  recipient */\n      dup5\n        /* \"ERC20/ERC20.sol\":9434:9440  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":9395:9414  _afterTokenTransfer */\n      tag_267\n        /* \"ERC20/ERC20.sol\":9395:9441  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_266:\n        /* \"ERC20/ERC20.sol\":8762:9449  {... */\n      pop\n        /* \"ERC20/ERC20.sol\":8640:9449  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":4416:4563  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_159:\n        /* \"ERC20/access/AccessControl.sol\":4499:4517  getRoleAdmin(role) */\n      tag_268\n        /* \"ERC20/access/AccessControl.sol\":4512:4516  role */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":4499:4511  getRoleAdmin */\n      tag_56\n        /* \"ERC20/access/AccessControl.sol\":4499:4517  getRoleAdmin(role) */\n      jump\t// in\n    tag_268:\n        /* \"ERC20/access/AccessControl.sol\":2498:2528  _checkRole(role, _msgSender()) */\n      tag_270\n        /* \"ERC20/access/AccessControl.sol\":2509:2513  role */\n      dup2\n        /* \"ERC20/access/AccessControl.sol\":2515:2527  _msgSender() */\n      tag_271\n        /* \"ERC20/access/AccessControl.sol\":2515:2525  _msgSender */\n      tag_140\n        /* \"ERC20/access/AccessControl.sol\":2515:2527  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"ERC20/access/AccessControl.sol\":2498:2508  _checkRole */\n      tag_272\n        /* \"ERC20/access/AccessControl.sol\":2498:2528  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_270:\n        /* \"ERC20/access/AccessControl.sol\":4530:4555  _grantRole(role, account) */\n      tag_274\n        /* \"ERC20/access/AccessControl.sol\":4541:4545  role */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":4547:4554  account */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":4530:4540  _grantRole */\n      tag_231\n        /* \"ERC20/access/AccessControl.sol\":4530:4555  _grantRole(role, account) */\n      jump\t// in\n    tag_274:\n        /* \"ERC20/access/AccessControl.sol\":4416:4563  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/security/Pausable.sol\":1806:1921  function _pause() internal virtual whenNotPaused {... */\n    tag_179:\n        /* \"ERC20/security/Pausable.sol\":1355:1363  paused() */\n      tag_276\n        /* \"ERC20/security/Pausable.sol\":1355:1361  paused */\n      tag_75\n        /* \"ERC20/security/Pausable.sol\":1355:1363  paused() */\n      jump\t// in\n    tag_276:\n        /* \"ERC20/security/Pausable.sol\":1354:1363  !paused() */\n      iszero\n        /* \"ERC20/security/Pausable.sol\":1346:1384  require(!paused(), \"Pausable: paused\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"ERC20/security/Pausable.sol\":1875:1879  true */\n      0x01\n        /* \"ERC20/security/Pausable.sol\":1865:1872  _paused */\n      0x02\n      0x00\n        /* \"ERC20/security/Pausable.sol\":1865:1879  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20/security/Pausable.sol\":1894:1914  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"ERC20/security/Pausable.sol\":1901:1913  _msgSender() */\n      tag_281\n        /* \"ERC20/security/Pausable.sol\":1901:1911  _msgSender */\n      tag_140\n        /* \"ERC20/security/Pausable.sol\":1901:1913  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"ERC20/security/Pausable.sol\":1894:1914  Paused(_msgSender()) */\n      mload(0x40)\n      tag_282\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC20/security/Pausable.sol\":1806:1921  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9063:9221  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_184:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9137:9144  address */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9188:9210  _at(set._inner, index) */\n      tag_284\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9192:9195  set */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9192:9202  set._inner */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9204:9209  index */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9188:9191  _at */\n      tag_285\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9188:9210  _at(set._inner, index) */\n      jump\t// in\n    tag_284:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9180:9211  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9157:9213  return address(uint160(uint256(_at(set._inner, index)))) */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":9063:9221  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/security/Pausable.sol\":2053:2170  function _unpause() internal virtual whenPaused {... */\n    tag_215:\n        /* \"ERC20/security/Pausable.sol\":1620:1628  paused() */\n      tag_287\n        /* \"ERC20/security/Pausable.sol\":1620:1626  paused */\n      tag_75\n        /* \"ERC20/security/Pausable.sol\":1620:1628  paused() */\n      jump\t// in\n    tag_287:\n        /* \"ERC20/security/Pausable.sol\":1612:1653  require(paused(), \"Pausable: not paused\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"ERC20/security/Pausable.sol\":2121:2126  false */\n      0x00\n        /* \"ERC20/security/Pausable.sol\":2111:2118  _paused */\n      0x02\n      0x00\n        /* \"ERC20/security/Pausable.sol\":2111:2126  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20/security/Pausable.sol\":2141:2163  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"ERC20/security/Pausable.sol\":2150:2162  _msgSender() */\n      tag_292\n        /* \"ERC20/security/Pausable.sol\":2150:2160  _msgSender */\n      tag_140\n        /* \"ERC20/security/Pausable.sol\":2150:2162  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"ERC20/security/Pausable.sol\":2141:2163  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_293\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ERC20/security/Pausable.sol\":2053:2170  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8592:8709  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_218:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8655:8662  uint256 */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8682:8701  _length(set._inner) */\n      tag_295\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8690:8693  set */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8690:8700  set._inner */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8682:8689  _length */\n      tag_296\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8682:8701  _length(set._inner) */\n      jump\t// in\n    tag_295:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8675:8701  return _length(set._inner) */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8592:8709  function length(AddressSet storage set) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":4808:4957  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_225:\n        /* \"ERC20/access/AccessControl.sol\":4892:4910  getRoleAdmin(role) */\n      tag_297\n        /* \"ERC20/access/AccessControl.sol\":4905:4909  role */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":4892:4904  getRoleAdmin */\n      tag_56\n        /* \"ERC20/access/AccessControl.sol\":4892:4910  getRoleAdmin(role) */\n      jump\t// in\n    tag_297:\n        /* \"ERC20/access/AccessControl.sol\":2498:2528  _checkRole(role, _msgSender()) */\n      tag_299\n        /* \"ERC20/access/AccessControl.sol\":2509:2513  role */\n      dup2\n        /* \"ERC20/access/AccessControl.sol\":2515:2527  _msgSender() */\n      tag_300\n        /* \"ERC20/access/AccessControl.sol\":2515:2525  _msgSender */\n      tag_140\n        /* \"ERC20/access/AccessControl.sol\":2515:2527  _msgSender() */\n      jump\t// in\n    tag_300:\n        /* \"ERC20/access/AccessControl.sol\":2498:2508  _checkRole */\n      tag_272\n        /* \"ERC20/access/AccessControl.sol\":2498:2528  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_299:\n        /* \"ERC20/access/AccessControl.sol\":4923:4949  _revokeRole(role, account) */\n      tag_302\n        /* \"ERC20/access/AccessControl.sol\":4935:4939  role */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":4941:4948  account */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":4923:4934  _revokeRole */\n      tag_303\n        /* \"ERC20/access/AccessControl.sol\":4923:4949  _revokeRole(role, account) */\n      jump\t// in\n    tag_302:\n        /* \"ERC20/access/AccessControl.sol\":4808:4957  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8095:8253  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_227:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8168:8172  bool */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8192:8245  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_305\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8200:8203  set */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8200:8210  set._inner */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8236:8241  value */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8220:8243  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8212:8244  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8192:8199  _remove */\n      tag_306\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8192:8245  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_305:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8185:8245  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":8095:8253  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":6977:7215  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_231:\n        /* \"ERC20/access/AccessControl.sol\":7061:7083  hasRole(role, account) */\n      tag_308\n        /* \"ERC20/access/AccessControl.sol\":7069:7073  role */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":7075:7082  account */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":7061:7068  hasRole */\n      tag_90\n        /* \"ERC20/access/AccessControl.sol\":7061:7083  hasRole(role, account) */\n      jump\t// in\n    tag_308:\n        /* \"ERC20/access/AccessControl.sol\":7056:7208  if (!hasRole(role, account)) {... */\n      tag_309\n      jumpi\n        /* \"ERC20/access/AccessControl.sol\":7132:7136  true */\n      0x01\n        /* \"ERC20/access/AccessControl.sol\":7100:7106  _roles */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":7100:7112  _roles[role] */\n      dup1\n        /* \"ERC20/access/AccessControl.sol\":7107:7111  role */\n      dup5\n        /* \"ERC20/access/AccessControl.sol\":7100:7112  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControl.sol\":7100:7120  _roles[role].members */\n      0x00\n      add\n        /* \"ERC20/access/AccessControl.sol\":7100:7129  _roles[role].members[account] */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":7121:7128  account */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":7100:7129  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":7100:7136  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20/access/AccessControl.sol\":7183:7195  _msgSender() */\n      tag_310\n        /* \"ERC20/access/AccessControl.sol\":7183:7193  _msgSender */\n      tag_140\n        /* \"ERC20/access/AccessControl.sol\":7183:7195  _msgSender() */\n      jump\t// in\n    tag_310:\n        /* \"ERC20/access/AccessControl.sol\":7156:7196  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/access/AccessControl.sol\":7174:7181  account */\n      dup2\n        /* \"ERC20/access/AccessControl.sol\":7156:7196  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/access/AccessControl.sol\":7168:7172  role */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":7156:7196  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC20/access/AccessControl.sol\":7056:7208  if (!hasRole(role, account)) {... */\n    tag_309:\n        /* \"ERC20/access/AccessControl.sol\":6977:7215  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1682:2096  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_234:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1745:1749  bool */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1767:1788  _contains(set, value) */\n      tag_312\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1777:1780  set */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1782:1787  value */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1767:1776  _contains */\n      tag_313\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1767:1788  _contains(set, value) */\n      jump\t// in\n    tag_312:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1762:2089  if (!_contains(set, value)) {... */\n      tag_314\n      jumpi\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1805:1808  set */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1805:1816  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1822:1827  value */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1805:1828  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1988:1991  set */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1988:1999  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1988:2006  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1969  set */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1978  set._indexes */\n      0x01\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1985  set._indexes[value] */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1979:1984  value */\n      dup5\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:1985  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1966:2006  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2028:2032  true */\n      0x01\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2021:2032  return true */\n      swap1\n      pop\n      jump(tag_311)\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1762:2089  if (!_contains(set, value)) {... */\n    tag_314:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2072:2077  false */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2065:2077  return false */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":1682:2096  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_311:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/introspection/ERC165.sol\":787:944  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_238:\n        /* \"ERC20/utils/introspection/ERC165.sol\":872:876  bool */\n      0x00\n        /* \"ERC20/utils/introspection/ERC165.sol\":911:936  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC20/utils/introspection/ERC165.sol\":896:936  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC20/utils/introspection/ERC165.sol\":896:907  interfaceId */\n      dup3\n        /* \"ERC20/utils/introspection/ERC165.sol\":896:936  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC20/utils/introspection/ERC165.sol\":889:936  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"ERC20/utils/introspection/ERC165.sol\":787:944  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":12781:12906  function _beforeTokenTransfer(... */\n    tag_260:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":13510:13634  function _afterTokenTransfer(... */\n    tag_267:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":3345:3842  function _checkRole(bytes32 role, address account) internal view {... */\n    tag_272:\n        /* \"ERC20/access/AccessControl.sol\":3426:3448  hasRole(role, account) */\n      tag_321\n        /* \"ERC20/access/AccessControl.sol\":3434:3438  role */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":3440:3447  account */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":3426:3433  hasRole */\n      tag_90\n        /* \"ERC20/access/AccessControl.sol\":3426:3448  hasRole(role, account) */\n      jump\t// in\n    tag_321:\n        /* \"ERC20/access/AccessControl.sol\":3421:3835  if (!hasRole(role, account)) {... */\n      tag_322\n      jumpi\n        /* \"ERC20/access/AccessControl.sol\":3614:3655  Strings.toHexString(uint160(account), 20) */\n      tag_323\n        /* \"ERC20/access/AccessControl.sol\":3642:3649  account */\n      dup2\n        /* \"ERC20/access/AccessControl.sol\":3614:3655  Strings.toHexString(uint160(account), 20) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/access/AccessControl.sol\":3652:3654  20 */\n      0x14\n        /* \"ERC20/access/AccessControl.sol\":3614:3633  Strings.toHexString */\n      tag_324\n        /* \"ERC20/access/AccessControl.sol\":3614:3655  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_323:\n        /* \"ERC20/access/AccessControl.sol\":3728:3766  Strings.toHexString(uint256(role), 32) */\n      tag_325\n        /* \"ERC20/access/AccessControl.sol\":3756:3760  role */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":3748:3761  uint256(role) */\n      0x00\n      shr\n        /* \"ERC20/access/AccessControl.sol\":3763:3765  32 */\n      0x20\n        /* \"ERC20/access/AccessControl.sol\":3728:3747  Strings.toHexString */\n      tag_324\n        /* \"ERC20/access/AccessControl.sol\":3728:3766  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_325:\n        /* \"ERC20/access/AccessControl.sol\":3519:3789  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_326\n      swap3\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC20/access/AccessControl.sol\":3465:3823  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20/access/AccessControl.sol\":3421:3835  if (!hasRole(role, account)) {... */\n    tag_322:\n        /* \"ERC20/access/AccessControl.sol\":3345:3842  function _checkRole(bytes32 role, address account) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4456:4576  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_285:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4523:4530  bytes32 */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4550:4553  set */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4550:4561  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4562:4567  index */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4550:4568  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_330\n      jumpi\n      tag_331\n      tag_332\n      jump\t// in\n    tag_331:\n    tag_330:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4543:4568  return set._values[index] */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4456:4576  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3993:4102  function _length(Set storage set) private view returns (uint256) {... */\n    tag_296:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4049:4056  uint256 */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4076:4079  set */\n      dup2\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4076:4087  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4076:4094  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":4069:4094  return set._values.length */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3993:4102  function _length(Set storage set) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/access/AccessControl.sol\":7347:7586  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_303:\n        /* \"ERC20/access/AccessControl.sol\":7431:7453  hasRole(role, account) */\n      tag_336\n        /* \"ERC20/access/AccessControl.sol\":7439:7443  role */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":7445:7452  account */\n      dup3\n        /* \"ERC20/access/AccessControl.sol\":7431:7438  hasRole */\n      tag_90\n        /* \"ERC20/access/AccessControl.sol\":7431:7453  hasRole(role, account) */\n      jump\t// in\n    tag_336:\n        /* \"ERC20/access/AccessControl.sol\":7427:7579  if (hasRole(role, account)) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"ERC20/access/AccessControl.sol\":7502:7507  false */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":7470:7476  _roles */\n      dup1\n        /* \"ERC20/access/AccessControl.sol\":7470:7482  _roles[role] */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":7477:7481  role */\n      dup5\n        /* \"ERC20/access/AccessControl.sol\":7470:7482  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/access/AccessControl.sol\":7470:7490  _roles[role].members */\n      0x00\n      add\n        /* \"ERC20/access/AccessControl.sol\":7470:7499  _roles[role].members[account] */\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":7491:7498  account */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":7470:7499  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20/access/AccessControl.sol\":7470:7507  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20/access/AccessControl.sol\":7554:7566  _msgSender() */\n      tag_338\n        /* \"ERC20/access/AccessControl.sol\":7554:7564  _msgSender */\n      tag_140\n        /* \"ERC20/access/AccessControl.sol\":7554:7566  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"ERC20/access/AccessControl.sol\":7527:7567  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/access/AccessControl.sol\":7545:7552  account */\n      dup2\n        /* \"ERC20/access/AccessControl.sol\":7527:7567  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/access/AccessControl.sol\":7539:7543  role */\n      dup4\n        /* \"ERC20/access/AccessControl.sol\":7527:7567  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC20/access/AccessControl.sol\":7427:7579  if (hasRole(role, account)) {... */\n    tag_337:\n        /* \"ERC20/access/AccessControl.sol\":7347:7586  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2272:3692  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_306:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2338:2342  bool */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2456:2474  uint256 valueIndex */\n      dup1\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2477:2480  set */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2477:2489  set._indexes */\n      0x01\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2477:2496  set._indexes[value] */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2490:2495  value */\n      dup5\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2477:2496  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2456:2496  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2527:2528  0 */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2513:2523  valueIndex */\n      dup2\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2513:2528  valueIndex != 0 */\n      eq\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2509:3685  if (valueIndex != 0) {... */\n      tag_340\n      jumpi\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2888:2909  uint256 toDeleteIndex */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2925:2926  1 */\n      0x01\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2912:2922  valueIndex */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2912:2926  valueIndex - 1 */\n      tag_341\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2888:2926  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2941:2958  uint256 lastIndex */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2982:2983  1 */\n      0x01\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2961:2964  set */\n      dup7\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2961:2972  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2961:2979  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2961:2983  set._values.length - 1 */\n      tag_343\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_343:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2941:2983  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3017:3030  toDeleteIndex */\n      dup2\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3004:3013  lastIndex */\n      dup2\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3004:3030  lastIndex != toDeleteIndex */\n      eq\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3000:3405  if (lastIndex != toDeleteIndex) {... */\n      tag_344\n      jumpi\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3051:3068  bytes32 lastvalue */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3071:3074  set */\n      dup7\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3071:3082  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3083:3092  lastIndex */\n      dup3\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3071:3093  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_345\n      jumpi\n      tag_346\n      tag_332\n      jump\t// in\n    tag_346:\n    tag_345:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3051:3093  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3225:3234  lastvalue */\n      dup1\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3196:3199  set */\n      dup8\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3196:3207  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3208:3221  toDeleteIndex */\n      dup5\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3196:3222  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_348\n      jumpi\n      tag_349\n      tag_332\n      jump\t// in\n    tag_349:\n    tag_348:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3196:3234  set._values[toDeleteIndex] = lastvalue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3336:3346  valueIndex */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3310:3313  set */\n      dup8\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3310:3322  set._indexes */\n      0x01\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3310:3333  set._indexes[lastvalue] */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3323:3332  lastvalue */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3310:3333  set._indexes[lastvalue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3310:3346  set._indexes[lastvalue] = valueIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3032:3405  {... */\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3000:3405  if (lastIndex != toDeleteIndex) {... */\n    tag_344:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3486:3489  set */\n      dup6\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3486:3497  set._values */\n      0x00\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3486:3503  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_351\n      jumpi\n      tag_352\n      tag_353\n      jump\t// in\n    tag_352:\n    tag_351:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3581:3584  set */\n      dup6\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3581:3593  set._indexes */\n      0x01\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3581:3600  set._indexes[value] */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3594:3599  value */\n      dup7\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3581:3600  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3574:3600  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3624:3628  true */\n      0x01\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3617:3628  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_339)\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2509:3685  if (valueIndex != 0) {... */\n    tag_340:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3668:3673  false */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3661:3673  return false */\n      swap2\n      pop\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":2272:3692  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_339:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3778:3907  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_313:\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3851:3855  bool */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3898:3899  0 */\n      dup1\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3878  set */\n      dup4\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3887  set._indexes */\n      0x01\n      add\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n      0x00\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3888:3893  value */\n      dup5\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3894  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3875:3899  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3868:3899  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":3778:3907  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/utils/Strings.sol\":1589:2040  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_324:\n        /* \"ERC20/utils/Strings.sol\":1664:1677  string memory */\n      0x60\n        /* \"ERC20/utils/Strings.sol\":1690:1709  bytes memory buffer */\n      0x00\n        /* \"ERC20/utils/Strings.sol\":1735:1736  2 */\n      0x02\n        /* \"ERC20/utils/Strings.sol\":1726:1732  length */\n      dup4\n        /* \"ERC20/utils/Strings.sol\":1722:1723  2 */\n      0x02\n        /* \"ERC20/utils/Strings.sol\":1722:1732  2 * length */\n      tag_358\n      swap2\n      swap1\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"ERC20/utils/Strings.sol\":1722:1736  2 * length + 2 */\n      tag_360\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_360:\n        /* \"ERC20/utils/Strings.sol\":1712:1737  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_361\n      jumpi\n      tag_362\n      tag_363\n      jump\t// in\n    tag_362:\n    tag_361:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_364\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_364:\n      pop\n        /* \"ERC20/utils/Strings.sol\":1690:1737  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"ERC20/utils/Strings.sol\":1748:1763  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"ERC20/utils/Strings.sol\":1748:1754  buffer */\n      dup2\n        /* \"ERC20/utils/Strings.sol\":1755:1756  0 */\n      0x00\n        /* \"ERC20/utils/Strings.sol\":1748:1757  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_365\n      jumpi\n      tag_366\n      tag_332\n      jump\t// in\n    tag_366:\n    tag_365:\n      0x20\n      add\n      add\n        /* \"ERC20/utils/Strings.sol\":1748:1763  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"ERC20/utils/Strings.sol\":1774:1789  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"ERC20/utils/Strings.sol\":1774:1780  buffer */\n      dup2\n        /* \"ERC20/utils/Strings.sol\":1781:1782  1 */\n      0x01\n        /* \"ERC20/utils/Strings.sol\":1774:1783  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_367\n      jumpi\n      tag_368\n      tag_332\n      jump\t// in\n    tag_368:\n    tag_367:\n      0x20\n      add\n      add\n        /* \"ERC20/utils/Strings.sol\":1774:1789  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"ERC20/utils/Strings.sol\":1805:1814  uint256 i */\n      0x00\n        /* \"ERC20/utils/Strings.sol\":1830:1831  1 */\n      0x01\n        /* \"ERC20/utils/Strings.sol\":1821:1827  length */\n      dup5\n        /* \"ERC20/utils/Strings.sol\":1817:1818  2 */\n      0x02\n        /* \"ERC20/utils/Strings.sol\":1817:1827  2 * length */\n      tag_372\n      swap2\n      swap1\n      tag_359\n      jump\t// in\n    tag_372:\n        /* \"ERC20/utils/Strings.sol\":1817:1831  2 * length + 1 */\n      tag_373\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_373:\n        /* \"ERC20/utils/Strings.sol\":1805:1831  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"ERC20/utils/Strings.sol\":1800:1935  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_369:\n        /* \"ERC20/utils/Strings.sol\":1837:1838  1 */\n      0x01\n        /* \"ERC20/utils/Strings.sol\":1833:1834  i */\n      dup2\n        /* \"ERC20/utils/Strings.sol\":1833:1838  i > 1 */\n      gt\n        /* \"ERC20/utils/Strings.sol\":1800:1935  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"ERC20/utils/Strings.sol\":1872:1884  _HEX_SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"ERC20/utils/Strings.sol\":1893:1896  0xf */\n      0x0f\n        /* \"ERC20/utils/Strings.sol\":1885:1890  value */\n      dup7\n        /* \"ERC20/utils/Strings.sol\":1885:1896  value & 0xf */\n      and\n        /* \"ERC20/utils/Strings.sol\":1872:1897  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_375\n      tag_332\n      jump\t// in\n    tag_375:\n    tag_374:\n      byte\n      0xf8\n      shl\n        /* \"ERC20/utils/Strings.sol\":1860:1866  buffer */\n      dup3\n        /* \"ERC20/utils/Strings.sol\":1867:1868  i */\n      dup3\n        /* \"ERC20/utils/Strings.sol\":1860:1869  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_376\n      jumpi\n      tag_377\n      tag_332\n      jump\t// in\n    tag_377:\n    tag_376:\n      0x20\n      add\n      add\n        /* \"ERC20/utils/Strings.sol\":1860:1897  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"ERC20/utils/Strings.sol\":1922:1923  4 */\n      0x04\n        /* \"ERC20/utils/Strings.sol\":1912:1923  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"ERC20/utils/Strings.sol\":1840:1843  --i */\n      dup1\n      tag_378\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n      swap1\n      pop\n        /* \"ERC20/utils/Strings.sol\":1800:1935  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_369)\n    tag_370:\n      pop\n        /* \"ERC20/utils/Strings.sol\":1962:1963  0 */\n      0x00\n        /* \"ERC20/utils/Strings.sol\":1953:1958  value */\n      dup5\n        /* \"ERC20/utils/Strings.sol\":1953:1963  value == 0 */\n      eq\n        /* \"ERC20/utils/Strings.sol\":1945:2000  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_381\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_380:\n        /* \"ERC20/utils/Strings.sol\":2025:2031  buffer */\n      dup1\n        /* \"ERC20/utils/Strings.sol\":2011:2032  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"ERC20/utils/Strings.sol\":1589:2040  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_384:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_386:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_387:\n        /* \"#utility.yul\":561:584   */\n      tag_453\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_386\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_454:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_388:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_456\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_387\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_459\n      tag_384\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":833:952   */\n    tag_458:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_460\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_388\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_389:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_390:\n        /* \"#utility.yul\":1268:1289   */\n      tag_463\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_389\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_465\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_390\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_391:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_392:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_393:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_469:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_469)\n    tag_471:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_472:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_394:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_395:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_475\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_391\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2390:2461   */\n      tag_476\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_392\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_477\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_393\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2547:2576   */\n      tag_478\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_394\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_38:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_480\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_395\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:3034   */\n    tag_396:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2985:3027   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2978:2983   */\n      dup3\n        /* \"#utility.yul\":2974:3028   */\n      and\n        /* \"#utility.yul\":2963:3028   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:3034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3040:3136   */\n    tag_397:\n        /* \"#utility.yul\":3077:3084   */\n      0x00\n        /* \"#utility.yul\":3106:3130   */\n      tag_483\n        /* \"#utility.yul\":3124:3129   */\n      dup3\n        /* \"#utility.yul\":3106:3130   */\n      tag_396\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":3095:3130   */\n      swap1\n      pop\n        /* \"#utility.yul\":3040:3136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3142:3264   */\n    tag_398:\n        /* \"#utility.yul\":3215:3239   */\n      tag_485\n        /* \"#utility.yul\":3233:3238   */\n      dup2\n        /* \"#utility.yul\":3215:3239   */\n      tag_397\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3208:3213   */\n      dup2\n        /* \"#utility.yul\":3205:3240   */\n      eq\n        /* \"#utility.yul\":3195:3258   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3254:3255   */\n      0x00\n        /* \"#utility.yul\":3251:3252   */\n      dup1\n        /* \"#utility.yul\":3244:3256   */\n      revert\n        /* \"#utility.yul\":3195:3258   */\n    tag_486:\n        /* \"#utility.yul\":3142:3264   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:3409   */\n    tag_399:\n        /* \"#utility.yul\":3316:3321   */\n      0x00\n        /* \"#utility.yul\":3354:3360   */\n      dup2\n        /* \"#utility.yul\":3341:3361   */\n      calldataload\n        /* \"#utility.yul\":3332:3361   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3403   */\n      tag_488\n        /* \"#utility.yul\":3397:3402   */\n      dup2\n        /* \"#utility.yul\":3370:3403   */\n      tag_398\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3270:3409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3415:3492   */\n    tag_400:\n        /* \"#utility.yul\":3452:3459   */\n      0x00\n        /* \"#utility.yul\":3481:3486   */\n      dup2\n        /* \"#utility.yul\":3470:3486   */\n      swap1\n      pop\n        /* \"#utility.yul\":3415:3492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3498:3620   */\n    tag_401:\n        /* \"#utility.yul\":3571:3595   */\n      tag_491\n        /* \"#utility.yul\":3589:3594   */\n      dup2\n        /* \"#utility.yul\":3571:3595   */\n      tag_400\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3564:3569   */\n      dup2\n        /* \"#utility.yul\":3561:3596   */\n      eq\n        /* \"#utility.yul\":3551:3614   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":3610:3611   */\n      0x00\n        /* \"#utility.yul\":3607:3608   */\n      dup1\n        /* \"#utility.yul\":3600:3612   */\n      revert\n        /* \"#utility.yul\":3551:3614   */\n    tag_492:\n        /* \"#utility.yul\":3498:3620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3765   */\n    tag_402:\n        /* \"#utility.yul\":3672:3677   */\n      0x00\n        /* \"#utility.yul\":3710:3716   */\n      dup2\n        /* \"#utility.yul\":3697:3717   */\n      calldataload\n        /* \"#utility.yul\":3688:3717   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3759   */\n      tag_494\n        /* \"#utility.yul\":3753:3758   */\n      dup2\n        /* \"#utility.yul\":3726:3759   */\n      tag_401\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":3626:3765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:4245   */\n    tag_41:\n        /* \"#utility.yul\":3839:3845   */\n      0x00\n        /* \"#utility.yul\":3847:3853   */\n      dup1\n        /* \"#utility.yul\":3896:3898   */\n      0x40\n        /* \"#utility.yul\":3884:3893   */\n      dup4\n        /* \"#utility.yul\":3875:3882   */\n      dup6\n        /* \"#utility.yul\":3871:3894   */\n      sub\n        /* \"#utility.yul\":3867:3899   */\n      slt\n        /* \"#utility.yul\":3864:3983   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":3902:3981   */\n      tag_497\n      tag_384\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":3864:3983   */\n    tag_496:\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4047:4100   */\n      tag_498\n        /* \"#utility.yul\":4092:4099   */\n      dup6\n        /* \"#utility.yul\":4083:4089   */\n      dup3\n        /* \"#utility.yul\":4072:4081   */\n      dup7\n        /* \"#utility.yul\":4068:4090   */\n      add\n        /* \"#utility.yul\":4047:4100   */\n      tag_399\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4037:4100   */\n      swap3\n      pop\n        /* \"#utility.yul\":3993:4110   */\n      pop\n        /* \"#utility.yul\":4149:4151   */\n      0x20\n        /* \"#utility.yul\":4175:4228   */\n      tag_499\n        /* \"#utility.yul\":4220:4227   */\n      dup6\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup7\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4175:4228   */\n      tag_402\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":4165:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4120:4238   */\n      pop\n        /* \"#utility.yul\":3771:4245   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4369   */\n    tag_403:\n        /* \"#utility.yul\":4338:4362   */\n      tag_501\n        /* \"#utility.yul\":4356:4361   */\n      dup2\n        /* \"#utility.yul\":4338:4362   */\n      tag_400\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4333:4336   */\n      dup3\n        /* \"#utility.yul\":4326:4363   */\n      mstore\n        /* \"#utility.yul\":4251:4369   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4375:4597   */\n    tag_47:\n        /* \"#utility.yul\":4468:4472   */\n      0x00\n        /* \"#utility.yul\":4506:4508   */\n      0x20\n        /* \"#utility.yul\":4495:4504   */\n      dup3\n        /* \"#utility.yul\":4491:4509   */\n      add\n        /* \"#utility.yul\":4483:4509   */\n      swap1\n      pop\n        /* \"#utility.yul\":4519:4590   */\n      tag_503\n        /* \"#utility.yul\":4587:4588   */\n      0x00\n        /* \"#utility.yul\":4576:4585   */\n      dup4\n        /* \"#utility.yul\":4572:4589   */\n      add\n        /* \"#utility.yul\":4563:4569   */\n      dup5\n        /* \"#utility.yul\":4519:4590   */\n      tag_403\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4375:4597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4603:5222   */\n    tag_50:\n        /* \"#utility.yul\":4680:4686   */\n      0x00\n        /* \"#utility.yul\":4688:4694   */\n      dup1\n        /* \"#utility.yul\":4696:4702   */\n      0x00\n        /* \"#utility.yul\":4745:4747   */\n      0x60\n        /* \"#utility.yul\":4733:4742   */\n      dup5\n        /* \"#utility.yul\":4724:4731   */\n      dup7\n        /* \"#utility.yul\":4720:4743   */\n      sub\n        /* \"#utility.yul\":4716:4748   */\n      slt\n        /* \"#utility.yul\":4713:4832   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":4751:4830   */\n      tag_506\n      tag_384\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4713:4832   */\n    tag_505:\n        /* \"#utility.yul\":4871:4872   */\n      0x00\n        /* \"#utility.yul\":4896:4949   */\n      tag_507\n        /* \"#utility.yul\":4941:4948   */\n      dup7\n        /* \"#utility.yul\":4932:4938   */\n      dup3\n        /* \"#utility.yul\":4921:4930   */\n      dup8\n        /* \"#utility.yul\":4917:4939   */\n      add\n        /* \"#utility.yul\":4896:4949   */\n      tag_399\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4886:4949   */\n      swap4\n      pop\n        /* \"#utility.yul\":4842:4959   */\n      pop\n        /* \"#utility.yul\":4998:5000   */\n      0x20\n        /* \"#utility.yul\":5024:5077   */\n      tag_508\n        /* \"#utility.yul\":5069:5076   */\n      dup7\n        /* \"#utility.yul\":5060:5066   */\n      dup3\n        /* \"#utility.yul\":5049:5058   */\n      dup8\n        /* \"#utility.yul\":5045:5067   */\n      add\n        /* \"#utility.yul\":5024:5077   */\n      tag_399\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5014:5077   */\n      swap3\n      pop\n        /* \"#utility.yul\":4969:5087   */\n      pop\n        /* \"#utility.yul\":5126:5128   */\n      0x40\n        /* \"#utility.yul\":5152:5205   */\n      tag_509\n        /* \"#utility.yul\":5197:5204   */\n      dup7\n        /* \"#utility.yul\":5188:5194   */\n      dup3\n        /* \"#utility.yul\":5177:5186   */\n      dup8\n        /* \"#utility.yul\":5173:5195   */\n      add\n        /* \"#utility.yul\":5152:5205   */\n      tag_402\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5142:5205   */\n      swap2\n      pop\n        /* \"#utility.yul\":5097:5215   */\n      pop\n        /* \"#utility.yul\":4603:5222   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5228:5305   */\n    tag_404:\n        /* \"#utility.yul\":5265:5272   */\n      0x00\n        /* \"#utility.yul\":5294:5299   */\n      dup2\n        /* \"#utility.yul\":5283:5299   */\n      swap1\n      pop\n        /* \"#utility.yul\":5228:5305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5311:5433   */\n    tag_405:\n        /* \"#utility.yul\":5384:5408   */\n      tag_512\n        /* \"#utility.yul\":5402:5407   */\n      dup2\n        /* \"#utility.yul\":5384:5408   */\n      tag_404\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":5377:5382   */\n      dup2\n        /* \"#utility.yul\":5374:5409   */\n      eq\n        /* \"#utility.yul\":5364:5427   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":5423:5424   */\n      0x00\n        /* \"#utility.yul\":5420:5421   */\n      dup1\n        /* \"#utility.yul\":5413:5425   */\n      revert\n        /* \"#utility.yul\":5364:5427   */\n    tag_513:\n        /* \"#utility.yul\":5311:5433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5439:5578   */\n    tag_406:\n        /* \"#utility.yul\":5485:5490   */\n      0x00\n        /* \"#utility.yul\":5523:5529   */\n      dup2\n        /* \"#utility.yul\":5510:5530   */\n      calldataload\n        /* \"#utility.yul\":5501:5530   */\n      swap1\n      pop\n        /* \"#utility.yul\":5539:5572   */\n      tag_515\n        /* \"#utility.yul\":5566:5571   */\n      dup2\n        /* \"#utility.yul\":5539:5572   */\n      tag_405\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":5439:5578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5584:5913   */\n    tag_55:\n        /* \"#utility.yul\":5643:5649   */\n      0x00\n        /* \"#utility.yul\":5692:5694   */\n      0x20\n        /* \"#utility.yul\":5680:5689   */\n      dup3\n        /* \"#utility.yul\":5671:5678   */\n      dup5\n        /* \"#utility.yul\":5667:5690   */\n      sub\n        /* \"#utility.yul\":5663:5695   */\n      slt\n        /* \"#utility.yul\":5660:5779   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":5698:5777   */\n      tag_518\n      tag_384\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5660:5779   */\n    tag_517:\n        /* \"#utility.yul\":5818:5819   */\n      0x00\n        /* \"#utility.yul\":5843:5896   */\n      tag_519\n        /* \"#utility.yul\":5888:5895   */\n      dup5\n        /* \"#utility.yul\":5879:5885   */\n      dup3\n        /* \"#utility.yul\":5868:5877   */\n      dup6\n        /* \"#utility.yul\":5864:5886   */\n      add\n        /* \"#utility.yul\":5843:5896   */\n      tag_406\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":5833:5896   */\n      swap2\n      pop\n        /* \"#utility.yul\":5789:5906   */\n      pop\n        /* \"#utility.yul\":5584:5913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5919:6037   */\n    tag_407:\n        /* \"#utility.yul\":6006:6030   */\n      tag_521\n        /* \"#utility.yul\":6024:6029   */\n      dup2\n        /* \"#utility.yul\":6006:6030   */\n      tag_404\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6001:6004   */\n      dup3\n        /* \"#utility.yul\":5994:6031   */\n      mstore\n        /* \"#utility.yul\":5919:6037   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6043:6265   */\n    tag_58:\n        /* \"#utility.yul\":6136:6140   */\n      0x00\n        /* \"#utility.yul\":6174:6176   */\n      0x20\n        /* \"#utility.yul\":6163:6172   */\n      dup3\n        /* \"#utility.yul\":6159:6177   */\n      add\n        /* \"#utility.yul\":6151:6177   */\n      swap1\n      pop\n        /* \"#utility.yul\":6187:6258   */\n      tag_523\n        /* \"#utility.yul\":6255:6256   */\n      0x00\n        /* \"#utility.yul\":6244:6253   */\n      dup4\n        /* \"#utility.yul\":6240:6257   */\n      add\n        /* \"#utility.yul\":6231:6237   */\n      dup5\n        /* \"#utility.yul\":6187:6258   */\n      tag_407\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":6043:6265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6271:6745   */\n    tag_61:\n        /* \"#utility.yul\":6339:6345   */\n      0x00\n        /* \"#utility.yul\":6347:6353   */\n      dup1\n        /* \"#utility.yul\":6396:6398   */\n      0x40\n        /* \"#utility.yul\":6384:6393   */\n      dup4\n        /* \"#utility.yul\":6375:6382   */\n      dup6\n        /* \"#utility.yul\":6371:6394   */\n      sub\n        /* \"#utility.yul\":6367:6399   */\n      slt\n        /* \"#utility.yul\":6364:6483   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":6402:6481   */\n      tag_526\n      tag_384\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6364:6483   */\n    tag_525:\n        /* \"#utility.yul\":6522:6523   */\n      0x00\n        /* \"#utility.yul\":6547:6600   */\n      tag_527\n        /* \"#utility.yul\":6592:6599   */\n      dup6\n        /* \"#utility.yul\":6583:6589   */\n      dup3\n        /* \"#utility.yul\":6572:6581   */\n      dup7\n        /* \"#utility.yul\":6568:6590   */\n      add\n        /* \"#utility.yul\":6547:6600   */\n      tag_406\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6537:6600   */\n      swap3\n      pop\n        /* \"#utility.yul\":6493:6610   */\n      pop\n        /* \"#utility.yul\":6649:6651   */\n      0x20\n        /* \"#utility.yul\":6675:6728   */\n      tag_528\n        /* \"#utility.yul\":6720:6727   */\n      dup6\n        /* \"#utility.yul\":6711:6717   */\n      dup3\n        /* \"#utility.yul\":6700:6709   */\n      dup7\n        /* \"#utility.yul\":6696:6718   */\n      add\n        /* \"#utility.yul\":6675:6728   */\n      tag_399\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6665:6728   */\n      swap2\n      pop\n        /* \"#utility.yul\":6620:6738   */\n      pop\n        /* \"#utility.yul\":6271:6745   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6751:6837   */\n    tag_408:\n        /* \"#utility.yul\":6786:6793   */\n      0x00\n        /* \"#utility.yul\":6826:6830   */\n      0xff\n        /* \"#utility.yul\":6819:6824   */\n      dup3\n        /* \"#utility.yul\":6815:6831   */\n      and\n        /* \"#utility.yul\":6804:6831   */\n      swap1\n      pop\n        /* \"#utility.yul\":6751:6837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6843:6955   */\n    tag_409:\n        /* \"#utility.yul\":6926:6948   */\n      tag_531\n        /* \"#utility.yul\":6942:6947   */\n      dup2\n        /* \"#utility.yul\":6926:6948   */\n      tag_408\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":6921:6924   */\n      dup3\n        /* \"#utility.yul\":6914:6949   */\n      mstore\n        /* \"#utility.yul\":6843:6955   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6961:7175   */\n    tag_66:\n        /* \"#utility.yul\":7050:7054   */\n      0x00\n        /* \"#utility.yul\":7088:7090   */\n      0x20\n        /* \"#utility.yul\":7077:7086   */\n      dup3\n        /* \"#utility.yul\":7073:7091   */\n      add\n        /* \"#utility.yul\":7065:7091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7101:7168   */\n      tag_533\n        /* \"#utility.yul\":7165:7166   */\n      0x00\n        /* \"#utility.yul\":7154:7163   */\n      dup4\n        /* \"#utility.yul\":7150:7167   */\n      add\n        /* \"#utility.yul\":7141:7147   */\n      dup5\n        /* \"#utility.yul\":7101:7168   */\n      tag_409\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6961:7175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7181:7510   */\n    tag_79:\n        /* \"#utility.yul\":7240:7246   */\n      0x00\n        /* \"#utility.yul\":7289:7291   */\n      0x20\n        /* \"#utility.yul\":7277:7286   */\n      dup3\n        /* \"#utility.yul\":7268:7275   */\n      dup5\n        /* \"#utility.yul\":7264:7287   */\n      sub\n        /* \"#utility.yul\":7260:7292   */\n      slt\n        /* \"#utility.yul\":7257:7376   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":7295:7374   */\n      tag_536\n      tag_384\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":7257:7376   */\n    tag_535:\n        /* \"#utility.yul\":7415:7416   */\n      0x00\n        /* \"#utility.yul\":7440:7493   */\n      tag_537\n        /* \"#utility.yul\":7485:7492   */\n      dup5\n        /* \"#utility.yul\":7476:7482   */\n      dup3\n        /* \"#utility.yul\":7465:7474   */\n      dup6\n        /* \"#utility.yul\":7461:7483   */\n      add\n        /* \"#utility.yul\":7440:7493   */\n      tag_399\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7430:7493   */\n      swap2\n      pop\n        /* \"#utility.yul\":7386:7503   */\n      pop\n        /* \"#utility.yul\":7181:7510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:7990   */\n    tag_84:\n        /* \"#utility.yul\":7584:7590   */\n      0x00\n        /* \"#utility.yul\":7592:7598   */\n      dup1\n        /* \"#utility.yul\":7641:7643   */\n      0x40\n        /* \"#utility.yul\":7629:7638   */\n      dup4\n        /* \"#utility.yul\":7620:7627   */\n      dup6\n        /* \"#utility.yul\":7616:7639   */\n      sub\n        /* \"#utility.yul\":7612:7644   */\n      slt\n        /* \"#utility.yul\":7609:7728   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":7647:7726   */\n      tag_540\n      tag_384\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":7609:7728   */\n    tag_539:\n        /* \"#utility.yul\":7767:7768   */\n      0x00\n        /* \"#utility.yul\":7792:7845   */\n      tag_541\n        /* \"#utility.yul\":7837:7844   */\n      dup6\n        /* \"#utility.yul\":7828:7834   */\n      dup3\n        /* \"#utility.yul\":7817:7826   */\n      dup7\n        /* \"#utility.yul\":7813:7835   */\n      add\n        /* \"#utility.yul\":7792:7845   */\n      tag_406\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7782:7845   */\n      swap3\n      pop\n        /* \"#utility.yul\":7738:7855   */\n      pop\n        /* \"#utility.yul\":7894:7896   */\n      0x20\n        /* \"#utility.yul\":7920:7973   */\n      tag_542\n        /* \"#utility.yul\":7965:7972   */\n      dup6\n        /* \"#utility.yul\":7956:7962   */\n      dup3\n        /* \"#utility.yul\":7945:7954   */\n      dup7\n        /* \"#utility.yul\":7941:7963   */\n      add\n        /* \"#utility.yul\":7920:7973   */\n      tag_402\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":7910:7973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7865:7983   */\n      pop\n        /* \"#utility.yul\":7516:7990   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7996:8114   */\n    tag_410:\n        /* \"#utility.yul\":8083:8107   */\n      tag_544\n        /* \"#utility.yul\":8101:8106   */\n      dup2\n        /* \"#utility.yul\":8083:8107   */\n      tag_397\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":8078:8081   */\n      dup3\n        /* \"#utility.yul\":8071:8108   */\n      mstore\n        /* \"#utility.yul\":7996:8114   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8120:8342   */\n    tag_87:\n        /* \"#utility.yul\":8213:8217   */\n      0x00\n        /* \"#utility.yul\":8251:8253   */\n      0x20\n        /* \"#utility.yul\":8240:8249   */\n      dup3\n        /* \"#utility.yul\":8236:8254   */\n      add\n        /* \"#utility.yul\":8228:8254   */\n      swap1\n      pop\n        /* \"#utility.yul\":8264:8335   */\n      tag_546\n        /* \"#utility.yul\":8332:8333   */\n      0x00\n        /* \"#utility.yul\":8321:8330   */\n      dup4\n        /* \"#utility.yul\":8317:8334   */\n      add\n        /* \"#utility.yul\":8308:8314   */\n      dup5\n        /* \"#utility.yul\":8264:8335   */\n      tag_410\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":8120:8342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8348:8822   */\n    tag_121:\n        /* \"#utility.yul\":8416:8422   */\n      0x00\n        /* \"#utility.yul\":8424:8430   */\n      dup1\n        /* \"#utility.yul\":8473:8475   */\n      0x40\n        /* \"#utility.yul\":8461:8470   */\n      dup4\n        /* \"#utility.yul\":8452:8459   */\n      dup6\n        /* \"#utility.yul\":8448:8471   */\n      sub\n        /* \"#utility.yul\":8444:8476   */\n      slt\n        /* \"#utility.yul\":8441:8560   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":8479:8558   */\n      tag_549\n      tag_384\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8441:8560   */\n    tag_548:\n        /* \"#utility.yul\":8599:8600   */\n      0x00\n        /* \"#utility.yul\":8624:8677   */\n      tag_550\n        /* \"#utility.yul\":8669:8676   */\n      dup6\n        /* \"#utility.yul\":8660:8666   */\n      dup3\n        /* \"#utility.yul\":8649:8658   */\n      dup7\n        /* \"#utility.yul\":8645:8667   */\n      add\n        /* \"#utility.yul\":8624:8677   */\n      tag_399\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":8614:8677   */\n      swap3\n      pop\n        /* \"#utility.yul\":8570:8687   */\n      pop\n        /* \"#utility.yul\":8726:8728   */\n      0x20\n        /* \"#utility.yul\":8752:8805   */\n      tag_551\n        /* \"#utility.yul\":8797:8804   */\n      dup6\n        /* \"#utility.yul\":8788:8794   */\n      dup3\n        /* \"#utility.yul\":8777:8786   */\n      dup7\n        /* \"#utility.yul\":8773:8795   */\n      add\n        /* \"#utility.yul\":8752:8805   */\n      tag_399\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":8742:8805   */\n      swap2\n      pop\n        /* \"#utility.yul\":8697:8815   */\n      pop\n        /* \"#utility.yul\":8348:8822   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8828:9008   */\n    tag_411:\n        /* \"#utility.yul\":8876:8953   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8873:8874   */\n      0x00\n        /* \"#utility.yul\":8866:8954   */\n      mstore\n        /* \"#utility.yul\":8973:8977   */\n      0x22\n        /* \"#utility.yul\":8970:8971   */\n      0x04\n        /* \"#utility.yul\":8963:8978   */\n      mstore\n        /* \"#utility.yul\":8997:9001   */\n      0x24\n        /* \"#utility.yul\":8994:8995   */\n      0x00\n        /* \"#utility.yul\":8987:9002   */\n      revert\n        /* \"#utility.yul\":9014:9334   */\n    tag_132:\n        /* \"#utility.yul\":9058:9064   */\n      0x00\n        /* \"#utility.yul\":9095:9096   */\n      0x02\n        /* \"#utility.yul\":9089:9093   */\n      dup3\n        /* \"#utility.yul\":9085:9097   */\n      div\n        /* \"#utility.yul\":9075:9097   */\n      swap1\n      pop\n        /* \"#utility.yul\":9142:9143   */\n      0x01\n        /* \"#utility.yul\":9136:9140   */\n      dup3\n        /* \"#utility.yul\":9132:9144   */\n      and\n        /* \"#utility.yul\":9163:9181   */\n      dup1\n        /* \"#utility.yul\":9153:9234   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":9219:9223   */\n      0x7f\n        /* \"#utility.yul\":9211:9217   */\n      dup3\n        /* \"#utility.yul\":9207:9224   */\n      and\n        /* \"#utility.yul\":9197:9224   */\n      swap2\n      pop\n        /* \"#utility.yul\":9153:9234   */\n    tag_554:\n        /* \"#utility.yul\":9281:9283   */\n      0x20\n        /* \"#utility.yul\":9273:9279   */\n      dup3\n        /* \"#utility.yul\":9270:9284   */\n      lt\n        /* \"#utility.yul\":9250:9268   */\n      dup2\n        /* \"#utility.yul\":9247:9285   */\n      sub\n        /* \"#utility.yul\":9244:9328   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":9300:9318   */\n      tag_556\n      tag_411\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9244:9328   */\n    tag_555:\n        /* \"#utility.yul\":9065:9334   */\n      pop\n        /* \"#utility.yul\":9014:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9581   */\n    tag_412:\n        /* \"#utility.yul\":9480:9514   */\n      0x45524332303a2063616c6c657220616e6420726563697069656e74206d757374\n        /* \"#utility.yul\":9476:9477   */\n      0x00\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9464:9478   */\n      add\n        /* \"#utility.yul\":9457:9515   */\n      mstore\n        /* \"#utility.yul\":9549:9573   */\n      0x20626520646966666572656e7420616464726573732e00000000000000000000\n        /* \"#utility.yul\":9544:9546   */\n      0x20\n        /* \"#utility.yul\":9536:9542   */\n      dup3\n        /* \"#utility.yul\":9532:9547   */\n      add\n        /* \"#utility.yul\":9525:9574   */\n      mstore\n        /* \"#utility.yul\":9340:9581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9953   */\n    tag_413:\n        /* \"#utility.yul\":9729:9732   */\n      0x00\n        /* \"#utility.yul\":9750:9817   */\n      tag_559\n        /* \"#utility.yul\":9814:9816   */\n      0x36\n        /* \"#utility.yul\":9809:9812   */\n      dup4\n        /* \"#utility.yul\":9750:9817   */\n      tag_392\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":9743:9817   */\n      swap2\n      pop\n        /* \"#utility.yul\":9826:9919   */\n      tag_560\n        /* \"#utility.yul\":9915:9918   */\n      dup3\n        /* \"#utility.yul\":9826:9919   */\n      tag_412\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9944:9946   */\n      0x40\n        /* \"#utility.yul\":9939:9942   */\n      dup3\n        /* \"#utility.yul\":9935:9947   */\n      add\n        /* \"#utility.yul\":9928:9947   */\n      swap1\n      pop\n        /* \"#utility.yul\":9587:9953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9959:10378   */\n    tag_147:\n        /* \"#utility.yul\":10125:10129   */\n      0x00\n        /* \"#utility.yul\":10163:10165   */\n      0x20\n        /* \"#utility.yul\":10152:10161   */\n      dup3\n        /* \"#utility.yul\":10148:10166   */\n      add\n        /* \"#utility.yul\":10140:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":10212:10221   */\n      dup2\n        /* \"#utility.yul\":10206:10210   */\n      dup2\n        /* \"#utility.yul\":10202:10222   */\n      sub\n        /* \"#utility.yul\":10198:10199   */\n      0x00\n        /* \"#utility.yul\":10187:10196   */\n      dup4\n        /* \"#utility.yul\":10183:10200   */\n      add\n        /* \"#utility.yul\":10176:10223   */\n      mstore\n        /* \"#utility.yul\":10240:10371   */\n      tag_562\n        /* \"#utility.yul\":10366:10370   */\n      dup2\n        /* \"#utility.yul\":10240:10371   */\n      tag_413\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":10232:10371   */\n      swap1\n      pop\n        /* \"#utility.yul\":9959:10378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10384:10611   */\n    tag_414:\n        /* \"#utility.yul\":10524:10558   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":10520:10521   */\n      0x00\n        /* \"#utility.yul\":10512:10518   */\n      dup3\n        /* \"#utility.yul\":10508:10522   */\n      add\n        /* \"#utility.yul\":10501:10559   */\n      mstore\n        /* \"#utility.yul\":10593:10603   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10588:10590   */\n      0x20\n        /* \"#utility.yul\":10580:10586   */\n      dup3\n        /* \"#utility.yul\":10576:10591   */\n      add\n        /* \"#utility.yul\":10569:10604   */\n      mstore\n        /* \"#utility.yul\":10384:10611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10617:10983   */\n    tag_415:\n        /* \"#utility.yul\":10759:10762   */\n      0x00\n        /* \"#utility.yul\":10780:10847   */\n      tag_565\n        /* \"#utility.yul\":10844:10846   */\n      0x28\n        /* \"#utility.yul\":10839:10842   */\n      dup4\n        /* \"#utility.yul\":10780:10847   */\n      tag_392\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":10773:10847   */\n      swap2\n      pop\n        /* \"#utility.yul\":10856:10949   */\n      tag_566\n        /* \"#utility.yul\":10945:10948   */\n      dup3\n        /* \"#utility.yul\":10856:10949   */\n      tag_414\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10974:10976   */\n      0x40\n        /* \"#utility.yul\":10969:10972   */\n      dup3\n        /* \"#utility.yul\":10965:10977   */\n      add\n        /* \"#utility.yul\":10958:10977   */\n      swap1\n      pop\n        /* \"#utility.yul\":10617:10983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10989:11408   */\n    tag_153:\n        /* \"#utility.yul\":11155:11159   */\n      0x00\n        /* \"#utility.yul\":11193:11195   */\n      0x20\n        /* \"#utility.yul\":11182:11191   */\n      dup3\n        /* \"#utility.yul\":11178:11196   */\n      add\n        /* \"#utility.yul\":11170:11196   */\n      swap1\n      pop\n        /* \"#utility.yul\":11242:11251   */\n      dup2\n        /* \"#utility.yul\":11236:11240   */\n      dup2\n        /* \"#utility.yul\":11232:11252   */\n      sub\n        /* \"#utility.yul\":11228:11229   */\n      0x00\n        /* \"#utility.yul\":11217:11226   */\n      dup4\n        /* \"#utility.yul\":11213:11230   */\n      add\n        /* \"#utility.yul\":11206:11253   */\n      mstore\n        /* \"#utility.yul\":11270:11401   */\n      tag_568\n        /* \"#utility.yul\":11396:11400   */\n      dup2\n        /* \"#utility.yul\":11270:11401   */\n      tag_415\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":11262:11401   */\n      swap1\n      pop\n        /* \"#utility.yul\":10989:11408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11414:11591   */\n    tag_416:\n        /* \"#utility.yul\":11554:11583   */\n      0x45524332303a206d75737420686176652061646d696e20726f6c650000000000\n        /* \"#utility.yul\":11550:11551   */\n      0x00\n        /* \"#utility.yul\":11542:11548   */\n      dup3\n        /* \"#utility.yul\":11538:11552   */\n      add\n        /* \"#utility.yul\":11531:11584   */\n      mstore\n        /* \"#utility.yul\":11414:11591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11597:11963   */\n    tag_417:\n        /* \"#utility.yul\":11739:11742   */\n      0x00\n        /* \"#utility.yul\":11760:11827   */\n      tag_571\n        /* \"#utility.yul\":11824:11826   */\n      0x1b\n        /* \"#utility.yul\":11819:11822   */\n      dup4\n        /* \"#utility.yul\":11760:11827   */\n      tag_392\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11753:11827   */\n      swap2\n      pop\n        /* \"#utility.yul\":11836:11929   */\n      tag_572\n        /* \"#utility.yul\":11925:11928   */\n      dup3\n        /* \"#utility.yul\":11836:11929   */\n      tag_416\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":11954:11956   */\n      0x20\n        /* \"#utility.yul\":11949:11952   */\n      dup3\n        /* \"#utility.yul\":11945:11957   */\n      add\n        /* \"#utility.yul\":11938:11957   */\n      swap1\n      pop\n        /* \"#utility.yul\":11597:11963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11969:12388   */\n    tag_167:\n        /* \"#utility.yul\":12135:12139   */\n      0x00\n        /* \"#utility.yul\":12173:12175   */\n      0x20\n        /* \"#utility.yul\":12162:12171   */\n      dup3\n        /* \"#utility.yul\":12158:12176   */\n      add\n        /* \"#utility.yul\":12150:12176   */\n      swap1\n      pop\n        /* \"#utility.yul\":12222:12231   */\n      dup2\n        /* \"#utility.yul\":12216:12220   */\n      dup2\n        /* \"#utility.yul\":12212:12232   */\n      sub\n        /* \"#utility.yul\":12208:12209   */\n      0x00\n        /* \"#utility.yul\":12197:12206   */\n      dup4\n        /* \"#utility.yul\":12193:12210   */\n      add\n        /* \"#utility.yul\":12186:12233   */\n      mstore\n        /* \"#utility.yul\":12250:12381   */\n      tag_574\n        /* \"#utility.yul\":12376:12380   */\n      dup2\n        /* \"#utility.yul\":12250:12381   */\n      tag_417\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":12242:12381   */\n      swap1\n      pop\n        /* \"#utility.yul\":11969:12388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12394:12574   */\n    tag_418:\n        /* \"#utility.yul\":12442:12519   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12439:12440   */\n      0x00\n        /* \"#utility.yul\":12432:12520   */\n      mstore\n        /* \"#utility.yul\":12539:12543   */\n      0x11\n        /* \"#utility.yul\":12536:12537   */\n      0x04\n        /* \"#utility.yul\":12529:12544   */\n      mstore\n        /* \"#utility.yul\":12563:12567   */\n      0x24\n        /* \"#utility.yul\":12560:12561   */\n      0x00\n        /* \"#utility.yul\":12553:12568   */\n      revert\n        /* \"#utility.yul\":12580:12885   */\n    tag_172:\n        /* \"#utility.yul\":12620:12623   */\n      0x00\n        /* \"#utility.yul\":12639:12659   */\n      tag_577\n        /* \"#utility.yul\":12657:12658   */\n      dup3\n        /* \"#utility.yul\":12639:12659   */\n      tag_400\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12634:12659   */\n      swap2\n      pop\n        /* \"#utility.yul\":12673:12693   */\n      tag_578\n        /* \"#utility.yul\":12691:12692   */\n      dup4\n        /* \"#utility.yul\":12673:12693   */\n      tag_400\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12668:12693   */\n      swap3\n      pop\n        /* \"#utility.yul\":12827:12828   */\n      dup3\n        /* \"#utility.yul\":12759:12825   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12755:12829   */\n      sub\n        /* \"#utility.yul\":12752:12753   */\n      dup3\n        /* \"#utility.yul\":12749:12830   */\n      gt\n        /* \"#utility.yul\":12746:12853   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":12833:12851   */\n      tag_580\n      tag_418\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":12746:12853   */\n    tag_579:\n        /* \"#utility.yul\":12877:12878   */\n      dup3\n        /* \"#utility.yul\":12874:12875   */\n      dup3\n        /* \"#utility.yul\":12870:12879   */\n      add\n        /* \"#utility.yul\":12863:12879   */\n      swap1\n      pop\n        /* \"#utility.yul\":12580:12885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12891:13115   */\n    tag_419:\n        /* \"#utility.yul\":13031:13065   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":13027:13028   */\n      0x00\n        /* \"#utility.yul\":13019:13025   */\n      dup3\n        /* \"#utility.yul\":13015:13029   */\n      add\n        /* \"#utility.yul\":13008:13066   */\n      mstore\n        /* \"#utility.yul\":13100:13107   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"#utility.yul\":13087:13093   */\n      dup3\n        /* \"#utility.yul\":13083:13098   */\n      add\n        /* \"#utility.yul\":13076:13108   */\n      mstore\n        /* \"#utility.yul\":12891:13115   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13121:13487   */\n    tag_420:\n        /* \"#utility.yul\":13263:13266   */\n      0x00\n        /* \"#utility.yul\":13284:13351   */\n      tag_583\n        /* \"#utility.yul\":13348:13350   */\n      0x25\n        /* \"#utility.yul\":13343:13346   */\n      dup4\n        /* \"#utility.yul\":13284:13351   */\n      tag_392\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":13277:13351   */\n      swap2\n      pop\n        /* \"#utility.yul\":13360:13453   */\n      tag_584\n        /* \"#utility.yul\":13449:13452   */\n      dup3\n        /* \"#utility.yul\":13360:13453   */\n      tag_419\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13478:13480   */\n      0x40\n        /* \"#utility.yul\":13473:13476   */\n      dup3\n        /* \"#utility.yul\":13469:13481   */\n      add\n        /* \"#utility.yul\":13462:13481   */\n      swap1\n      pop\n        /* \"#utility.yul\":13121:13487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13493:13912   */\n    tag_200:\n        /* \"#utility.yul\":13659:13663   */\n      0x00\n        /* \"#utility.yul\":13697:13699   */\n      0x20\n        /* \"#utility.yul\":13686:13695   */\n      dup3\n        /* \"#utility.yul\":13682:13700   */\n      add\n        /* \"#utility.yul\":13674:13700   */\n      swap1\n      pop\n        /* \"#utility.yul\":13746:13755   */\n      dup2\n        /* \"#utility.yul\":13740:13744   */\n      dup2\n        /* \"#utility.yul\":13736:13756   */\n      sub\n        /* \"#utility.yul\":13732:13733   */\n      0x00\n        /* \"#utility.yul\":13721:13730   */\n      dup4\n        /* \"#utility.yul\":13717:13734   */\n      add\n        /* \"#utility.yul\":13710:13757   */\n      mstore\n        /* \"#utility.yul\":13774:13905   */\n      tag_586\n        /* \"#utility.yul\":13900:13904   */\n      dup2\n        /* \"#utility.yul\":13774:13905   */\n      tag_420\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":13766:13905   */\n      swap1\n      pop\n        /* \"#utility.yul\":13493:13912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13918:14146   */\n    tag_421:\n        /* \"#utility.yul\":14058:14092   */\n      0x45524332303a2063616c6c65722063616e206e6f74207265766f6b65206f776e\n        /* \"#utility.yul\":14054:14055   */\n      0x00\n        /* \"#utility.yul\":14046:14052   */\n      dup3\n        /* \"#utility.yul\":14042:14056   */\n      add\n        /* \"#utility.yul\":14035:14093   */\n      mstore\n        /* \"#utility.yul\":14127:14138   */\n      0x20616464726573732e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14122:14124   */\n      0x20\n        /* \"#utility.yul\":14114:14120   */\n      dup3\n        /* \"#utility.yul\":14110:14125   */\n      add\n        /* \"#utility.yul\":14103:14139   */\n      mstore\n        /* \"#utility.yul\":13918:14146   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14152:14518   */\n    tag_422:\n        /* \"#utility.yul\":14294:14297   */\n      0x00\n        /* \"#utility.yul\":14315:14382   */\n      tag_589\n        /* \"#utility.yul\":14379:14381   */\n      0x29\n        /* \"#utility.yul\":14374:14377   */\n      dup4\n        /* \"#utility.yul\":14315:14382   */\n      tag_392\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14308:14382   */\n      swap2\n      pop\n        /* \"#utility.yul\":14391:14484   */\n      tag_590\n        /* \"#utility.yul\":14480:14483   */\n      dup3\n        /* \"#utility.yul\":14391:14484   */\n      tag_421\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":14509:14511   */\n      0x40\n        /* \"#utility.yul\":14504:14507   */\n      dup3\n        /* \"#utility.yul\":14500:14512   */\n      add\n        /* \"#utility.yul\":14493:14512   */\n      swap1\n      pop\n        /* \"#utility.yul\":14152:14518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14524:14943   */\n    tag_223:\n        /* \"#utility.yul\":14690:14694   */\n      0x00\n        /* \"#utility.yul\":14728:14730   */\n      0x20\n        /* \"#utility.yul\":14717:14726   */\n      dup3\n        /* \"#utility.yul\":14713:14731   */\n      add\n        /* \"#utility.yul\":14705:14731   */\n      swap1\n      pop\n        /* \"#utility.yul\":14777:14786   */\n      dup2\n        /* \"#utility.yul\":14771:14775   */\n      dup2\n        /* \"#utility.yul\":14767:14787   */\n      sub\n        /* \"#utility.yul\":14763:14764   */\n      0x00\n        /* \"#utility.yul\":14752:14761   */\n      dup4\n        /* \"#utility.yul\":14748:14765   */\n      add\n        /* \"#utility.yul\":14741:14788   */\n      mstore\n        /* \"#utility.yul\":14805:14936   */\n      tag_592\n        /* \"#utility.yul\":14931:14935   */\n      dup2\n        /* \"#utility.yul\":14805:14936   */\n      tag_422\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14797:14936   */\n      swap1\n      pop\n        /* \"#utility.yul\":14524:14943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14949:15172   */\n    tag_423:\n        /* \"#utility.yul\":15089:15123   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":15085:15086   */\n      0x00\n        /* \"#utility.yul\":15077:15083   */\n      dup3\n        /* \"#utility.yul\":15073:15087   */\n      add\n        /* \"#utility.yul\":15066:15124   */\n      mstore\n        /* \"#utility.yul\":15158:15164   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15153:15155   */\n      0x20\n        /* \"#utility.yul\":15145:15151   */\n      dup3\n        /* \"#utility.yul\":15141:15156   */\n      add\n        /* \"#utility.yul\":15134:15165   */\n      mstore\n        /* \"#utility.yul\":14949:15172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15178:15544   */\n    tag_424:\n        /* \"#utility.yul\":15320:15323   */\n      0x00\n        /* \"#utility.yul\":15341:15408   */\n      tag_595\n        /* \"#utility.yul\":15405:15407   */\n      0x24\n        /* \"#utility.yul\":15400:15403   */\n      dup4\n        /* \"#utility.yul\":15341:15408   */\n      tag_392\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":15334:15408   */\n      swap2\n      pop\n        /* \"#utility.yul\":15417:15510   */\n      tag_596\n        /* \"#utility.yul\":15506:15509   */\n      dup3\n        /* \"#utility.yul\":15417:15510   */\n      tag_423\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":15535:15537   */\n      0x40\n        /* \"#utility.yul\":15530:15533   */\n      dup3\n        /* \"#utility.yul\":15526:15538   */\n      add\n        /* \"#utility.yul\":15519:15538   */\n      swap1\n      pop\n        /* \"#utility.yul\":15178:15544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15550:15969   */\n    tag_243:\n        /* \"#utility.yul\":15716:15720   */\n      0x00\n        /* \"#utility.yul\":15754:15756   */\n      0x20\n        /* \"#utility.yul\":15743:15752   */\n      dup3\n        /* \"#utility.yul\":15739:15757   */\n      add\n        /* \"#utility.yul\":15731:15757   */\n      swap1\n      pop\n        /* \"#utility.yul\":15803:15812   */\n      dup2\n        /* \"#utility.yul\":15797:15801   */\n      dup2\n        /* \"#utility.yul\":15793:15813   */\n      sub\n        /* \"#utility.yul\":15789:15790   */\n      0x00\n        /* \"#utility.yul\":15778:15787   */\n      dup4\n        /* \"#utility.yul\":15774:15791   */\n      add\n        /* \"#utility.yul\":15767:15814   */\n      mstore\n        /* \"#utility.yul\":15831:15962   */\n      tag_598\n        /* \"#utility.yul\":15957:15961   */\n      dup2\n        /* \"#utility.yul\":15831:15962   */\n      tag_424\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":15823:15962   */\n      swap1\n      pop\n        /* \"#utility.yul\":15550:15969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15975:16196   */\n    tag_425:\n        /* \"#utility.yul\":16115:16149   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":16111:16112   */\n      0x00\n        /* \"#utility.yul\":16103:16109   */\n      dup3\n        /* \"#utility.yul\":16099:16113   */\n      add\n        /* \"#utility.yul\":16092:16150   */\n      mstore\n        /* \"#utility.yul\":16184:16188   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16179:16181   */\n      0x20\n        /* \"#utility.yul\":16171:16177   */\n      dup3\n        /* \"#utility.yul\":16167:16182   */\n      add\n        /* \"#utility.yul\":16160:16189   */\n      mstore\n        /* \"#utility.yul\":15975:16196   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16202:16568   */\n    tag_426:\n        /* \"#utility.yul\":16344:16347   */\n      0x00\n        /* \"#utility.yul\":16365:16432   */\n      tag_601\n        /* \"#utility.yul\":16429:16431   */\n      0x22\n        /* \"#utility.yul\":16424:16427   */\n      dup4\n        /* \"#utility.yul\":16365:16432   */\n      tag_392\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16358:16432   */\n      swap2\n      pop\n        /* \"#utility.yul\":16441:16534   */\n      tag_602\n        /* \"#utility.yul\":16530:16533   */\n      dup3\n        /* \"#utility.yul\":16441:16534   */\n      tag_425\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16559:16561   */\n      0x40\n        /* \"#utility.yul\":16554:16557   */\n      dup3\n        /* \"#utility.yul\":16550:16562   */\n      add\n        /* \"#utility.yul\":16543:16562   */\n      swap1\n      pop\n        /* \"#utility.yul\":16202:16568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16574:16993   */\n    tag_246:\n        /* \"#utility.yul\":16740:16744   */\n      0x00\n        /* \"#utility.yul\":16778:16780   */\n      0x20\n        /* \"#utility.yul\":16767:16776   */\n      dup3\n        /* \"#utility.yul\":16763:16781   */\n      add\n        /* \"#utility.yul\":16755:16781   */\n      swap1\n      pop\n        /* \"#utility.yul\":16827:16836   */\n      dup2\n        /* \"#utility.yul\":16821:16825   */\n      dup2\n        /* \"#utility.yul\":16817:16837   */\n      sub\n        /* \"#utility.yul\":16813:16814   */\n      0x00\n        /* \"#utility.yul\":16802:16811   */\n      dup4\n        /* \"#utility.yul\":16798:16815   */\n      add\n        /* \"#utility.yul\":16791:16838   */\n      mstore\n        /* \"#utility.yul\":16855:16986   */\n      tag_604\n        /* \"#utility.yul\":16981:16985   */\n      dup2\n        /* \"#utility.yul\":16855:16986   */\n      tag_426\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":16847:16986   */\n      swap1\n      pop\n        /* \"#utility.yul\":16574:16993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16999:17230   */\n    tag_427:\n        /* \"#utility.yul\":17139:17173   */\n      0x45524332303a207472616e736665722066756e6374696f6e2069732070617573\n        /* \"#utility.yul\":17135:17136   */\n      0x00\n        /* \"#utility.yul\":17127:17133   */\n      dup3\n        /* \"#utility.yul\":17123:17137   */\n      add\n        /* \"#utility.yul\":17116:17174   */\n      mstore\n        /* \"#utility.yul\":17208:17222   */\n      0x65642062792061646d696e2e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":17203:17205   */\n      0x20\n        /* \"#utility.yul\":17195:17201   */\n      dup3\n        /* \"#utility.yul\":17191:17206   */\n      add\n        /* \"#utility.yul\":17184:17223   */\n      mstore\n        /* \"#utility.yul\":16999:17230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17236:17602   */\n    tag_428:\n        /* \"#utility.yul\":17378:17381   */\n      0x00\n        /* \"#utility.yul\":17399:17466   */\n      tag_607\n        /* \"#utility.yul\":17463:17465   */\n      0x2c\n        /* \"#utility.yul\":17458:17461   */\n      dup4\n        /* \"#utility.yul\":17399:17466   */\n      tag_392\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":17392:17466   */\n      swap2\n      pop\n        /* \"#utility.yul\":17475:17568   */\n      tag_608\n        /* \"#utility.yul\":17564:17567   */\n      dup3\n        /* \"#utility.yul\":17475:17568   */\n      tag_427\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":17593:17595   */\n      0x40\n        /* \"#utility.yul\":17588:17591   */\n      dup3\n        /* \"#utility.yul\":17584:17596   */\n      add\n        /* \"#utility.yul\":17577:17596   */\n      swap1\n      pop\n        /* \"#utility.yul\":17236:17602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17608:18027   */\n    tag_252:\n        /* \"#utility.yul\":17774:17778   */\n      0x00\n        /* \"#utility.yul\":17812:17814   */\n      0x20\n        /* \"#utility.yul\":17801:17810   */\n      dup3\n        /* \"#utility.yul\":17797:17815   */\n      add\n        /* \"#utility.yul\":17789:17815   */\n      swap1\n      pop\n        /* \"#utility.yul\":17861:17870   */\n      dup2\n        /* \"#utility.yul\":17855:17859   */\n      dup2\n        /* \"#utility.yul\":17851:17871   */\n      sub\n        /* \"#utility.yul\":17847:17848   */\n      0x00\n        /* \"#utility.yul\":17836:17845   */\n      dup4\n        /* \"#utility.yul\":17832:17849   */\n      add\n        /* \"#utility.yul\":17825:17872   */\n      mstore\n        /* \"#utility.yul\":17889:18020   */\n      tag_610\n        /* \"#utility.yul\":18015:18019   */\n      dup2\n        /* \"#utility.yul\":17889:18020   */\n      tag_428\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":17881:18020   */\n      swap1\n      pop\n        /* \"#utility.yul\":17608:18027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18033:18257   */\n    tag_429:\n        /* \"#utility.yul\":18173:18207   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":18169:18170   */\n      0x00\n        /* \"#utility.yul\":18161:18167   */\n      dup3\n        /* \"#utility.yul\":18157:18171   */\n      add\n        /* \"#utility.yul\":18150:18208   */\n      mstore\n        /* \"#utility.yul\":18242:18249   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18237:18239   */\n      0x20\n        /* \"#utility.yul\":18229:18235   */\n      dup3\n        /* \"#utility.yul\":18225:18240   */\n      add\n        /* \"#utility.yul\":18218:18250   */\n      mstore\n        /* \"#utility.yul\":18033:18257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18263:18629   */\n    tag_430:\n        /* \"#utility.yul\":18405:18408   */\n      0x00\n        /* \"#utility.yul\":18426:18493   */\n      tag_613\n        /* \"#utility.yul\":18490:18492   */\n      0x25\n        /* \"#utility.yul\":18485:18488   */\n      dup4\n        /* \"#utility.yul\":18426:18493   */\n      tag_392\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":18419:18493   */\n      swap2\n      pop\n        /* \"#utility.yul\":18502:18595   */\n      tag_614\n        /* \"#utility.yul\":18591:18594   */\n      dup3\n        /* \"#utility.yul\":18502:18595   */\n      tag_429\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":18620:18622   */\n      0x40\n        /* \"#utility.yul\":18615:18618   */\n      dup3\n        /* \"#utility.yul\":18611:18623   */\n      add\n        /* \"#utility.yul\":18604:18623   */\n      swap1\n      pop\n        /* \"#utility.yul\":18263:18629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18635:19054   */\n    tag_255:\n        /* \"#utility.yul\":18801:18805   */\n      0x00\n        /* \"#utility.yul\":18839:18841   */\n      0x20\n        /* \"#utility.yul\":18828:18837   */\n      dup3\n        /* \"#utility.yul\":18824:18842   */\n      add\n        /* \"#utility.yul\":18816:18842   */\n      swap1\n      pop\n        /* \"#utility.yul\":18888:18897   */\n      dup2\n        /* \"#utility.yul\":18882:18886   */\n      dup2\n        /* \"#utility.yul\":18878:18898   */\n      sub\n        /* \"#utility.yul\":18874:18875   */\n      0x00\n        /* \"#utility.yul\":18863:18872   */\n      dup4\n        /* \"#utility.yul\":18859:18876   */\n      add\n        /* \"#utility.yul\":18852:18899   */\n      mstore\n        /* \"#utility.yul\":18916:19047   */\n      tag_616\n        /* \"#utility.yul\":19042:19046   */\n      dup2\n        /* \"#utility.yul\":18916:19047   */\n      tag_430\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":18908:19047   */\n      swap1\n      pop\n        /* \"#utility.yul\":18635:19054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19060:19282   */\n    tag_431:\n        /* \"#utility.yul\":19200:19234   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":19196:19197   */\n      0x00\n        /* \"#utility.yul\":19188:19194   */\n      dup3\n        /* \"#utility.yul\":19184:19198   */\n      add\n        /* \"#utility.yul\":19177:19235   */\n      mstore\n        /* \"#utility.yul\":19269:19274   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19264:19266   */\n      0x20\n        /* \"#utility.yul\":19256:19262   */\n      dup3\n        /* \"#utility.yul\":19252:19267   */\n      add\n        /* \"#utility.yul\":19245:19275   */\n      mstore\n        /* \"#utility.yul\":19060:19282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19288:19654   */\n    tag_432:\n        /* \"#utility.yul\":19430:19433   */\n      0x00\n        /* \"#utility.yul\":19451:19518   */\n      tag_619\n        /* \"#utility.yul\":19515:19517   */\n      0x23\n        /* \"#utility.yul\":19510:19513   */\n      dup4\n        /* \"#utility.yul\":19451:19518   */\n      tag_392\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19444:19518   */\n      swap2\n      pop\n        /* \"#utility.yul\":19527:19620   */\n      tag_620\n        /* \"#utility.yul\":19616:19619   */\n      dup3\n        /* \"#utility.yul\":19527:19620   */\n      tag_431\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":19645:19647   */\n      0x40\n        /* \"#utility.yul\":19640:19643   */\n      dup3\n        /* \"#utility.yul\":19636:19648   */\n      add\n        /* \"#utility.yul\":19629:19648   */\n      swap1\n      pop\n        /* \"#utility.yul\":19288:19654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19660:20079   */\n    tag_258:\n        /* \"#utility.yul\":19826:19830   */\n      0x00\n        /* \"#utility.yul\":19864:19866   */\n      0x20\n        /* \"#utility.yul\":19853:19862   */\n      dup3\n        /* \"#utility.yul\":19849:19867   */\n      add\n        /* \"#utility.yul\":19841:19867   */\n      swap1\n      pop\n        /* \"#utility.yul\":19913:19922   */\n      dup2\n        /* \"#utility.yul\":19907:19911   */\n      dup2\n        /* \"#utility.yul\":19903:19923   */\n      sub\n        /* \"#utility.yul\":19899:19900   */\n      0x00\n        /* \"#utility.yul\":19888:19897   */\n      dup4\n        /* \"#utility.yul\":19884:19901   */\n      add\n        /* \"#utility.yul\":19877:19924   */\n      mstore\n        /* \"#utility.yul\":19941:20072   */\n      tag_622\n        /* \"#utility.yul\":20067:20071   */\n      dup2\n        /* \"#utility.yul\":19941:20072   */\n      tag_432\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":19933:20072   */\n      swap1\n      pop\n        /* \"#utility.yul\":19660:20079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20085:20310   */\n    tag_433:\n        /* \"#utility.yul\":20225:20259   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":20221:20222   */\n      0x00\n        /* \"#utility.yul\":20213:20219   */\n      dup3\n        /* \"#utility.yul\":20209:20223   */\n      add\n        /* \"#utility.yul\":20202:20260   */\n      mstore\n        /* \"#utility.yul\":20294:20302   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20289:20291   */\n      0x20\n        /* \"#utility.yul\":20281:20287   */\n      dup3\n        /* \"#utility.yul\":20277:20292   */\n      add\n        /* \"#utility.yul\":20270:20303   */\n      mstore\n        /* \"#utility.yul\":20085:20310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20316:20682   */\n    tag_434:\n        /* \"#utility.yul\":20458:20461   */\n      0x00\n        /* \"#utility.yul\":20479:20546   */\n      tag_625\n        /* \"#utility.yul\":20543:20545   */\n      0x26\n        /* \"#utility.yul\":20538:20541   */\n      dup4\n        /* \"#utility.yul\":20479:20546   */\n      tag_392\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":20472:20546   */\n      swap2\n      pop\n        /* \"#utility.yul\":20555:20648   */\n      tag_626\n        /* \"#utility.yul\":20644:20647   */\n      dup3\n        /* \"#utility.yul\":20555:20648   */\n      tag_433\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20673:20675   */\n      0x40\n        /* \"#utility.yul\":20668:20671   */\n      dup3\n        /* \"#utility.yul\":20664:20676   */\n      add\n        /* \"#utility.yul\":20657:20676   */\n      swap1\n      pop\n        /* \"#utility.yul\":20316:20682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20688:21107   */\n    tag_263:\n        /* \"#utility.yul\":20854:20858   */\n      0x00\n        /* \"#utility.yul\":20892:20894   */\n      0x20\n        /* \"#utility.yul\":20881:20890   */\n      dup3\n        /* \"#utility.yul\":20877:20895   */\n      add\n        /* \"#utility.yul\":20869:20895   */\n      swap1\n      pop\n        /* \"#utility.yul\":20941:20950   */\n      dup2\n        /* \"#utility.yul\":20935:20939   */\n      dup2\n        /* \"#utility.yul\":20931:20951   */\n      sub\n        /* \"#utility.yul\":20927:20928   */\n      0x00\n        /* \"#utility.yul\":20916:20925   */\n      dup4\n        /* \"#utility.yul\":20912:20929   */\n      add\n        /* \"#utility.yul\":20905:20952   */\n      mstore\n        /* \"#utility.yul\":20969:21100   */\n      tag_628\n        /* \"#utility.yul\":21095:21099   */\n      dup2\n        /* \"#utility.yul\":20969:21100   */\n      tag_434\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":20961:21100   */\n      swap1\n      pop\n        /* \"#utility.yul\":20688:21107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21113:21279   */\n    tag_435:\n        /* \"#utility.yul\":21253:21271   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":21249:21250   */\n      0x00\n        /* \"#utility.yul\":21241:21247   */\n      dup3\n        /* \"#utility.yul\":21237:21251   */\n      add\n        /* \"#utility.yul\":21230:21272   */\n      mstore\n        /* \"#utility.yul\":21113:21279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21285:21651   */\n    tag_436:\n        /* \"#utility.yul\":21427:21430   */\n      0x00\n        /* \"#utility.yul\":21448:21515   */\n      tag_631\n        /* \"#utility.yul\":21512:21514   */\n      0x10\n        /* \"#utility.yul\":21507:21510   */\n      dup4\n        /* \"#utility.yul\":21448:21515   */\n      tag_392\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":21441:21515   */\n      swap2\n      pop\n        /* \"#utility.yul\":21524:21617   */\n      tag_632\n        /* \"#utility.yul\":21613:21616   */\n      dup3\n        /* \"#utility.yul\":21524:21617   */\n      tag_435\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":21642:21644   */\n      0x20\n        /* \"#utility.yul\":21637:21640   */\n      dup3\n        /* \"#utility.yul\":21633:21645   */\n      add\n        /* \"#utility.yul\":21626:21645   */\n      swap1\n      pop\n        /* \"#utility.yul\":21285:21651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21657:22076   */\n    tag_279:\n        /* \"#utility.yul\":21823:21827   */\n      0x00\n        /* \"#utility.yul\":21861:21863   */\n      0x20\n        /* \"#utility.yul\":21850:21859   */\n      dup3\n        /* \"#utility.yul\":21846:21864   */\n      add\n        /* \"#utility.yul\":21838:21864   */\n      swap1\n      pop\n        /* \"#utility.yul\":21910:21919   */\n      dup2\n        /* \"#utility.yul\":21904:21908   */\n      dup2\n        /* \"#utility.yul\":21900:21920   */\n      sub\n        /* \"#utility.yul\":21896:21897   */\n      0x00\n        /* \"#utility.yul\":21885:21894   */\n      dup4\n        /* \"#utility.yul\":21881:21898   */\n      add\n        /* \"#utility.yul\":21874:21921   */\n      mstore\n        /* \"#utility.yul\":21938:22069   */\n      tag_634\n        /* \"#utility.yul\":22064:22068   */\n      dup2\n        /* \"#utility.yul\":21938:22069   */\n      tag_436\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":21930:22069   */\n      swap1\n      pop\n        /* \"#utility.yul\":21657:22076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22082:22252   */\n    tag_437:\n        /* \"#utility.yul\":22222:22244   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":22218:22219   */\n      0x00\n        /* \"#utility.yul\":22210:22216   */\n      dup3\n        /* \"#utility.yul\":22206:22220   */\n      add\n        /* \"#utility.yul\":22199:22245   */\n      mstore\n        /* \"#utility.yul\":22082:22252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22258:22624   */\n    tag_438:\n        /* \"#utility.yul\":22400:22403   */\n      0x00\n        /* \"#utility.yul\":22421:22488   */\n      tag_637\n        /* \"#utility.yul\":22485:22487   */\n      0x14\n        /* \"#utility.yul\":22480:22483   */\n      dup4\n        /* \"#utility.yul\":22421:22488   */\n      tag_392\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":22414:22488   */\n      swap2\n      pop\n        /* \"#utility.yul\":22497:22590   */\n      tag_638\n        /* \"#utility.yul\":22586:22589   */\n      dup3\n        /* \"#utility.yul\":22497:22590   */\n      tag_437\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":22615:22617   */\n      0x20\n        /* \"#utility.yul\":22610:22613   */\n      dup3\n        /* \"#utility.yul\":22606:22618   */\n      add\n        /* \"#utility.yul\":22599:22618   */\n      swap1\n      pop\n        /* \"#utility.yul\":22258:22624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22630:23049   */\n    tag_290:\n        /* \"#utility.yul\":22796:22800   */\n      0x00\n        /* \"#utility.yul\":22834:22836   */\n      0x20\n        /* \"#utility.yul\":22823:22832   */\n      dup3\n        /* \"#utility.yul\":22819:22837   */\n      add\n        /* \"#utility.yul\":22811:22837   */\n      swap1\n      pop\n        /* \"#utility.yul\":22883:22892   */\n      dup2\n        /* \"#utility.yul\":22877:22881   */\n      dup2\n        /* \"#utility.yul\":22873:22893   */\n      sub\n        /* \"#utility.yul\":22869:22870   */\n      0x00\n        /* \"#utility.yul\":22858:22867   */\n      dup4\n        /* \"#utility.yul\":22854:22871   */\n      add\n        /* \"#utility.yul\":22847:22894   */\n      mstore\n        /* \"#utility.yul\":22911:23042   */\n      tag_640\n        /* \"#utility.yul\":23037:23041   */\n      dup2\n        /* \"#utility.yul\":22911:23042   */\n      tag_438\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":22903:23042   */\n      swap1\n      pop\n        /* \"#utility.yul\":22630:23049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23055:23203   */\n    tag_439:\n        /* \"#utility.yul\":23157:23168   */\n      0x00\n        /* \"#utility.yul\":23194:23197   */\n      dup2\n        /* \"#utility.yul\":23179:23197   */\n      swap1\n      pop\n        /* \"#utility.yul\":23055:23203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23209:23382   */\n    tag_440:\n        /* \"#utility.yul\":23349:23374   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":23345:23346   */\n      0x00\n        /* \"#utility.yul\":23337:23343   */\n      dup3\n        /* \"#utility.yul\":23333:23347   */\n      add\n        /* \"#utility.yul\":23326:23375   */\n      mstore\n        /* \"#utility.yul\":23209:23382   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23388:23790   */\n    tag_441:\n        /* \"#utility.yul\":23548:23551   */\n      0x00\n        /* \"#utility.yul\":23569:23654   */\n      tag_644\n        /* \"#utility.yul\":23651:23653   */\n      0x17\n        /* \"#utility.yul\":23646:23649   */\n      dup4\n        /* \"#utility.yul\":23569:23654   */\n      tag_439\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":23562:23654   */\n      swap2\n      pop\n        /* \"#utility.yul\":23663:23756   */\n      tag_645\n        /* \"#utility.yul\":23752:23755   */\n      dup3\n        /* \"#utility.yul\":23663:23756   */\n      tag_440\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":23781:23783   */\n      0x17\n        /* \"#utility.yul\":23776:23779   */\n      dup3\n        /* \"#utility.yul\":23772:23784   */\n      add\n        /* \"#utility.yul\":23765:23784   */\n      swap1\n      pop\n        /* \"#utility.yul\":23388:23790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23796:24173   */\n    tag_442:\n        /* \"#utility.yul\":23902:23905   */\n      0x00\n        /* \"#utility.yul\":23930:23969   */\n      tag_647\n        /* \"#utility.yul\":23963:23968   */\n      dup3\n        /* \"#utility.yul\":23930:23969   */\n      tag_391\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":23985:24074   */\n      tag_648\n        /* \"#utility.yul\":24067:24073   */\n      dup2\n        /* \"#utility.yul\":24062:24065   */\n      dup6\n        /* \"#utility.yul\":23985:24074   */\n      tag_439\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":23978:24074   */\n      swap4\n      pop\n        /* \"#utility.yul\":24083:24135   */\n      tag_649\n        /* \"#utility.yul\":24128:24134   */\n      dup2\n        /* \"#utility.yul\":24123:24126   */\n      dup6\n        /* \"#utility.yul\":24116:24120   */\n      0x20\n        /* \"#utility.yul\":24109:24114   */\n      dup7\n        /* \"#utility.yul\":24105:24121   */\n      add\n        /* \"#utility.yul\":24083:24135   */\n      tag_393\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":24160:24166   */\n      dup1\n        /* \"#utility.yul\":24155:24158   */\n      dup5\n        /* \"#utility.yul\":24151:24167   */\n      add\n        /* \"#utility.yul\":24144:24167   */\n      swap2\n      pop\n        /* \"#utility.yul\":23906:24173   */\n      pop\n        /* \"#utility.yul\":23796:24173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24179:24346   */\n    tag_443:\n        /* \"#utility.yul\":24319:24338   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":24315:24316   */\n      0x00\n        /* \"#utility.yul\":24307:24313   */\n      dup3\n        /* \"#utility.yul\":24303:24317   */\n      add\n        /* \"#utility.yul\":24296:24339   */\n      mstore\n        /* \"#utility.yul\":24179:24346   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24352:24754   */\n    tag_444:\n        /* \"#utility.yul\":24512:24515   */\n      0x00\n        /* \"#utility.yul\":24533:24618   */\n      tag_652\n        /* \"#utility.yul\":24615:24617   */\n      0x11\n        /* \"#utility.yul\":24610:24613   */\n      dup4\n        /* \"#utility.yul\":24533:24618   */\n      tag_439\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":24526:24618   */\n      swap2\n      pop\n        /* \"#utility.yul\":24627:24720   */\n      tag_653\n        /* \"#utility.yul\":24716:24719   */\n      dup3\n        /* \"#utility.yul\":24627:24720   */\n      tag_443\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":24745:24747   */\n      0x11\n        /* \"#utility.yul\":24740:24743   */\n      dup3\n        /* \"#utility.yul\":24736:24748   */\n      add\n        /* \"#utility.yul\":24729:24748   */\n      swap1\n      pop\n        /* \"#utility.yul\":24352:24754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24760:25727   */\n    tag_327:\n        /* \"#utility.yul\":25142:25145   */\n      0x00\n        /* \"#utility.yul\":25164:25312   */\n      tag_655\n        /* \"#utility.yul\":25308:25311   */\n      dup3\n        /* \"#utility.yul\":25164:25312   */\n      tag_441\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":25157:25312   */\n      swap2\n      pop\n        /* \"#utility.yul\":25329:25424   */\n      tag_656\n        /* \"#utility.yul\":25420:25423   */\n      dup3\n        /* \"#utility.yul\":25411:25417   */\n      dup6\n        /* \"#utility.yul\":25329:25424   */\n      tag_442\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":25322:25424   */\n      swap2\n      pop\n        /* \"#utility.yul\":25441:25589   */\n      tag_657\n        /* \"#utility.yul\":25585:25588   */\n      dup3\n        /* \"#utility.yul\":25441:25589   */\n      tag_444\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":25434:25589   */\n      swap2\n      pop\n        /* \"#utility.yul\":25606:25701   */\n      tag_658\n        /* \"#utility.yul\":25697:25700   */\n      dup3\n        /* \"#utility.yul\":25688:25694   */\n      dup5\n        /* \"#utility.yul\":25606:25701   */\n      tag_442\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":25599:25701   */\n      swap2\n      pop\n        /* \"#utility.yul\":25718:25721   */\n      dup2\n        /* \"#utility.yul\":25711:25721   */\n      swap1\n      pop\n        /* \"#utility.yul\":24760:25727   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25733:25913   */\n    tag_332:\n        /* \"#utility.yul\":25781:25858   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25778:25779   */\n      0x00\n        /* \"#utility.yul\":25771:25859   */\n      mstore\n        /* \"#utility.yul\":25878:25882   */\n      0x32\n        /* \"#utility.yul\":25875:25876   */\n      0x04\n        /* \"#utility.yul\":25868:25883   */\n      mstore\n        /* \"#utility.yul\":25902:25906   */\n      0x24\n        /* \"#utility.yul\":25899:25900   */\n      0x00\n        /* \"#utility.yul\":25892:25907   */\n      revert\n        /* \"#utility.yul\":25919:26110   */\n    tag_342:\n        /* \"#utility.yul\":25959:25963   */\n      0x00\n        /* \"#utility.yul\":25979:25999   */\n      tag_661\n        /* \"#utility.yul\":25997:25998   */\n      dup3\n        /* \"#utility.yul\":25979:25999   */\n      tag_400\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":25974:25999   */\n      swap2\n      pop\n        /* \"#utility.yul\":26013:26033   */\n      tag_662\n        /* \"#utility.yul\":26031:26032   */\n      dup4\n        /* \"#utility.yul\":26013:26033   */\n      tag_400\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":26008:26033   */\n      swap3\n      pop\n        /* \"#utility.yul\":26052:26053   */\n      dup3\n        /* \"#utility.yul\":26049:26050   */\n      dup3\n        /* \"#utility.yul\":26046:26054   */\n      lt\n        /* \"#utility.yul\":26043:26077   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":26057:26075   */\n      tag_664\n      tag_418\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":26043:26077   */\n    tag_663:\n        /* \"#utility.yul\":26102:26103   */\n      dup3\n        /* \"#utility.yul\":26099:26100   */\n      dup3\n        /* \"#utility.yul\":26095:26104   */\n      sub\n        /* \"#utility.yul\":26087:26104   */\n      swap1\n      pop\n        /* \"#utility.yul\":25919:26110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26116:26296   */\n    tag_353:\n        /* \"#utility.yul\":26164:26241   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26161:26162   */\n      0x00\n        /* \"#utility.yul\":26154:26242   */\n      mstore\n        /* \"#utility.yul\":26261:26265   */\n      0x31\n        /* \"#utility.yul\":26258:26259   */\n      0x04\n        /* \"#utility.yul\":26251:26266   */\n      mstore\n        /* \"#utility.yul\":26285:26289   */\n      0x24\n        /* \"#utility.yul\":26282:26283   */\n      0x00\n        /* \"#utility.yul\":26275:26290   */\n      revert\n        /* \"#utility.yul\":26302:26650   */\n    tag_359:\n        /* \"#utility.yul\":26342:26349   */\n      0x00\n        /* \"#utility.yul\":26365:26385   */\n      tag_667\n        /* \"#utility.yul\":26383:26384   */\n      dup3\n        /* \"#utility.yul\":26365:26385   */\n      tag_400\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":26360:26385   */\n      swap2\n      pop\n        /* \"#utility.yul\":26399:26419   */\n      tag_668\n        /* \"#utility.yul\":26417:26418   */\n      dup4\n        /* \"#utility.yul\":26399:26419   */\n      tag_400\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":26394:26419   */\n      swap3\n      pop\n        /* \"#utility.yul\":26587:26588   */\n      dup2\n        /* \"#utility.yul\":26519:26585   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26515:26589   */\n      div\n        /* \"#utility.yul\":26512:26513   */\n      dup4\n        /* \"#utility.yul\":26509:26590   */\n      gt\n        /* \"#utility.yul\":26504:26505   */\n      dup3\n        /* \"#utility.yul\":26497:26506   */\n      iszero\n        /* \"#utility.yul\":26490:26507   */\n      iszero\n        /* \"#utility.yul\":26486:26591   */\n      and\n        /* \"#utility.yul\":26483:26614   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":26594:26612   */\n      tag_670\n      tag_418\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":26483:26614   */\n    tag_669:\n        /* \"#utility.yul\":26642:26643   */\n      dup3\n        /* \"#utility.yul\":26639:26640   */\n      dup3\n        /* \"#utility.yul\":26635:26644   */\n      mul\n        /* \"#utility.yul\":26624:26644   */\n      swap1\n      pop\n        /* \"#utility.yul\":26302:26650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26656:26836   */\n    tag_363:\n        /* \"#utility.yul\":26704:26781   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26701:26702   */\n      0x00\n        /* \"#utility.yul\":26694:26782   */\n      mstore\n        /* \"#utility.yul\":26801:26805   */\n      0x41\n        /* \"#utility.yul\":26798:26799   */\n      0x04\n        /* \"#utility.yul\":26791:26806   */\n      mstore\n        /* \"#utility.yul\":26825:26829   */\n      0x24\n        /* \"#utility.yul\":26822:26823   */\n      0x00\n        /* \"#utility.yul\":26815:26830   */\n      revert\n        /* \"#utility.yul\":26842:27013   */\n    tag_379:\n        /* \"#utility.yul\":26881:26884   */\n      0x00\n        /* \"#utility.yul\":26904:26928   */\n      tag_673\n        /* \"#utility.yul\":26922:26927   */\n      dup3\n        /* \"#utility.yul\":26904:26928   */\n      tag_400\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":26895:26928   */\n      swap2\n      pop\n        /* \"#utility.yul\":26950:26954   */\n      0x00\n        /* \"#utility.yul\":26943:26948   */\n      dup3\n        /* \"#utility.yul\":26940:26955   */\n      sub\n        /* \"#utility.yul\":26937:26978   */\n      tag_674\n      jumpi\n        /* \"#utility.yul\":26958:26976   */\n      tag_675\n      tag_418\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":26937:26978   */\n    tag_674:\n        /* \"#utility.yul\":27005:27006   */\n      0x01\n        /* \"#utility.yul\":26998:27003   */\n      dup3\n        /* \"#utility.yul\":26994:27007   */\n      sub\n        /* \"#utility.yul\":26987:27007   */\n      swap1\n      pop\n        /* \"#utility.yul\":26842:27013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27019:27201   */\n    tag_445:\n        /* \"#utility.yul\":27159:27193   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":27155:27156   */\n      0x00\n        /* \"#utility.yul\":27147:27153   */\n      dup3\n        /* \"#utility.yul\":27143:27157   */\n      add\n        /* \"#utility.yul\":27136:27194   */\n      mstore\n        /* \"#utility.yul\":27019:27201   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27207:27573   */\n    tag_446:\n        /* \"#utility.yul\":27349:27352   */\n      0x00\n        /* \"#utility.yul\":27370:27437   */\n      tag_678\n        /* \"#utility.yul\":27434:27436   */\n      0x20\n        /* \"#utility.yul\":27429:27432   */\n      dup4\n        /* \"#utility.yul\":27370:27437   */\n      tag_392\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":27363:27437   */\n      swap2\n      pop\n        /* \"#utility.yul\":27446:27539   */\n      tag_679\n        /* \"#utility.yul\":27535:27538   */\n      dup3\n        /* \"#utility.yul\":27446:27539   */\n      tag_445\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":27564:27566   */\n      0x20\n        /* \"#utility.yul\":27559:27562   */\n      dup3\n        /* \"#utility.yul\":27555:27567   */\n      add\n        /* \"#utility.yul\":27548:27567   */\n      swap1\n      pop\n        /* \"#utility.yul\":27207:27573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27579:27998   */\n    tag_382:\n        /* \"#utility.yul\":27745:27749   */\n      0x00\n        /* \"#utility.yul\":27783:27785   */\n      0x20\n        /* \"#utility.yul\":27772:27781   */\n      dup3\n        /* \"#utility.yul\":27768:27786   */\n      add\n        /* \"#utility.yul\":27760:27786   */\n      swap1\n      pop\n        /* \"#utility.yul\":27832:27841   */\n      dup2\n        /* \"#utility.yul\":27826:27830   */\n      dup2\n        /* \"#utility.yul\":27822:27842   */\n      sub\n        /* \"#utility.yul\":27818:27819   */\n      0x00\n        /* \"#utility.yul\":27807:27816   */\n      dup4\n        /* \"#utility.yul\":27803:27820   */\n      add\n        /* \"#utility.yul\":27796:27843   */\n      mstore\n        /* \"#utility.yul\":27860:27991   */\n      tag_681\n        /* \"#utility.yul\":27986:27990   */\n      dup2\n        /* \"#utility.yul\":27860:27991   */\n      tag_446\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":27852:27991   */\n      swap1\n      pop\n        /* \"#utility.yul\":27579:27998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220113553d54462740a165ee89504e9ca7b44063a6cc06ba26d7b47f275c040a5da64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1347": {
									"entryPoint": null,
									"id": 1347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_add_1726": {
									"entryPoint": 575,
									"id": 1726,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_1829": {
									"entryPoint": 803,
									"id": 1829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_1012": {
									"entryPoint": 334,
									"id": 1012,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1424": {
									"entryPoint": 176,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_1204": {
									"entryPoint": 184,
									"id": 1204,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setupRole_952": {
									"entryPoint": 256,
									"id": 952,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_2012": {
									"entryPoint": 278,
									"id": 2012,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasRole_840": {
									"entryPoint": 697,
									"id": 840,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "580:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:13"
															},
															"nodeType": "YulIf",
															"src": "1030:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:13",
														"type": ""
													}
												],
												"src": "874:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:13",
														"type": ""
													}
												],
												"src": "1161:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:13"
															},
															"nodeType": "YulIf",
															"src": "1434:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:13",
														"type": ""
													}
												],
												"src": "1296:308:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:13",
																"statements": []
															},
															"src": "1688:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:13"
															},
															"nodeType": "YulIf",
															"src": "1810:101:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:13",
														"type": ""
													}
												],
												"src": "1610:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:13"
															},
															"nodeType": "YulIf",
															"src": "2178:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:13",
														"type": ""
													}
												],
												"src": "1923:421:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:13"
															},
															"nodeType": "YulIf",
															"src": "2447:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:13",
														"type": ""
													}
												],
												"src": "2364:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:13"
															},
															"nodeType": "YulIf",
															"src": "2849:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:13",
														"type": ""
													}
												],
												"src": "2725:853:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:13"
															},
															"nodeType": "YulIf",
															"src": "3909:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:13"
															},
															"nodeType": "YulIf",
															"src": "4000:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:13",
														"type": ""
													}
												],
												"src": "3770:320:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200329838038062003298833981810160405281019062000037919062000593565b6000600260006101000a81548160ff02191690831515021790555081600690805190602001906200006a92919062000346565b5080600790805190602001906200008392919062000346565b50620000a86000801b6200009c620000b060201b60201c565b620000b860201b60201c565b50506200067c565b600033905090565b620000cf82826200010060201b62000e5a1760201c565b620000fb81600160008581526020019081526020016000206200011660201b62000e681790919060201c565b505050565b6200011282826200014e60201b60201c565b5050565b600062000146836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200023f60201b60201c565b905092915050565b620001608282620002b960201b60201c565b6200023b57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001e0620000b060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006200025383836200032360201b60201c565b620002ae578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620002b3565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054620003549062000647565b90600052602060002090601f016020900481019282620003785760008555620003c4565b82601f106200039357805160ff1916838001178555620003c4565b82800160010185558215620003c4579182015b82811115620003c3578251825591602001919060010190620003a6565b5b509050620003d39190620003d7565b5090565b5b80821115620003f2576000816000905550600101620003d8565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200045f8262000414565b810181811067ffffffffffffffff8211171562000481576200048062000425565b5b80604052505050565b600062000496620003f6565b9050620004a4828262000454565b919050565b600067ffffffffffffffff821115620004c757620004c662000425565b5b620004d28262000414565b9050602081019050919050565b60005b83811015620004ff578082015181840152602081019050620004e2565b838111156200050f576000848401525b50505050565b60006200052c6200052684620004a9565b6200048a565b9050828152602081018484840111156200054b576200054a6200040f565b5b62000558848285620004df565b509392505050565b600082601f8301126200057857620005776200040a565b5b81516200058a84826020860162000515565b91505092915050565b60008060408385031215620005ad57620005ac62000400565b5b600083015167ffffffffffffffff811115620005ce57620005cd62000405565b5b620005dc8582860162000560565b925050602083015167ffffffffffffffff8111156200060057620005ff62000405565b5b6200060e8582860162000560565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200066057607f821691505b60208210810362000676576200067562000618565b5b50919050565b612c0c806200068c6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb146103f0578063c6e858fe14610420578063ca15c8731461043e578063d0bbb0d71461046e578063d547741f1461048c578063dd62ed3e146104a85761014d565b806370a08231146102f45780639010d07c1461032457806391d148541461035457806395d89b4114610384578063a217fddf146103a2578063a457c2d7146103c05761014d565b8063248a9ca311610115578063248a9ca31461021e5780632f2ff15d1461024e578063313ce5671461026a57806339509351146102885780635394a892146102b85780635c975abb146102d65761014d565b806301ffc9a71461015257806306fdde0314610182578063095ea7b3146101a057806318160ddd146101d057806323b872dd146101ee575b600080fd5b61016c60048036038101906101679190611cf1565b6104d8565b6040516101799190611d39565b60405180910390f35b61018a610552565b6040516101979190611ded565b60405180910390f35b6101ba60048036038101906101b59190611ea3565b6105e4565b6040516101c79190611d39565b60405180910390f35b6101d8610602565b6040516101e59190611ef2565b60405180910390f35b61020860048036038101906102039190611f0d565b61060c565b6040516102159190611d39565b60405180910390f35b61023860048036038101906102339190611f96565b610779565b6040516102459190611fd2565b60405180910390f35b61026860048036038101906102639190611fed565b610798565b005b6102726107cc565b60405161027f9190612049565b60405180910390f35b6102a2600480360381019061029d9190611ea3565b6107d5565b6040516102af9190611d39565b60405180910390f35b6102c06108d4565b6040516102cd9190611d39565b60405180910390f35b6102de610938565b6040516102eb9190611d39565b60405180910390f35b61030e60048036038101906103099190612064565b61094f565b60405161031b9190611ef2565b60405180910390f35b61033e60048036038101906103399190612091565b610998565b60405161034b91906120e0565b60405180910390f35b61036e60048036038101906103699190611fed565b6109c7565b60405161037b9190611d39565b60405180910390f35b61038c610a31565b6040516103999190611ded565b60405180910390f35b6103aa610ac3565b6040516103b79190611fd2565b60405180910390f35b6103da60048036038101906103d59190611ea3565b610aca565b6040516103e79190611d39565b60405180910390f35b61040a60048036038101906104059190611ea3565b610c09565b6040516104179190611d39565b60405180910390f35b610428610c9c565b6040516104359190611d39565b60405180910390f35b61045860048036038101906104539190611f96565b610d00565b6040516104659190611ef2565b60405180910390f35b610476610d24565b6040516104839190611ef2565b60405180910390f35b6104a660048036038101906104a19190611fed565b610d2a565b005b6104c260048036038101906104bd91906120fb565b610dd3565b6040516104cf9190611ef2565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061054b575061054a82610e98565b5b9050919050565b6060600680546105619061216a565b80601f016020809104026020016040519081016040528092919081815260200182805461058d9061216a565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b5050505050905090565b60006105f86105f1610f12565b8484610f1a565b6001905092915050565b6000600554905090565b6000610616610f12565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a9061220d565b60405180910390fd5b61068e8484846110e3565b6000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106d9610f12565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610759576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107509061229f565b60405180910390fd5b61076d85610765610f12565b858403610f1a565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6107a282826113ad565b6107c78160016000858152602001908152602001600020610e6890919063ffffffff16565b505050565b60006008905090565b60006107eb6000801b6107e6610f12565b6109c7565b61082a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108219061230b565b60405180910390fd5b6108ca610835610f12565b848460046000610843610f12565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108c5919061235a565b610f1a565b6001905092915050565b60006108ea6000801b6108e5610f12565b6109c7565b610929576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109209061230b565b60405180910390fd5b6109316113d6565b6001905090565b6000600260009054906101000a900460ff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006109bf826001600086815260200190815260200160002061147990919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060078054610a409061216a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6c9061216a565b8015610ab95780601f10610a8e57610100808354040283529160200191610ab9565b820191906000526020600020905b815481529060010190602001808311610a9c57829003601f168201915b5050505050905090565b6000801b81565b6000610ae06000801b610adb610f12565b6109c7565b610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b169061230b565b60405180910390fd5b600060046000610b2d610f12565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be190612422565b60405180910390fd5b610bfe610bf5610f12565b85858403610f1a565b600191505092915050565b6000610c13610f12565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c779061220d565b60405180910390fd5b610c92610c8b610f12565b84846110e3565b6001905092915050565b6000610cb26000801b610cad610f12565b6109c7565b610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce89061230b565b60405180910390fd5b610cf9611493565b6001905090565b6000610d1d60016000848152602001908152602001600020611535565b9050919050565b60085481565b610d32610f12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d96906124b4565b60405180910390fd5b610da9828261154a565b610dce816001600085815260200190815260200160002061157390919063ffffffff16565b505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e6482826115a3565b5050565b6000610e90836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611683565b905092915050565b60007f4f3351b5000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610f0b5750610f0a826116f3565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8090612546565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef906125d8565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110d69190611ef2565b60405180910390a3505050565b6110eb610938565b1561112b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111229061266a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361119a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611191906126fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611209576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112009061278e565b60405180910390fd5b61121483838361175d565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561129b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129290612820565b60405180910390fd5b818103600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611330919061235a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113949190611ef2565b60405180910390a36113a7848484611762565b50505050565b6113b682610779565b6113c7816113c2610f12565b611767565b6113d183836115a3565b505050565b6113de610938565b1561141e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114159061288c565b60405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611462610f12565b60405161146f91906120e0565b60405180910390a1565b60006114888360000183611804565b60001c905092915050565b61149b610938565b6114da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d1906128f8565b60405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61151e610f12565b60405161152b91906120e0565b60405180910390a1565b60006115438260000161182f565b9050919050565b61155382610779565b6115648161155f610f12565b611767565b61156e8383611840565b505050565b600061159b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611921565b905092915050565b6115ad82826109c7565b61167f57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611624610f12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600061168f8383611a35565b6116e85782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506116ed565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b505050565b61177182826109c7565b611800576117968173ffffffffffffffffffffffffffffffffffffffff166014611a58565b6117a48360001c6020611a58565b6040516020016117b59291906129ec565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f79190611ded565b60405180910390fd5b5050565b600082600001828154811061181c5761181b612a26565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b61184a82826109c7565b1561191d57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118c2610f12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008083600101600084815260200190815260200160002054905060008114611a295760006001826119539190612a55565b905060006001866000018054905061196b9190612a55565b90508181146119da57600086600001828154811061198c5761198b612a26565b5b90600052602060002001549050808760000184815481106119b0576119af612a26565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806119ee576119ed612a89565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611a2f565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b606060006002836002611a6b9190612ab8565b611a75919061235a565b67ffffffffffffffff811115611a8e57611a8d612b12565b5b6040519080825280601f01601f191660200182016040528015611ac05781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611af857611af7612a26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611b5c57611b5b612a26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611b9c9190612ab8565b611ba6919061235a565b90505b6001811115611c46577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611be857611be7612a26565b5b1a60f81b828281518110611bff57611bfe612a26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611c3f90612b41565b9050611ba9565b5060008414611c8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8190612bb6565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cce81611c99565b8114611cd957600080fd5b50565b600081359050611ceb81611cc5565b92915050565b600060208284031215611d0757611d06611c94565b5b6000611d1584828501611cdc565b91505092915050565b60008115159050919050565b611d3381611d1e565b82525050565b6000602082019050611d4e6000830184611d2a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d8e578082015181840152602081019050611d73565b83811115611d9d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611dbf82611d54565b611dc98185611d5f565b9350611dd9818560208601611d70565b611de281611da3565b840191505092915050565b60006020820190508181036000830152611e078184611db4565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e3a82611e0f565b9050919050565b611e4a81611e2f565b8114611e5557600080fd5b50565b600081359050611e6781611e41565b92915050565b6000819050919050565b611e8081611e6d565b8114611e8b57600080fd5b50565b600081359050611e9d81611e77565b92915050565b60008060408385031215611eba57611eb9611c94565b5b6000611ec885828601611e58565b9250506020611ed985828601611e8e565b9150509250929050565b611eec81611e6d565b82525050565b6000602082019050611f076000830184611ee3565b92915050565b600080600060608486031215611f2657611f25611c94565b5b6000611f3486828701611e58565b9350506020611f4586828701611e58565b9250506040611f5686828701611e8e565b9150509250925092565b6000819050919050565b611f7381611f60565b8114611f7e57600080fd5b50565b600081359050611f9081611f6a565b92915050565b600060208284031215611fac57611fab611c94565b5b6000611fba84828501611f81565b91505092915050565b611fcc81611f60565b82525050565b6000602082019050611fe76000830184611fc3565b92915050565b6000806040838503121561200457612003611c94565b5b600061201285828601611f81565b925050602061202385828601611e58565b9150509250929050565b600060ff82169050919050565b6120438161202d565b82525050565b600060208201905061205e600083018461203a565b92915050565b60006020828403121561207a57612079611c94565b5b600061208884828501611e58565b91505092915050565b600080604083850312156120a8576120a7611c94565b5b60006120b685828601611f81565b92505060206120c785828601611e8e565b9150509250929050565b6120da81611e2f565b82525050565b60006020820190506120f560008301846120d1565b92915050565b6000806040838503121561211257612111611c94565b5b600061212085828601611e58565b925050602061213185828601611e58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061218257607f821691505b6020821081036121955761219461213b565b5b50919050565b7f45524332303a2063616c6c657220616e6420726563697069656e74206d75737460008201527f20626520646966666572656e7420616464726573732e00000000000000000000602082015250565b60006121f7603683611d5f565b91506122028261219b565b604082019050919050565b60006020820190508181036000830152612226816121ea565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000612289602883611d5f565b91506122948261222d565b604082019050919050565b600060208201905081810360008301526122b88161227c565b9050919050565b7f45524332303a206d75737420686176652061646d696e20726f6c650000000000600082015250565b60006122f5601b83611d5f565b9150612300826122bf565b602082019050919050565b60006020820190508181036000830152612324816122e8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061236582611e6d565b915061237083611e6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123a5576123a461232b565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061240c602583611d5f565b9150612417826123b0565b604082019050919050565b6000602082019050818103600083015261243b816123ff565b9050919050565b7f45524332303a2063616c6c65722063616e206e6f74207265766f6b65206f776e60008201527f20616464726573732e0000000000000000000000000000000000000000000000602082015250565b600061249e602983611d5f565b91506124a982612442565b604082019050919050565b600060208201905081810360008301526124cd81612491565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612530602483611d5f565b915061253b826124d4565b604082019050919050565b6000602082019050818103600083015261255f81612523565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006125c2602283611d5f565b91506125cd82612566565b604082019050919050565b600060208201905081810360008301526125f1816125b5565b9050919050565b7f45524332303a207472616e736665722066756e6374696f6e206973207061757360008201527f65642062792061646d696e2e0000000000000000000000000000000000000000602082015250565b6000612654602c83611d5f565b915061265f826125f8565b604082019050919050565b6000602082019050818103600083015261268381612647565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006126e6602583611d5f565b91506126f18261268a565b604082019050919050565b60006020820190508181036000830152612715816126d9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612778602383611d5f565b91506127838261271c565b604082019050919050565b600060208201905081810360008301526127a78161276b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061280a602683611d5f565b9150612815826127ae565b604082019050919050565b60006020820190508181036000830152612839816127fd565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612876601083611d5f565b915061288182612840565b602082019050919050565b600060208201905081810360008301526128a581612869565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006128e2601483611d5f565b91506128ed826128ac565b602082019050919050565b60006020820190508181036000830152612911816128d5565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000612959601783612918565b915061296482612923565b601782019050919050565b600061297a82611d54565b6129848185612918565b9350612994818560208601611d70565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006129d6601183612918565b91506129e1826129a0565b601182019050919050565b60006129f78261294c565b9150612a03828561296f565b9150612a0e826129c9565b9150612a1a828461296f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612a6082611e6d565b9150612a6b83611e6d565b925082821015612a7e57612a7d61232b565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612ac382611e6d565b9150612ace83611e6d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b0757612b0661232b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000612b4c82611e6d565b915060008203612b5f57612b5e61232b565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000612ba0602083611d5f565b9150612bab82612b6a565b602082019050919050565b60006020820190508181036000830152612bcf81612b93565b905091905056fea2646970667358221220113553d54462740a165ee89504e9ca7b44063a6cc06ba26d7b47f275c040a5da64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3298 CODESIZE SUB DUP1 PUSH3 0x3298 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x593 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6A SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST POP DUP1 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x83 SWAP3 SWAP2 SWAP1 PUSH3 0x346 JUMP JUMPDEST POP PUSH3 0xA8 PUSH1 0x0 DUP1 SHL PUSH3 0x9C PUSH3 0xB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x67C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0xCF DUP3 DUP3 PUSH3 0x100 PUSH1 0x20 SHL PUSH3 0xE5A OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xFB DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x116 PUSH1 0x20 SHL PUSH3 0xE68 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x112 DUP3 DUP3 PUSH3 0x14E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x146 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x23F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x160 DUP3 DUP3 PUSH3 0x2B9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x23B JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1E0 PUSH3 0xB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x253 DUP4 DUP4 PUSH3 0x323 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2AE JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x2B3 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x354 SWAP1 PUSH3 0x647 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x378 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x3C4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x393 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3C4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3C4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3C3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3A6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x3D3 SWAP2 SWAP1 PUSH3 0x3D7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3F2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x3D8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x45F DUP3 PUSH3 0x414 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x481 JUMPI PUSH3 0x480 PUSH3 0x425 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x496 PUSH3 0x3F6 JUMP JUMPDEST SWAP1 POP PUSH3 0x4A4 DUP3 DUP3 PUSH3 0x454 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4C7 JUMPI PUSH3 0x4C6 PUSH3 0x425 JUMP JUMPDEST JUMPDEST PUSH3 0x4D2 DUP3 PUSH3 0x414 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4FF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4E2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x50F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x52C PUSH3 0x526 DUP5 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x48A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x54B JUMPI PUSH3 0x54A PUSH3 0x40F JUMP JUMPDEST JUMPDEST PUSH3 0x558 DUP5 DUP3 DUP6 PUSH3 0x4DF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x578 JUMPI PUSH3 0x577 PUSH3 0x40A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x58A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x5AD JUMPI PUSH3 0x5AC PUSH3 0x400 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5CE JUMPI PUSH3 0x5CD PUSH3 0x405 JUMP JUMPDEST JUMPDEST PUSH3 0x5DC DUP6 DUP3 DUP7 ADD PUSH3 0x560 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x600 JUMPI PUSH3 0x5FF PUSH3 0x405 JUMP JUMPDEST JUMPDEST PUSH3 0x60E DUP6 DUP3 DUP7 ADD PUSH3 0x560 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x660 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x676 JUMPI PUSH3 0x675 PUSH3 0x618 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C0C DUP1 PUSH3 0x68C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xC6E858FE EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xD0BBB0D7 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A8 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3C0 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x5394A892 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D6 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x476 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x54B JUMPI POP PUSH2 0x54A DUP3 PUSH2 0xE98 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x561 SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58D SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH2 0x5F1 PUSH2 0xF12 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68E DUP5 DUP5 DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x6D9 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x750 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D DUP6 PUSH2 0x765 PUSH2 0xF12 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A2 DUP3 DUP3 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xE68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EB PUSH1 0x0 DUP1 SHL PUSH2 0x7E6 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x835 PUSH2 0xF12 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x4 PUSH1 0x0 PUSH2 0x843 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA PUSH1 0x0 DUP1 SHL PUSH2 0x8E5 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x920 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x931 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1479 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xA40 SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA6C SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA8E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA9C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE0 PUSH1 0x0 DUP1 SHL PUSH2 0xADB PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0xB2D PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xBEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE1 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH2 0xBF5 PUSH2 0xF12 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC92 PUSH2 0xC8B PUSH2 0xF12 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB2 PUSH1 0x0 DUP1 SHL PUSH2 0xCAD PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE8 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF9 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1535 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD32 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD96 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA9 DUP3 DUP3 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xDCE DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1573 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 DUP3 DUP3 PUSH2 0x15A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4F3351B500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xF0B JUMPI POP PUSH2 0xF0A DUP3 PUSH2 0x16F3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF80 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10D6 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10EB PUSH2 0x938 JUMP JUMPDEST ISZERO PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1122 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1191 SWAP1 PUSH2 0x26FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1200 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1214 DUP4 DUP4 DUP4 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1292 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1394 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13A7 DUP5 DUP5 DUP5 PUSH2 0x1762 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x13B6 DUP3 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x13C2 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x13D1 DUP4 DUP4 PUSH2 0x15A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13DE PUSH2 0x938 JUMP JUMPDEST ISZERO PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1462 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146F SWAP2 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1488 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149B PUSH2 0x938 JUMP JUMPDEST PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP1 PUSH2 0x28F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x151E PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152B SWAP2 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 PUSH1 0x0 ADD PUSH2 0x182F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1553 DUP3 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x155F PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x156E DUP4 DUP4 PUSH2 0x1840 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159B DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15AD DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x167F JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1624 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168F DUP4 DUP4 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x16E8 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1771 DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x1800 JUMPI PUSH2 0x1796 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x17A4 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B5 SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184A DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST ISZERO PUSH2 0x191D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18C2 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1A29 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x2A55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x196B SWAP2 SWAP1 PUSH2 0x2A55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x19DA JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x198C JUMPI PUSH2 0x198B PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x19B0 JUMPI PUSH2 0x19AF PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x2A89 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1A6B SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH2 0x1A75 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A8E JUMPI PUSH2 0x1A8D PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AC0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AF8 JUMPI PUSH2 0x1AF7 PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1B9C SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C46 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1C3F SWAP1 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA9 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1C8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C81 SWAP1 PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCE DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CEB DUP2 PUSH2 0x1CC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D06 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D15 DUP5 DUP3 DUP6 ADD PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D33 DUP2 PUSH2 0x1D1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D73 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBF DUP3 PUSH2 0x1D54 JUMP JUMPDEST PUSH2 0x1DC9 DUP2 DUP6 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x1DA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 DUP5 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3A DUP3 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4A DUP2 PUSH2 0x1E2F JUMP JUMPDEST DUP2 EQ PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E67 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E80 DUP2 PUSH2 0x1E6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E9D DUP2 PUSH2 0x1E77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ED9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EEC DUP2 PUSH2 0x1E6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F34 DUP7 DUP3 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F45 DUP7 DUP3 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F56 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F73 DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F90 DUP2 PUSH2 0x1F6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP5 DUP3 DUP6 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FCC DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2012 DUP6 DUP3 DUP7 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2023 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2043 DUP2 PUSH2 0x202D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x205E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x203A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207A JUMPI PUSH2 0x2079 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2088 DUP5 DUP3 DUP6 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20A8 JUMPI PUSH2 0x20A7 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1E8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DA DUP2 PUSH2 0x1E2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2120 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2131 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2182 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x213B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2063616C6C657220616E6420726563697069656E74206D757374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20626520646966666572656E7420616464726573732E00000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F7 PUSH1 0x36 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2202 DUP3 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2226 DUP2 PUSH2 0x21EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2289 PUSH1 0x28 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2294 DUP3 PUSH2 0x222D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B8 DUP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D75737420686176652061646D696E20726F6C650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F5 PUSH1 0x1B DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2300 DUP3 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2324 DUP2 PUSH2 0x22E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2365 DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2370 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x23A5 JUMPI PUSH2 0x23A4 PUSH2 0x232B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240C PUSH1 0x25 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2417 DUP3 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x243B DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2063616C6C65722063616E206E6F74207265766F6B65206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616464726573732E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249E PUSH1 0x29 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x24A9 DUP3 PUSH2 0x2442 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24CD DUP2 PUSH2 0x2491 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2530 PUSH1 0x24 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x253B DUP3 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255F DUP2 PUSH2 0x2523 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C2 PUSH1 0x22 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x25CD DUP3 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F1 DUP2 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066756E6374696F6E2069732070617573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65642062792061646D696E2E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2654 PUSH1 0x2C DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x265F DUP3 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2683 DUP2 PUSH2 0x2647 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E6 PUSH1 0x25 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x26F1 DUP3 PUSH2 0x268A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2715 DUP2 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2778 PUSH1 0x23 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2783 DUP3 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27A7 DUP2 PUSH2 0x276B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280A PUSH1 0x26 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2815 DUP3 PUSH2 0x27AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2839 DUP2 PUSH2 0x27FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2876 PUSH1 0x10 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2881 DUP3 PUSH2 0x2840 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A5 DUP2 PUSH2 0x2869 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E2 PUSH1 0x14 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x28ED DUP3 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2911 DUP2 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2959 PUSH1 0x17 DUP4 PUSH2 0x2918 JUMP JUMPDEST SWAP2 POP PUSH2 0x2964 DUP3 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297A DUP3 PUSH2 0x1D54 JUMP JUMPDEST PUSH2 0x2984 DUP2 DUP6 PUSH2 0x2918 JUMP JUMPDEST SWAP4 POP PUSH2 0x2994 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D70 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D6 PUSH1 0x11 DUP4 PUSH2 0x2918 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E1 DUP3 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F7 DUP3 PUSH2 0x294C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A03 DUP3 DUP6 PUSH2 0x296F JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0E DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1A DUP3 DUP5 PUSH2 0x296F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A60 DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6B DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A7E JUMPI PUSH2 0x2A7D PUSH2 0x232B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AC3 DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACE DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B07 JUMPI PUSH2 0x2B06 PUSH2 0x232B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B4C DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2B5F JUMPI PUSH2 0x2B5E PUSH2 0x232B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA0 PUSH1 0x20 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAB DUP3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BCF DUP2 PUSH2 0x2B93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT CALLDATALOAD MSTORE8 0xD5 DIFFICULTY PUSH3 0x740A16 0x5E 0xE8 SWAP6 DIV 0xE9 0xCA PUSH28 0x44063A6CC06BA26D7B47F275C040A5DA64736F6C634300080E003300 ",
							"sourceMap": "1443:12196:0:-:0;;;2109:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;934:5:7;924:7;;:15;;;;;;;;;;;;;;;;;;2184:5:0;2176;:13;;;;;;;;;;;;:::i;:::-;;2210:7;2200;:17;;;;;;;;;;;;:::i;:::-;;2228:44;2052:4:2;2239:18:0;;2259:12;:10;;;:12;;:::i;:::-;2228:10;;;:44;;:::i;:::-;2109:171;;1443:12196;;602:98:8;655:7;682:10;675:17;;602:98;:::o;2909:169:3:-;2997:31;3014:4;3020:7;2997:16;;;;;:31;;:::i;:::-;3039;3062:7;3039:12;:18;3052:4;3039:18;;;;;;;;;;;:22;;;;;;:31;;;;:::i;:::-;;2909:169;;:::o;6353:112:2:-;6432:25;6443:4;6449:7;6432:10;;;:25;;:::i;:::-;6353:112;;:::o;7767:152:12:-;7837:4;7861:50;7866:3;:10;;7902:5;7886:23;;7878:32;;7861:4;;;:50;;:::i;:::-;7854:57;;7767:152;;;;:::o;6977:238:2:-;7061:22;7069:4;7075:7;7061;;;:22;;:::i;:::-;7056:152;;7132:4;7100:6;:12;7107:4;7100:12;;;;;;;;;;;:20;;:29;7121:7;7100:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7183:12;:10;;;:12;;:::i;:::-;7156:40;;7174:7;7156:40;;7168:4;7156:40;;;;;;;;;;7056:152;6977:238;;:::o;1682:414:12:-;1745:4;1767:21;1777:3;1782:5;1767:9;;;:21;;:::i;:::-;1762:327;;1805:3;:11;;1822:5;1805:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1988:3;:11;;:18;;;;1966:3;:12;;:19;1979:5;1966:19;;;;;;;;;;;:40;;;;2028:4;2021:11;;;;1762:327;2072:5;2065:12;;1682:414;;;;;:::o;2916:139:2:-;2994:4;3018:6;:12;3025:4;3018:12;;;;;;;;;;;:20;;:29;3039:7;3018:29;;;;;;;;;;;;;;;;;;;;;;;;;3011:36;;2916:139;;;;:::o;3778:129:12:-;3851:4;3898:1;3875:3;:12;;:19;3888:5;3875:19;;;;;;;;;;;;:24;;3868:31;;3778:129;;;;:::o;1443:12196:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1443:12196:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_786": {
									"entryPoint": 2755,
									"id": 786,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TOKEN_COUNT_35": {
									"entryPoint": 3364,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_1726": {
									"entryPoint": 5763,
									"id": 1726,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_679": {
									"entryPoint": 5986,
									"id": 679,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_657": {
									"entryPoint": 3866,
									"id": 657,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_at_1860": {
									"entryPoint": 6148,
									"id": 1860,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_668": {
									"entryPoint": 5981,
									"id": 668,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkRole_883": {
									"entryPoint": 5991,
									"id": 883,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_contains_1829": {
									"entryPoint": 6709,
									"id": 1829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_grantRole_1012": {
									"entryPoint": 5539,
									"id": 1012,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_length_1843": {
									"entryPoint": 6191,
									"id": 1843,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1424": {
									"entryPoint": 3858,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1395": {
									"entryPoint": 5078,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_remove_1810": {
									"entryPoint": 6433,
									"id": 1810,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_revokeRole_1043": {
									"entryPoint": 6208,
									"id": 1043,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setupRole_952": {
									"entryPoint": 3674,
									"id": 952,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_454": {
									"entryPoint": 4323,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1411": {
									"entryPoint": 5267,
									"id": 1411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_2012": {
									"entryPoint": 3688,
									"id": 2012,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_209": {
									"entryPoint": 3539,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_230": {
									"entryPoint": 1508,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@at_2108": {
									"entryPoint": 5241,
									"id": 2108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_152": {
									"entryPoint": 2383,
									"id": 152,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_88": {
									"entryPoint": 1996,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_370": {
									"entryPoint": 2762,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_898": {
									"entryPoint": 1913,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleMemberCount_1120": {
									"entryPoint": 3328,
									"id": 1120,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleMember_1104": {
									"entryPoint": 2456,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grantRole_1146": {
									"entryPoint": 1944,
									"id": 1146,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@grantRole_918": {
									"entryPoint": 5037,
									"id": 918,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_840": {
									"entryPoint": 2503,
									"id": 840,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_322": {
									"entryPoint": 2005,
									"id": 322,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@length_2081": {
									"entryPoint": 5429,
									"id": 2081,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_68": {
									"entryPoint": 1362,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pausedOptions_108": {
									"entryPoint": 2260,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1356": {
									"entryPoint": 2360,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remove_2039": {
									"entryPoint": 5491,
									"id": 2039,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@revokeRole_1180": {
									"entryPoint": 3370,
									"id": 1180,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_938": {
									"entryPoint": 5450,
									"id": 938,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1085": {
									"entryPoint": 1240,
									"id": 1085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1660": {
									"entryPoint": 5875,
									"id": 1660,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_821": {
									"entryPoint": 3736,
									"id": 821,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_78": {
									"entryPoint": 2609,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_1636": {
									"entryPoint": 6744,
									"id": 1636,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_138": {
									"entryPoint": 1538,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_286": {
									"entryPoint": 1548,
									"id": 286,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_191": {
									"entryPoint": 3081,
									"id": 191,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unPausedOptions_128": {
									"entryPoint": 3228,
									"id": 128,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 11073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 11114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 10012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 10412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 9574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f": {
									"entryPoint": 8603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923": {
									"entryPoint": 9282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 10158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 10304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c": {
									"entryPoint": 9720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 8749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11": {
									"entryPoint": 8895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 9866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 9428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 10531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 9136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 10656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:28001:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:13",
																"statements": []
															},
															"src": "1876:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:13"
															},
															"nodeType": "YulIf",
															"src": "1998:101:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:13",
														"type": ""
													}
												],
												"src": "1798:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:13",
														"type": ""
													}
												],
												"src": "2111:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:13",
														"type": ""
													}
												],
												"src": "2219:364:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:13",
														"type": ""
													}
												],
												"src": "2589:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2978:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2985:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2974:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:13",
														"type": ""
													}
												],
												"src": "2908:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3085:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3095:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3124:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3106:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3095:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3067:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3077:7:13",
														"type": ""
													}
												],
												"src": "3040:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3185:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3242:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3251:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3254:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3244:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3244:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3244:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3208:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3233:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3215:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3215:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3205:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:43:13"
															},
															"nodeType": "YulIf",
															"src": "3195:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3178:5:13",
														"type": ""
													}
												],
												"src": "3142:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3354:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3341:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3332:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3397:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3370:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3370:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3300:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3308:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3316:5:13",
														"type": ""
													}
												],
												"src": "3270:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3460:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3470:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3481:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3470:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3442:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3452:7:13",
														"type": ""
													}
												],
												"src": "3415:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3541:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3598:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3607:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3600:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3564:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3589:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3571:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3571:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3561:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3561:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3554:43:13"
															},
															"nodeType": "YulIf",
															"src": "3551:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3534:5:13",
														"type": ""
													}
												],
												"src": "3498:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3678:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3688:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3697:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3697:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3688:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3753:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3726:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3656:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3664:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3672:5:13",
														"type": ""
													}
												],
												"src": "3626:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3854:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3900:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3902:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3902:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3902:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3875:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3871:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3867:32:13"
															},
															"nodeType": "YulIf",
															"src": "3864:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3993:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4008:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4022:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4012:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4037:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4072:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4083:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4068:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4068:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4092:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4047:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4037:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4120:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4135:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4139:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4165:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4175:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4165:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3816:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3827:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3839:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3847:6:13",
														"type": ""
													}
												],
												"src": "3771:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4316:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4333:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4356:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4338:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4338:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4326:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4326:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4304:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4311:3:13",
														"type": ""
													}
												],
												"src": "4251:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4483:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4495:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4491:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4483:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4563:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4576:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4587:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4572:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4519:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4519:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4445:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4457:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4468:4:13",
														"type": ""
													}
												],
												"src": "4375:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4703:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4749:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4751:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4751:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4751:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4724:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4733:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4720:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4720:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4716:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:32:13"
															},
															"nodeType": "YulIf",
															"src": "4713:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4842:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4857:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4871:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4861:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4886:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4921:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4932:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4917:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4917:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4941:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4896:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4896:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4886:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4969:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4984:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4998:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4988:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5014:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5049:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5060:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5045:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5045:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5069:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5024:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5014:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5097:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5112:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5126:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5116:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5142:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5177:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5188:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5173:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5173:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5197:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5152:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5152:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5142:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4657:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4668:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4680:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4688:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4696:6:13",
														"type": ""
													}
												],
												"src": "4603:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5273:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5283:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5294:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5283:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5255:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5265:7:13",
														"type": ""
													}
												],
												"src": "5228:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5354:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5411:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5420:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5423:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5413:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5413:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5413:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5377:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5402:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5384:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5384:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5374:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:43:13"
															},
															"nodeType": "YulIf",
															"src": "5364:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5347:5:13",
														"type": ""
													}
												],
												"src": "5311:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5501:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5523:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5510:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5510:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5501:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5566:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "5539:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5539:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5469:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5477:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5485:5:13",
														"type": ""
													}
												],
												"src": "5439:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5696:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5698:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5698:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5698:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5671:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5680:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5667:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5692:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5663:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:32:13"
															},
															"nodeType": "YulIf",
															"src": "5660:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5789:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5804:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5818:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5808:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5833:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5868:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5879:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5864:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5864:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5888:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5843:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5843:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5833:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5620:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5631:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5643:6:13",
														"type": ""
													}
												],
												"src": "5584:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5984:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6001:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6024:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6006:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5972:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5979:3:13",
														"type": ""
													}
												],
												"src": "5919:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6141:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6151:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6163:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6174:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6151:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6231:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6244:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6255:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6240:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6240:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6187:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6187:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6187:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6113:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6125:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6136:4:13",
														"type": ""
													}
												],
												"src": "6043:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6354:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6400:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6402:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6375:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6384:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6396:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6367:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6367:32:13"
															},
															"nodeType": "YulIf",
															"src": "6364:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6493:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6508:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6522:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6512:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6537:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6572:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6583:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6568:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6568:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6592:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6547:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6547:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6537:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6620:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6635:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6639:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6665:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6700:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6711:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6696:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6696:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6720:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6675:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6675:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6665:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6316:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6327:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6339:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6347:6:13",
														"type": ""
													}
												],
												"src": "6271:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6794:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6804:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6819:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6826:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6815:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6804:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6776:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6786:7:13",
														"type": ""
													}
												],
												"src": "6751:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6904:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6921:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6942:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6926:15:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6926:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6914:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6914:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6914:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6892:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6899:3:13",
														"type": ""
													}
												],
												"src": "6843:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7055:120:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7065:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7077:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7088:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7073:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7065:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7141:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7154:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7165:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7150:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7101:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7101:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7027:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7039:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7050:4:13",
														"type": ""
													}
												],
												"src": "6961:214:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7247:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7293:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7295:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7295:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7295:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7268:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7277:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7264:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7264:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7289:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7260:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:32:13"
															},
															"nodeType": "YulIf",
															"src": "7257:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "7386:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7401:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7405:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7430:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7465:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7476:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7461:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7461:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7485:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7440:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7440:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7430:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7217:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7228:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7240:6:13",
														"type": ""
													}
												],
												"src": "7181:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7599:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7645:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7647:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7647:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7647:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7620:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7629:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7616:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7616:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7641:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7612:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7612:32:13"
															},
															"nodeType": "YulIf",
															"src": "7609:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "7738:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7753:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7767:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7757:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7782:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7817:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7828:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7813:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7813:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7837:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "7792:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7782:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7865:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7880:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7894:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7884:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7910:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7945:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7956:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7941:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7941:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7965:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7920:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7910:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7561:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7572:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7584:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7592:6:13",
														"type": ""
													}
												],
												"src": "7516:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8061:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8078:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8101:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8083:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8083:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8071:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8071:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8071:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8049:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8056:3:13",
														"type": ""
													}
												],
												"src": "7996:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8218:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8228:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8240:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8251:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8236:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8236:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8228:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8308:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8321:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8332:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8264:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8264:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8264:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8190:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8202:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8213:4:13",
														"type": ""
													}
												],
												"src": "8120:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8431:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8477:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8479:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8479:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8479:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8452:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8448:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8448:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8473:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8444:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8444:32:13"
															},
															"nodeType": "YulIf",
															"src": "8441:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "8570:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8585:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8599:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8589:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8614:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8649:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8660:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8645:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8645:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8669:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8624:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8624:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8614:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8697:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8712:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8726:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8716:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8742:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8777:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8788:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8773:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8773:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8797:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8752:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8752:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8742:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8393:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8404:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8416:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8424:6:13",
														"type": ""
													}
												],
												"src": "8348:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8856:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8873:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8876:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8866:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8970:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8973:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8963:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8994:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8997:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8987:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8987:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8987:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8828:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9065:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9075:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9089:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9095:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9085:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9085:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9075:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9106:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9136:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9142:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9132:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9110:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9183:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9197:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9211:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9219:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9207:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9207:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9197:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9163:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9156:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9156:26:13"
															},
															"nodeType": "YulIf",
															"src": "9153:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9286:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "9300:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9300:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9300:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9250:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9273:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9281:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9270:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9247:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9247:38:13"
															},
															"nodeType": "YulIf",
															"src": "9244:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9049:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9058:6:13",
														"type": ""
													}
												],
												"src": "9014:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:135:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9468:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9476:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9464:14:13"
																	},
																	{
																		"hexValue": "45524332303a2063616c6c657220616e6420726563697069656e74206d757374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9480:34:13",
																		"type": "",
																		"value": "ERC20: caller and recipient must"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9457:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9457:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9457:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9536:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9544:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:15:13"
																	},
																	{
																		"hexValue": "20626520646966666572656e7420616464726573732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9549:24:13",
																		"type": "",
																		"value": " be different address."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9438:6:13",
														"type": ""
													}
												],
												"src": "9340:241:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9733:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9743:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9809:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9814:2:13",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9750:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9750:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9743:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9915:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f",
																	"nodeType": "YulIdentifier",
																	"src": "9826:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9826:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9826:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9928:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9939:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9944:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9935:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9935:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9928:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9721:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9729:3:13",
														"type": ""
													}
												],
												"src": "9587:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10130:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10140:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10152:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10163:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10148:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10148:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10140:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10187:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10198:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10183:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10183:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10206:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10212:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10202:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10202:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10176:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10176:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10176:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10232:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10366:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10240:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10240:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10232:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10110:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10125:4:13",
														"type": ""
													}
												],
												"src": "9959:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10490:121:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10512:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10520:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10508:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10524:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10501:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10501:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10580:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10588:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10576:15:13"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10593:10:13",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10569:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10569:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10569:35:13"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10482:6:13",
														"type": ""
													}
												],
												"src": "10384:227:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10763:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10773:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10839:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10844:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10780:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10773:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10945:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nodeType": "YulIdentifier",
																	"src": "10856:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10856:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10856:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10958:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10969:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10974:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10965:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10965:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10958:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10751:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10759:3:13",
														"type": ""
													}
												],
												"src": "10617:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11160:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11170:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11182:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11193:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11178:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11178:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11170:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11217:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11228:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11213:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11213:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11236:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11242:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11232:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11232:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11206:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11206:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11262:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11396:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11270:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11270:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11262:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11140:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11155:4:13",
														"type": ""
													}
												],
												"src": "10989:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11520:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11542:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11550:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11538:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11538:14:13"
																	},
																	{
																		"hexValue": "45524332303a206d75737420686176652061646d696e20726f6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11554:29:13",
																		"type": "",
																		"value": "ERC20: must have admin role"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11531:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11531:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11531:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11512:6:13",
														"type": ""
													}
												],
												"src": "11414:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11743:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11753:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11819:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11824:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11760:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11760:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11753:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11925:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																	"nodeType": "YulIdentifier",
																	"src": "11836:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11836:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11836:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11938:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11949:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11954:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11945:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11945:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11938:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11731:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11739:3:13",
														"type": ""
													}
												],
												"src": "11597:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12140:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12150:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12162:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12173:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12158:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12158:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12150:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12197:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12208:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12193:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12193:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12216:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12222:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12212:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12212:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12186:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12242:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12376:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12250:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12242:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12120:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12135:4:13",
														"type": ""
													}
												],
												"src": "11969:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12422:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12439:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12442:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12432:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12432:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12432:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12536:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12539:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12529:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12560:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12563:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12553:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12553:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12553:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12394:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12624:261:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12634:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12657:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12639:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12639:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12634:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12668:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12691:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12673:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12673:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12668:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12831:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12833:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12833:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12833:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12752:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12759:66:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12827:1:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12755:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12755:74:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12749:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12749:81:13"
															},
															"nodeType": "YulIf",
															"src": "12746:107:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12863:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12874:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12877:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12870:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12870:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12863:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12611:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12614:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12620:3:13",
														"type": ""
													}
												],
												"src": "12580:305:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12997:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13019:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13027:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13015:14:13"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13031:34:13",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13008:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13008:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13008:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13087:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13095:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13083:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13083:15:13"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13100:7:13",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13076:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13076:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13076:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12989:6:13",
														"type": ""
													}
												],
												"src": "12891:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13267:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13277:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13343:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13348:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13284:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13284:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13277:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13449:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "13360:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13360:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13360:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13462:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13473:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13478:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13469:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13469:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13462:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13255:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13263:3:13",
														"type": ""
													}
												],
												"src": "13121:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13664:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13674:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13686:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13697:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13682:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13682:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13674:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13721:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13732:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13717:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13717:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13740:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13746:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13736:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13710:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13710:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13710:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13766:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13900:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13774:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13774:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13766:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13644:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13659:4:13",
														"type": ""
													}
												],
												"src": "13493:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14024:122:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14046:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14054:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14042:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14042:14:13"
																	},
																	{
																		"hexValue": "45524332303a2063616c6c65722063616e206e6f74207265766f6b65206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14058:34:13",
																		"type": "",
																		"value": "ERC20: caller can not revoke own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14035:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14035:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14035:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14114:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14122:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14110:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14110:15:13"
																	},
																	{
																		"hexValue": "20616464726573732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14127:11:13",
																		"type": "",
																		"value": " address."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14103:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14103:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14103:36:13"
														}
													]
												},
												"name": "store_literal_in_memory_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14016:6:13",
														"type": ""
													}
												],
												"src": "13918:228:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14298:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14308:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14374:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14379:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14315:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14315:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14308:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14480:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923",
																	"nodeType": "YulIdentifier",
																	"src": "14391:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14391:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14391:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14493:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14504:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14509:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14500:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14500:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14493:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14286:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14294:3:13",
														"type": ""
													}
												],
												"src": "14152:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14695:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14705:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14717:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14728:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14713:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14713:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14705:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14752:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14763:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14748:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14748:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14771:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14777:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14767:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14767:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14741:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14741:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14741:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14797:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14931:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14805:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14805:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14797:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14675:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14690:4:13",
														"type": ""
													}
												],
												"src": "14524:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15055:117:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15077:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15085:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15073:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15073:14:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15089:34:13",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15066:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15066:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15066:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15145:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15153:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15141:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15141:15:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15158:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15134:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15134:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15134:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15047:6:13",
														"type": ""
													}
												],
												"src": "14949:223:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15324:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15334:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15400:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15405:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15341:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15341:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15334:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15506:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "15417:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15417:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15417:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15519:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15530:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15535:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15526:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15526:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15519:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15312:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15320:3:13",
														"type": ""
													}
												],
												"src": "15178:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15721:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15731:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15743:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15754:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15739:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15739:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15731:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15778:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15789:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15774:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15774:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15797:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15803:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15793:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15793:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15767:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15767:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15767:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15823:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15957:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15831:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15831:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15823:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15701:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15716:4:13",
														"type": ""
													}
												],
												"src": "15550:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16081:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16103:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16111:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16099:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16099:14:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16115:34:13",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16092:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16092:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16092:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16171:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16179:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16167:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16167:15:13"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16184:4:13",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16160:29:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16160:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16073:6:13",
														"type": ""
													}
												],
												"src": "15975:221:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16348:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16358:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16424:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16429:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16365:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16365:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16358:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16530:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "16441:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16441:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16441:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16543:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16554:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16559:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16550:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16550:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16543:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16336:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16344:3:13",
														"type": ""
													}
												],
												"src": "16202:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16745:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16755:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16767:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16778:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16763:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16763:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16755:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16802:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16813:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16798:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16798:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16821:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16827:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16817:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16817:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16791:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16791:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16791:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16847:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16981:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16855:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16855:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16847:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16725:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16740:4:13",
														"type": ""
													}
												],
												"src": "16574:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17105:125:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17127:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17135:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17123:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17123:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066756e6374696f6e2069732070617573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17139:34:13",
																		"type": "",
																		"value": "ERC20: transfer function is paus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17116:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17116:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17116:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17195:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17203:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17191:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17191:15:13"
																	},
																	{
																		"hexValue": "65642062792061646d696e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17208:14:13",
																		"type": "",
																		"value": "ed by admin."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17184:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17184:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17184:39:13"
														}
													]
												},
												"name": "store_literal_in_memory_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17097:6:13",
														"type": ""
													}
												],
												"src": "16999:231:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17382:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17392:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17458:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17463:2:13",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17399:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17399:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17392:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17564:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c",
																	"nodeType": "YulIdentifier",
																	"src": "17475:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17475:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17475:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17577:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17588:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17593:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17584:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17584:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17577:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17370:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17378:3:13",
														"type": ""
													}
												],
												"src": "17236:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17779:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17789:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17801:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17812:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17797:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17797:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17789:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17836:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17847:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17832:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17832:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17855:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17861:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17851:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17851:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17825:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17825:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17825:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17881:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18015:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17889:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17889:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17881:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17759:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17774:4:13",
														"type": ""
													}
												],
												"src": "17608:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18139:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18161:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18169:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18157:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18157:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18173:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18150:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18150:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18150:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18229:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18237:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18225:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18225:15:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18242:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18218:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18218:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18218:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18131:6:13",
														"type": ""
													}
												],
												"src": "18033:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18409:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18419:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18485:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18490:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18426:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18426:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18419:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18591:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "18502:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18502:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18502:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18604:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18615:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18620:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18611:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18611:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18604:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18397:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18405:3:13",
														"type": ""
													}
												],
												"src": "18263:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18806:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18816:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18828:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18839:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18824:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18824:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18816:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18863:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18874:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18859:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18859:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18882:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18888:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18878:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18878:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18852:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18852:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18852:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18908:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19042:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18916:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18916:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18908:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18786:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18801:4:13",
														"type": ""
													}
												],
												"src": "18635:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19166:116:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19188:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19196:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19184:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19184:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19200:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19177:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19177:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19177:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19256:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19264:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19252:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19252:15:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19269:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19245:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19245:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19245:30:13"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19158:6:13",
														"type": ""
													}
												],
												"src": "19060:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19434:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19444:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19510:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19515:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19451:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19451:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19444:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19616:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "19527:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19527:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19527:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19629:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19640:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19645:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19636:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19636:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19629:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19422:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19430:3:13",
														"type": ""
													}
												],
												"src": "19288:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19831:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19841:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19853:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19864:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19849:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19849:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19841:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19888:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19899:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19884:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19884:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19907:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19903:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19903:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19877:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19877:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19877:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19933:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20067:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19941:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19941:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19933:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19811:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19826:4:13",
														"type": ""
													}
												],
												"src": "19660:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20191:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20213:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20221:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20209:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20209:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20225:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20202:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20202:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20281:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20289:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20277:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20277:15:13"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20294:8:13",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20270:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20270:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20270:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20183:6:13",
														"type": ""
													}
												],
												"src": "20085:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20462:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20472:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20538:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20543:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20479:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20479:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20472:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20644:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "20555:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20555:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20555:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20657:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20668:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20673:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20664:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20664:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20657:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20450:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20458:3:13",
														"type": ""
													}
												],
												"src": "20316:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20859:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20869:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20881:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20892:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20877:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20877:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20869:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20916:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20927:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20912:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20912:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20935:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20941:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20931:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20931:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20905:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20905:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20905:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20961:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21095:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20969:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20969:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20961:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20839:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20854:4:13",
														"type": ""
													}
												],
												"src": "20688:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21219:60:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21241:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21249:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21237:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21237:14:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21253:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21230:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21230:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21230:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21211:6:13",
														"type": ""
													}
												],
												"src": "21113:166:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21431:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21441:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21507:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21512:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21448:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21448:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21441:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21613:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "21524:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21524:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21524:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21626:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21637:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21642:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21633:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21633:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21626:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21419:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21427:3:13",
														"type": ""
													}
												],
												"src": "21285:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21828:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21838:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21850:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21861:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21846:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21846:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21838:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21885:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21896:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21881:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21881:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21904:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21910:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21900:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21900:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21874:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21874:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21874:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21930:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22064:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21938:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21938:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21930:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21808:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21823:4:13",
														"type": ""
													}
												],
												"src": "21657:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22188:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22210:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22218:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22206:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22206:14:13"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22222:22:13",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22199:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22199:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22199:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22180:6:13",
														"type": ""
													}
												],
												"src": "22082:170:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22404:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22414:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22480:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22485:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22421:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22421:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22414:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22586:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "22497:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22497:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22497:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22599:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22610:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22615:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22606:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22606:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22599:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22392:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22400:3:13",
														"type": ""
													}
												],
												"src": "22258:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22801:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22811:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22823:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22834:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22819:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22819:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22811:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22858:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22869:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22854:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22854:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22877:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22883:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22873:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22873:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22847:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22847:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22847:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22903:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23037:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22911:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22911:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22903:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22781:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22796:4:13",
														"type": ""
													}
												],
												"src": "22630:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23169:34:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23179:18:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23194:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23179:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23141:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23146:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23157:11:13",
														"type": ""
													}
												],
												"src": "23055:148:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23315:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23337:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23345:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23333:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23333:14:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23349:25:13",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23326:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23326:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23326:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23307:6:13",
														"type": ""
													}
												],
												"src": "23209:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23552:238:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23562:92:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23646:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23651:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23569:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23569:85:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23562:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23752:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "23663:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23663:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23663:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23765:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23776:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23781:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23772:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23765:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23540:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23548:3:13",
														"type": ""
													}
												],
												"src": "23388:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23906:267:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23916:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23963:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23930:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23930:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23920:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23978:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24062:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24067:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23985:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23985:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23978:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24109:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24116:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24105:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24105:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24123:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24128:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "24083:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24083:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24083:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24144:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24155:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24160:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24151:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24151:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24144:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23887:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23894:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23902:3:13",
														"type": ""
													}
												],
												"src": "23796:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24285:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24307:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24315:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24303:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24303:14:13"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24319:19:13",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24296:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24296:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24296:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24277:6:13",
														"type": ""
													}
												],
												"src": "24179:167:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24516:238:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24526:92:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24610:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24615:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24533:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24533:85:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24526:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24716:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "24627:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24627:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24627:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24729:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24740:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24745:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24736:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24736:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24729:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24504:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24512:3:13",
														"type": ""
													}
												],
												"src": "24352:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25146:581:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25157:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25308:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25164:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25164:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25157:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25322:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25411:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25420:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25329:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25329:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25322:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25434:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25585:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25441:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25441:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25434:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25599:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25688:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25697:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25606:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25606:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25599:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25711:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25718:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25711:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25117:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25123:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25131:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25142:3:13",
														"type": ""
													}
												],
												"src": "24760:967:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25761:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25778:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25781:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25771:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25771:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25771:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25875:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25878:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25868:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25868:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25868:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25899:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25902:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25892:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25892:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25892:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "25733:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25964:146:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25974:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25997:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25979:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25979:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25974:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26008:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26031:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26013:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26013:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26008:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26055:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26057:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26057:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26057:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26049:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26052:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26046:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26046:8:13"
															},
															"nodeType": "YulIf",
															"src": "26043:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26087:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26099:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26102:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26095:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26095:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "26087:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25950:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25953:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "25959:4:13",
														"type": ""
													}
												],
												"src": "25919:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26144:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26161:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26164:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26154:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26154:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26258:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26261:4:13",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26251:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26251:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26251:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26282:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26285:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26275:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26275:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26275:15:13"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "26116:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26350:300:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26360:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26383:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26365:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26365:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26360:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26394:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26417:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26399:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26399:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26394:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26592:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26594:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26594:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26594:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "26504:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "26497:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26497:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "26490:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26490:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "26512:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "26519:66:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "26587:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "26515:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26515:74:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "26509:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26509:81:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26486:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26486:105:13"
															},
															"nodeType": "YulIf",
															"src": "26483:131:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26624:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26639:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26642:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26635:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26635:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "26624:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26333:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26336:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "26342:7:13",
														"type": ""
													}
												],
												"src": "26302:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26684:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26701:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26704:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26694:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26694:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26694:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26798:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26801:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26791:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26791:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26791:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26822:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26825:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26815:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26815:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26815:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "26656:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26885:128:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26895:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26922:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26904:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26904:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26895:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26956:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26958:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26958:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26958:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26943:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26950:4:13",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26940:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26940:15:13"
															},
															"nodeType": "YulIf",
															"src": "26937:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26987:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26998:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27005:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26994:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26994:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "26987:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26871:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "26881:3:13",
														"type": ""
													}
												],
												"src": "26842:171:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27125:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27147:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27155:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27143:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27143:14:13"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27159:34:13",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27136:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27136:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27136:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27117:6:13",
														"type": ""
													}
												],
												"src": "27019:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27353:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27363:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27429:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27434:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27370:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27370:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27363:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27535:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "27446:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27446:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27446:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27548:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27559:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27564:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27555:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27555:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27548:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27341:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27349:3:13",
														"type": ""
													}
												],
												"src": "27207:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27750:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27760:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27772:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27783:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27768:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27768:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27760:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27807:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27818:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27803:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27803:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27826:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27832:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27822:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27822:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27796:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27796:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27796:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27852:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27986:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27860:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27860:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27852:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27730:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27745:4:13",
														"type": ""
													}
												],
												"src": "27579:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: caller and recipient must\")\n\n        mstore(add(memPtr, 32), \" be different address.\")\n\n    }\n\n    function abi_encode_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: must have admin role\")\n\n    }\n\n    function abi_encode_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: caller can not revoke own\")\n\n        mstore(add(memPtr, 32), \" address.\")\n\n    }\n\n    function abi_encode_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer function is paus\")\n\n        mstore(add(memPtr, 32), \"ed by admin.\")\n\n    }\n\n    function abi_encode_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb146103f0578063c6e858fe14610420578063ca15c8731461043e578063d0bbb0d71461046e578063d547741f1461048c578063dd62ed3e146104a85761014d565b806370a08231146102f45780639010d07c1461032457806391d148541461035457806395d89b4114610384578063a217fddf146103a2578063a457c2d7146103c05761014d565b8063248a9ca311610115578063248a9ca31461021e5780632f2ff15d1461024e578063313ce5671461026a57806339509351146102885780635394a892146102b85780635c975abb146102d65761014d565b806301ffc9a71461015257806306fdde0314610182578063095ea7b3146101a057806318160ddd146101d057806323b872dd146101ee575b600080fd5b61016c60048036038101906101679190611cf1565b6104d8565b6040516101799190611d39565b60405180910390f35b61018a610552565b6040516101979190611ded565b60405180910390f35b6101ba60048036038101906101b59190611ea3565b6105e4565b6040516101c79190611d39565b60405180910390f35b6101d8610602565b6040516101e59190611ef2565b60405180910390f35b61020860048036038101906102039190611f0d565b61060c565b6040516102159190611d39565b60405180910390f35b61023860048036038101906102339190611f96565b610779565b6040516102459190611fd2565b60405180910390f35b61026860048036038101906102639190611fed565b610798565b005b6102726107cc565b60405161027f9190612049565b60405180910390f35b6102a2600480360381019061029d9190611ea3565b6107d5565b6040516102af9190611d39565b60405180910390f35b6102c06108d4565b6040516102cd9190611d39565b60405180910390f35b6102de610938565b6040516102eb9190611d39565b60405180910390f35b61030e60048036038101906103099190612064565b61094f565b60405161031b9190611ef2565b60405180910390f35b61033e60048036038101906103399190612091565b610998565b60405161034b91906120e0565b60405180910390f35b61036e60048036038101906103699190611fed565b6109c7565b60405161037b9190611d39565b60405180910390f35b61038c610a31565b6040516103999190611ded565b60405180910390f35b6103aa610ac3565b6040516103b79190611fd2565b60405180910390f35b6103da60048036038101906103d59190611ea3565b610aca565b6040516103e79190611d39565b60405180910390f35b61040a60048036038101906104059190611ea3565b610c09565b6040516104179190611d39565b60405180910390f35b610428610c9c565b6040516104359190611d39565b60405180910390f35b61045860048036038101906104539190611f96565b610d00565b6040516104659190611ef2565b60405180910390f35b610476610d24565b6040516104839190611ef2565b60405180910390f35b6104a660048036038101906104a19190611fed565b610d2a565b005b6104c260048036038101906104bd91906120fb565b610dd3565b6040516104cf9190611ef2565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061054b575061054a82610e98565b5b9050919050565b6060600680546105619061216a565b80601f016020809104026020016040519081016040528092919081815260200182805461058d9061216a565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b5050505050905090565b60006105f86105f1610f12565b8484610f1a565b6001905092915050565b6000600554905090565b6000610616610f12565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a9061220d565b60405180910390fd5b61068e8484846110e3565b6000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106d9610f12565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610759576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107509061229f565b60405180910390fd5b61076d85610765610f12565b858403610f1a565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6107a282826113ad565b6107c78160016000858152602001908152602001600020610e6890919063ffffffff16565b505050565b60006008905090565b60006107eb6000801b6107e6610f12565b6109c7565b61082a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108219061230b565b60405180910390fd5b6108ca610835610f12565b848460046000610843610f12565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108c5919061235a565b610f1a565b6001905092915050565b60006108ea6000801b6108e5610f12565b6109c7565b610929576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109209061230b565b60405180910390fd5b6109316113d6565b6001905090565b6000600260009054906101000a900460ff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006109bf826001600086815260200190815260200160002061147990919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060078054610a409061216a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6c9061216a565b8015610ab95780601f10610a8e57610100808354040283529160200191610ab9565b820191906000526020600020905b815481529060010190602001808311610a9c57829003601f168201915b5050505050905090565b6000801b81565b6000610ae06000801b610adb610f12565b6109c7565b610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b169061230b565b60405180910390fd5b600060046000610b2d610f12565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be190612422565b60405180910390fd5b610bfe610bf5610f12565b85858403610f1a565b600191505092915050565b6000610c13610f12565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c779061220d565b60405180910390fd5b610c92610c8b610f12565b84846110e3565b6001905092915050565b6000610cb26000801b610cad610f12565b6109c7565b610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce89061230b565b60405180910390fd5b610cf9611493565b6001905090565b6000610d1d60016000848152602001908152602001600020611535565b9050919050565b60085481565b610d32610f12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d96906124b4565b60405180910390fd5b610da9828261154a565b610dce816001600085815260200190815260200160002061157390919063ffffffff16565b505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e6482826115a3565b5050565b6000610e90836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611683565b905092915050565b60007f4f3351b5000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610f0b5750610f0a826116f3565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8090612546565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ff8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fef906125d8565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110d69190611ef2565b60405180910390a3505050565b6110eb610938565b1561112b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111229061266a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361119a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611191906126fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611209576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112009061278e565b60405180910390fd5b61121483838361175d565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561129b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129290612820565b60405180910390fd5b818103600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611330919061235a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113949190611ef2565b60405180910390a36113a7848484611762565b50505050565b6113b682610779565b6113c7816113c2610f12565b611767565b6113d183836115a3565b505050565b6113de610938565b1561141e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114159061288c565b60405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611462610f12565b60405161146f91906120e0565b60405180910390a1565b60006114888360000183611804565b60001c905092915050565b61149b610938565b6114da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d1906128f8565b60405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61151e610f12565b60405161152b91906120e0565b60405180910390a1565b60006115438260000161182f565b9050919050565b61155382610779565b6115648161155f610f12565b611767565b61156e8383611840565b505050565b600061159b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611921565b905092915050565b6115ad82826109c7565b61167f57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611624610f12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600061168f8383611a35565b6116e85782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506116ed565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b505050565b61177182826109c7565b611800576117968173ffffffffffffffffffffffffffffffffffffffff166014611a58565b6117a48360001c6020611a58565b6040516020016117b59291906129ec565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f79190611ded565b60405180910390fd5b5050565b600082600001828154811061181c5761181b612a26565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b61184a82826109c7565b1561191d57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118c2610f12565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008083600101600084815260200190815260200160002054905060008114611a295760006001826119539190612a55565b905060006001866000018054905061196b9190612a55565b90508181146119da57600086600001828154811061198c5761198b612a26565b5b90600052602060002001549050808760000184815481106119b0576119af612a26565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806119ee576119ed612a89565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611a2f565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b606060006002836002611a6b9190612ab8565b611a75919061235a565b67ffffffffffffffff811115611a8e57611a8d612b12565b5b6040519080825280601f01601f191660200182016040528015611ac05781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611af857611af7612a26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611b5c57611b5b612a26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611b9c9190612ab8565b611ba6919061235a565b90505b6001811115611c46577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611be857611be7612a26565b5b1a60f81b828281518110611bff57611bfe612a26565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611c3f90612b41565b9050611ba9565b5060008414611c8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8190612bb6565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cce81611c99565b8114611cd957600080fd5b50565b600081359050611ceb81611cc5565b92915050565b600060208284031215611d0757611d06611c94565b5b6000611d1584828501611cdc565b91505092915050565b60008115159050919050565b611d3381611d1e565b82525050565b6000602082019050611d4e6000830184611d2a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d8e578082015181840152602081019050611d73565b83811115611d9d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611dbf82611d54565b611dc98185611d5f565b9350611dd9818560208601611d70565b611de281611da3565b840191505092915050565b60006020820190508181036000830152611e078184611db4565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e3a82611e0f565b9050919050565b611e4a81611e2f565b8114611e5557600080fd5b50565b600081359050611e6781611e41565b92915050565b6000819050919050565b611e8081611e6d565b8114611e8b57600080fd5b50565b600081359050611e9d81611e77565b92915050565b60008060408385031215611eba57611eb9611c94565b5b6000611ec885828601611e58565b9250506020611ed985828601611e8e565b9150509250929050565b611eec81611e6d565b82525050565b6000602082019050611f076000830184611ee3565b92915050565b600080600060608486031215611f2657611f25611c94565b5b6000611f3486828701611e58565b9350506020611f4586828701611e58565b9250506040611f5686828701611e8e565b9150509250925092565b6000819050919050565b611f7381611f60565b8114611f7e57600080fd5b50565b600081359050611f9081611f6a565b92915050565b600060208284031215611fac57611fab611c94565b5b6000611fba84828501611f81565b91505092915050565b611fcc81611f60565b82525050565b6000602082019050611fe76000830184611fc3565b92915050565b6000806040838503121561200457612003611c94565b5b600061201285828601611f81565b925050602061202385828601611e58565b9150509250929050565b600060ff82169050919050565b6120438161202d565b82525050565b600060208201905061205e600083018461203a565b92915050565b60006020828403121561207a57612079611c94565b5b600061208884828501611e58565b91505092915050565b600080604083850312156120a8576120a7611c94565b5b60006120b685828601611f81565b92505060206120c785828601611e8e565b9150509250929050565b6120da81611e2f565b82525050565b60006020820190506120f560008301846120d1565b92915050565b6000806040838503121561211257612111611c94565b5b600061212085828601611e58565b925050602061213185828601611e58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061218257607f821691505b6020821081036121955761219461213b565b5b50919050565b7f45524332303a2063616c6c657220616e6420726563697069656e74206d75737460008201527f20626520646966666572656e7420616464726573732e00000000000000000000602082015250565b60006121f7603683611d5f565b91506122028261219b565b604082019050919050565b60006020820190508181036000830152612226816121ea565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000612289602883611d5f565b91506122948261222d565b604082019050919050565b600060208201905081810360008301526122b88161227c565b9050919050565b7f45524332303a206d75737420686176652061646d696e20726f6c650000000000600082015250565b60006122f5601b83611d5f565b9150612300826122bf565b602082019050919050565b60006020820190508181036000830152612324816122e8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061236582611e6d565b915061237083611e6d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123a5576123a461232b565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061240c602583611d5f565b9150612417826123b0565b604082019050919050565b6000602082019050818103600083015261243b816123ff565b9050919050565b7f45524332303a2063616c6c65722063616e206e6f74207265766f6b65206f776e60008201527f20616464726573732e0000000000000000000000000000000000000000000000602082015250565b600061249e602983611d5f565b91506124a982612442565b604082019050919050565b600060208201905081810360008301526124cd81612491565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612530602483611d5f565b915061253b826124d4565b604082019050919050565b6000602082019050818103600083015261255f81612523565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006125c2602283611d5f565b91506125cd82612566565b604082019050919050565b600060208201905081810360008301526125f1816125b5565b9050919050565b7f45524332303a207472616e736665722066756e6374696f6e206973207061757360008201527f65642062792061646d696e2e0000000000000000000000000000000000000000602082015250565b6000612654602c83611d5f565b915061265f826125f8565b604082019050919050565b6000602082019050818103600083015261268381612647565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006126e6602583611d5f565b91506126f18261268a565b604082019050919050565b60006020820190508181036000830152612715816126d9565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612778602383611d5f565b91506127838261271c565b604082019050919050565b600060208201905081810360008301526127a78161276b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061280a602683611d5f565b9150612815826127ae565b604082019050919050565b60006020820190508181036000830152612839816127fd565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612876601083611d5f565b915061288182612840565b602082019050919050565b600060208201905081810360008301526128a581612869565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006128e2601483611d5f565b91506128ed826128ac565b602082019050919050565b60006020820190508181036000830152612911816128d5565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000612959601783612918565b915061296482612923565b601782019050919050565b600061297a82611d54565b6129848185612918565b9350612994818560208601611d70565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006129d6601183612918565b91506129e1826129a0565b601182019050919050565b60006129f78261294c565b9150612a03828561296f565b9150612a0e826129c9565b9150612a1a828461296f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612a6082611e6d565b9150612a6b83611e6d565b925082821015612a7e57612a7d61232b565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612ac382611e6d565b9150612ace83611e6d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b0757612b0661232b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000612b4c82611e6d565b915060008203612b5f57612b5e61232b565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000612ba0602083611d5f565b9150612bab82612b6a565b602082019050919050565b60006020820190508181036000830152612bcf81612b93565b905091905056fea2646970667358221220113553d54462740a165ee89504e9ca7b44063a6cc06ba26d7b47f275c040a5da64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xC6E858FE EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xD0BBB0D7 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A8 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3C0 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x5394A892 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D6 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x476 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x54B JUMPI POP PUSH2 0x54A DUP3 PUSH2 0xE98 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x561 SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x58D SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH2 0x5F1 PUSH2 0xF12 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68E DUP5 DUP5 DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x6D9 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x750 SWAP1 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76D DUP6 PUSH2 0x765 PUSH2 0xF12 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A2 DUP3 DUP3 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xE68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EB PUSH1 0x0 DUP1 SHL PUSH2 0x7E6 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x835 PUSH2 0xF12 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x4 PUSH1 0x0 PUSH2 0x843 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA PUSH1 0x0 DUP1 SHL PUSH2 0x8E5 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x920 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x931 PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1479 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0xA40 SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA6C SWAP1 PUSH2 0x216A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA8E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA9C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE0 PUSH1 0x0 DUP1 SHL PUSH2 0xADB PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0xB2D PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xBEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE1 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH2 0xBF5 PUSH2 0xF12 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC92 PUSH2 0xC8B PUSH2 0xF12 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB2 PUSH1 0x0 DUP1 SHL PUSH2 0xCAD PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE8 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCF9 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1535 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD32 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD96 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA9 DUP3 DUP3 PUSH2 0x154A JUMP JUMPDEST PUSH2 0xDCE DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1573 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 DUP3 DUP3 PUSH2 0x15A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1683 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x4F3351B500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xF0B JUMPI POP PUSH2 0xF0A DUP3 PUSH2 0x16F3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF80 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEF SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10D6 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10EB PUSH2 0x938 JUMP JUMPDEST ISZERO PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1122 SWAP1 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1191 SWAP1 PUSH2 0x26FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1200 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1214 DUP4 DUP4 DUP4 PUSH2 0x175D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1292 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1330 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1394 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13A7 DUP5 DUP5 DUP5 PUSH2 0x1762 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x13B6 DUP3 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x13C2 PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x13D1 DUP4 DUP4 PUSH2 0x15A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13DE PUSH2 0x938 JUMP JUMPDEST ISZERO PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1462 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146F SWAP2 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1488 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1804 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149B PUSH2 0x938 JUMP JUMPDEST PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP1 PUSH2 0x28F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x151E PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152B SWAP2 SWAP1 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 PUSH1 0x0 ADD PUSH2 0x182F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1553 DUP3 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x155F PUSH2 0xF12 JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST PUSH2 0x156E DUP4 DUP4 PUSH2 0x1840 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159B DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15AD DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x167F JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1624 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168F DUP4 DUP4 PUSH2 0x1A35 JUMP JUMPDEST PUSH2 0x16E8 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1771 DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x1800 JUMPI PUSH2 0x1796 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x17A4 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B5 SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184A DUP3 DUP3 PUSH2 0x9C7 JUMP JUMPDEST ISZERO PUSH2 0x191D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18C2 PUSH2 0xF12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1A29 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x2A55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x196B SWAP2 SWAP1 PUSH2 0x2A55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x19DA JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x198C JUMPI PUSH2 0x198B PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x19B0 JUMPI PUSH2 0x19AF PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x2A89 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1A6B SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH2 0x1A75 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A8E JUMPI PUSH2 0x1A8D PUSH2 0x2B12 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AC0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AF8 JUMPI PUSH2 0x1AF7 PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B5C JUMPI PUSH2 0x1B5B PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1B9C SWAP2 SWAP1 PUSH2 0x2AB8 JUMP JUMPDEST PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C46 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BFF JUMPI PUSH2 0x1BFE PUSH2 0x2A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1C3F SWAP1 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA9 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1C8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C81 SWAP1 PUSH2 0x2BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCE DUP2 PUSH2 0x1C99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CEB DUP2 PUSH2 0x1CC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D06 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D15 DUP5 DUP3 DUP6 ADD PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D33 DUP2 PUSH2 0x1D1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D73 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBF DUP3 PUSH2 0x1D54 JUMP JUMPDEST PUSH2 0x1DC9 DUP2 DUP6 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x1DA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 DUP5 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3A DUP3 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4A DUP2 PUSH2 0x1E2F JUMP JUMPDEST DUP2 EQ PUSH2 0x1E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E67 DUP2 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E80 DUP2 PUSH2 0x1E6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E9D DUP2 PUSH2 0x1E77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ED9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EEC DUP2 PUSH2 0x1E6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F26 JUMPI PUSH2 0x1F25 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F34 DUP7 DUP3 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F45 DUP7 DUP3 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F56 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F73 DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F90 DUP2 PUSH2 0x1F6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP5 DUP3 DUP6 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FCC DUP2 PUSH2 0x1F60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2012 DUP6 DUP3 DUP7 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2023 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2043 DUP2 PUSH2 0x202D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x205E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x203A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207A JUMPI PUSH2 0x2079 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2088 DUP5 DUP3 DUP6 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20A8 JUMPI PUSH2 0x20A7 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1F81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1E8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DA DUP2 PUSH2 0x1E2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1C94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2120 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2131 DUP6 DUP3 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2182 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x213B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2063616C6C657220616E6420726563697069656E74206D757374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20626520646966666572656E7420616464726573732E00000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F7 PUSH1 0x36 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2202 DUP3 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2226 DUP2 PUSH2 0x21EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2289 PUSH1 0x28 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2294 DUP3 PUSH2 0x222D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B8 DUP2 PUSH2 0x227C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D75737420686176652061646D696E20726F6C650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F5 PUSH1 0x1B DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2300 DUP3 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2324 DUP2 PUSH2 0x22E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2365 DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2370 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x23A5 JUMPI PUSH2 0x23A4 PUSH2 0x232B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240C PUSH1 0x25 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2417 DUP3 PUSH2 0x23B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x243B DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2063616C6C65722063616E206E6F74207265766F6B65206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20616464726573732E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249E PUSH1 0x29 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x24A9 DUP3 PUSH2 0x2442 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24CD DUP2 PUSH2 0x2491 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2530 PUSH1 0x24 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x253B DUP3 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255F DUP2 PUSH2 0x2523 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C2 PUSH1 0x22 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x25CD DUP3 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F1 DUP2 PUSH2 0x25B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066756E6374696F6E2069732070617573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65642062792061646D696E2E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2654 PUSH1 0x2C DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x265F DUP3 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2683 DUP2 PUSH2 0x2647 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E6 PUSH1 0x25 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x26F1 DUP3 PUSH2 0x268A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2715 DUP2 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2778 PUSH1 0x23 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2783 DUP3 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27A7 DUP2 PUSH2 0x276B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280A PUSH1 0x26 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2815 DUP3 PUSH2 0x27AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2839 DUP2 PUSH2 0x27FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2876 PUSH1 0x10 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2881 DUP3 PUSH2 0x2840 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A5 DUP2 PUSH2 0x2869 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E2 PUSH1 0x14 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x28ED DUP3 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2911 DUP2 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2959 PUSH1 0x17 DUP4 PUSH2 0x2918 JUMP JUMPDEST SWAP2 POP PUSH2 0x2964 DUP3 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297A DUP3 PUSH2 0x1D54 JUMP JUMPDEST PUSH2 0x2984 DUP2 DUP6 PUSH2 0x2918 JUMP JUMPDEST SWAP4 POP PUSH2 0x2994 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D70 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D6 PUSH1 0x11 DUP4 PUSH2 0x2918 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E1 DUP3 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F7 DUP3 PUSH2 0x294C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A03 DUP3 DUP6 PUSH2 0x296F JUMP JUMPDEST SWAP2 POP PUSH2 0x2A0E DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1A DUP3 DUP5 PUSH2 0x296F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A60 DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6B DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A7E JUMPI PUSH2 0x2A7D PUSH2 0x232B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AC3 DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACE DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B07 JUMPI PUSH2 0x2B06 PUSH2 0x232B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B4C DUP3 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x2B5F JUMPI PUSH2 0x2B5E PUSH2 0x232B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA0 PUSH1 0x20 DUP4 PUSH2 0x1D5F JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAB DUP3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BCF DUP2 PUSH2 0x2B93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT CALLDATALOAD MSTORE8 0xD5 DIFFICULTY PUSH3 0x740A16 0x5E 0xE8 SWAP6 DIV 0xE9 0xCA PUSH28 0x44063A6CC06BA26D7B47F275C040A5DA64736F6C634300080E003300 ",
							"sourceMap": "1443:12196:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:214:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2350:100:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5178:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3879:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5829:597;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4031:123:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1926:196:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3312:92:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6835:307;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3412:196;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1041:84:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4050:127:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1381:145:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2916:139:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2569:104:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2007:49:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7645:505:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3616:200;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:134:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1758:30:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2215:289:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4880:151:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;568:214:3;653:4;692:42;677:57;;;:11;:57;;;;:97;;;;738:36;762:11;738:23;:36::i;:::-;677:97;670:104;;568:214;;;:::o;2350:100:0:-;2404:13;2437:5;2430:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:100;:::o;5178:169::-;5261:4;5278:39;5287:12;:10;:12::i;:::-;5301:7;5310:6;5278:8;:39::i;:::-;5335:4;5328:11;;5178:169;;;;:::o;3879:108::-;3940:7;3967:12;;3960:19;;3879:108;:::o;5829:597::-;5969:4;6007:12;:10;:12::i;:::-;5994:25;;:9;:25;;;5986:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;6091:36;6101:6;6109:9;6120:6;6091:9;:36::i;:::-;6140:24;6167:11;:19;6179:6;6167:19;;;;;;;;;;;;;;;:33;6187:12;:10;:12::i;:::-;6167:33;;;;;;;;;;;;;;;;6140:60;;6239:6;6219:16;:26;;6211:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:57;6335:6;6343:12;:10;:12::i;:::-;6376:6;6357:16;:25;6326:8;:57::i;:::-;6414:4;6407:11;;;5829:597;;;;;:::o;4031:123:2:-;4097:7;4124:6;:12;4131:4;4124:12;;;;;;;;;;;:22;;;4117:29;;4031:123;;;:::o;1926:196:3:-;2042:30;2058:4;2064:7;2042:15;:30::i;:::-;2083:31;2106:7;2083:12;:18;2096:4;2083:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;1926:196;;:::o;3312:92:0:-;3370:5;3395:1;3388:8;;3312:92;:::o;6835:307::-;6923:4;6948:41;2052:4:2;6956:18:0;;6976:12;:10;:12::i;:::-;6948:7;:41::i;:::-;6940:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;7032:80;7041:12;:10;:12::i;:::-;7055:7;7101:10;7064:11;:25;7076:12;:10;:12::i;:::-;7064:25;;;;;;;;;;;;;;;:34;7090:7;7064:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;7032:8;:80::i;:::-;7130:4;7123:11;;6835:307;;;;:::o;3412:196::-;3461:4;3486:41;2052:4:2;3494:18:0;;3514:12;:10;:12::i;:::-;3486:7;:41::i;:::-;3478:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3570:8;:6;:8::i;:::-;3596:4;3589:11;;3412:196;:::o;1041:84:7:-;1088:4;1111:7;;;;;;;;;;;1104:14;;1041:84;:::o;4050:127:0:-;4124:7;4151:9;:18;4161:7;4151:18;;;;;;;;;;;;;;;;4144:25;;4050:127;;;:::o;1381:145:3:-;1463:7;1490:28;1512:5;1490:12;:18;1503:4;1490:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1483:35;;1381:145;;;;:::o;2916:139:2:-;2994:4;3018:6;:12;3025:4;3018:12;;;;;;;;;;;:20;;:29;3039:7;3018:29;;;;;;;;;;;;;;;;;;;;;;;;;3011:36;;2916:139;;;;:::o;2569:104:0:-;2625:13;2658:7;2651:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:104;:::o;2007:49:2:-;2052:4;2007:49;;;:::o;7645:505:0:-;7738:4;7763:41;2052:4:2;7771:18:0;;7791:12;:10;:12::i;:::-;7763:7;:41::i;:::-;7755:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;7847:24;7874:11;:25;7886:12;:10;:12::i;:::-;7874:25;;;;;;;;;;;;;;;:34;7900:7;7874:34;;;;;;;;;;;;;;;;7847:61;;7947:15;7927:16;:35;;7919:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;8040:67;8049:12;:10;:12::i;:::-;8063:7;8091:15;8072:16;:34;8040:8;:67::i;:::-;8138:4;8131:11;;;7645:505;;;;:::o;4504:315::-;4590:4;4642:12;:10;:12::i;:::-;4629:25;;:9;:25;;;4607:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;4747:42;4757:12;:10;:12::i;:::-;4771:9;4782:6;4747:9;:42::i;:::-;4807:4;4800:11;;4504:315;;;;:::o;3616:200::-;3667:4;3692:41;2052:4:2;3700:18:0;;3720:12;:10;:12::i;:::-;3692:7;:41::i;:::-;3684:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3776:10;:8;:10::i;:::-;3804:4;3797:11;;3616:200;:::o;1700:134:3:-;1772:7;1799:27;:12;:18;1812:4;1799:18;;;;;;;;;;;:25;:27::i;:::-;1792:34;;1700:134;;;:::o;1758:30:0:-;;;;:::o;2215:289:3:-;2351:12;:10;:12::i;:::-;2340:23;;:7;:23;;;2332:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2420:31;2437:4;2443:7;2420:16;:31::i;:::-;2462:34;2488:7;2462:12;:18;2475:4;2462:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2215:289;;:::o;4880:151:0:-;4969:7;4996:11;:18;5008:5;4996:18;;;;;;;;;;;;;;;:27;5015:7;4996:27;;;;;;;;;;;;;;;;4989:34;;4880:151;;;;:::o;6353:112:2:-;6432:25;6443:4;6449:7;6432:10;:25::i;:::-;6353:112;;:::o;7767:152:12:-;7837:4;7861:50;7866:3;:10;;7902:5;7886:23;;7878:32;;7861:4;:50::i;:::-;7854:57;;7767:152;;;;:::o;2620:204:2:-;2705:4;2744:32;2729:47;;;:11;:47;;;;:87;;;;2780:36;2804:11;2780:23;:36::i;:::-;2729:87;2722:94;;2620:204;;;:::o;602:98:8:-;655:7;682:10;675:17;;602:98;:::o;11801:380:0:-;11954:1;11937:19;;:5;:19;;;11929:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;12035:1;12016:21;;:7;:21;;;12008:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;12119:6;12089:11;:18;12101:5;12089:18;;;;;;;;;;;;;;;:27;12108:7;12089:27;;;;;;;;;;;;;;;:36;;;;12157:7;12141:32;;12150:5;12141:32;;;12166:6;12141:32;;;;;;:::i;:::-;;;;;;;;11801:380;;;:::o;8640:809::-;8782:8;:6;:8::i;:::-;8781:9;8773:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;8876:1;8858:20;;:6;:20;;;8850:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8960:1;8939:23;;:9;:23;;;8931:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9013:47;9034:6;9042:9;9053:6;9013:20;:47::i;:::-;9073:21;9097:9;:17;9107:6;9097:17;;;;;;;;;;;;;;;;9073:41;;9150:6;9133:13;:23;;9125:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;9271:6;9255:13;:22;9235:9;:17;9245:6;9235:17;;;;;;;;;;;;;;;:42;;;;9323:6;9299:9;:20;9309:9;9299:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;9364:9;9347:35;;9356:6;9347:35;;;9375:6;9347:35;;;;;;:::i;:::-;;;;;;;;9395:46;9415:6;9423:9;9434:6;9395:19;:46::i;:::-;8762:687;8640:809;;;:::o;4416:147:2:-;4499:18;4512:4;4499:12;:18::i;:::-;2498:30;2509:4;2515:12;:10;:12::i;:::-;2498:10;:30::i;:::-;4530:25:::1;4541:4;4547:7;4530:10;:25::i;:::-;4416:147:::0;;;:::o;1806:115:7:-;1355:8;:6;:8::i;:::-;1354:9;1346:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1875:4:::1;1865:7;;:14;;;;;;;;;;;;;;;;;;1894:20;1901:12;:10;:12::i;:::-;1894:20;;;;;;:::i;:::-;;;;;;;;1806:115::o:0;9063:158:12:-;9137:7;9188:22;9192:3;:10;;9204:5;9188:3;:22::i;:::-;9180:31;;9157:56;;9063:158;;;;:::o;2053:117:7:-;1620:8;:6;:8::i;:::-;1612:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2121:5:::1;2111:7;;:15;;;;;;;;;;;;;;;;;;2141:22;2150:12;:10;:12::i;:::-;2141:22;;;;;;:::i;:::-;;;;;;;;2053:117::o:0;8592::12:-;8655:7;8682:19;8690:3;:10;;8682:7;:19::i;:::-;8675:26;;8592:117;;;:::o;4808:149:2:-;4892:18;4905:4;4892:12;:18::i;:::-;2498:30;2509:4;2515:12;:10;:12::i;:::-;2498:10;:30::i;:::-;4923:26:::1;4935:4;4941:7;4923:11;:26::i;:::-;4808:149:::0;;;:::o;8095:158:12:-;8168:4;8192:53;8200:3;:10;;8236:5;8220:23;;8212:32;;8192:7;:53::i;:::-;8185:60;;8095:158;;;;:::o;6977:238:2:-;7061:22;7069:4;7075:7;7061;:22::i;:::-;7056:152;;7132:4;7100:6;:12;7107:4;7100:12;;;;;;;;;;;:20;;:29;7121:7;7100:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7183:12;:10;:12::i;:::-;7156:40;;7174:7;7156:40;;7168:4;7156:40;;;;;;;;;;7056:152;6977:238;;:::o;1682:414:12:-;1745:4;1767:21;1777:3;1782:5;1767:9;:21::i;:::-;1762:327;;1805:3;:11;;1822:5;1805:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1988:3;:11;;:18;;;;1966:3;:12;;:19;1979:5;1966:19;;;;;;;;;;;:40;;;;2028:4;2021:11;;;;1762:327;2072:5;2065:12;;1682:414;;;;;:::o;787:157:10:-;872:4;911:25;896:40;;;:11;:40;;;;889:47;;787:157;;;:::o;12781:125:0:-;;;;:::o;13510:124::-;;;;:::o;3345:497:2:-;3426:22;3434:4;3440:7;3426;:22::i;:::-;3421:414;;3614:41;3642:7;3614:41;;3652:2;3614:19;:41::i;:::-;3728:38;3756:4;3748:13;;3763:2;3728:19;:38::i;:::-;3519:270;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3465:358;;;;;;;;;;;:::i;:::-;;;;;;;;3421:414;3345:497;;:::o;4456:120:12:-;4523:7;4550:3;:11;;4562:5;4550:18;;;;;;;;:::i;:::-;;;;;;;;;;4543:25;;4456:120;;;;:::o;3993:109::-;4049:7;4076:3;:11;;:18;;;;4069:25;;3993:109;;;:::o;7347:239:2:-;7431:22;7439:4;7445:7;7431;:22::i;:::-;7427:152;;;7502:5;7470:6;:12;7477:4;7470:12;;;;;;;;;;;:20;;:29;7491:7;7470:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7554:12;:10;:12::i;:::-;7527:40;;7545:7;7527:40;;7539:4;7527:40;;;;;;;;;;7427:152;7347:239;;:::o;2272:1420:12:-;2338:4;2456:18;2477:3;:12;;:19;2490:5;2477:19;;;;;;;;;;;;2456:40;;2527:1;2513:10;:15;2509:1176;;2888:21;2925:1;2912:10;:14;;;;:::i;:::-;2888:38;;2941:17;2982:1;2961:3;:11;;:18;;;;:22;;;;:::i;:::-;2941:42;;3017:13;3004:9;:26;3000:405;;3051:17;3071:3;:11;;3083:9;3071:22;;;;;;;;:::i;:::-;;;;;;;;;;3051:42;;3225:9;3196:3;:11;;3208:13;3196:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3336:10;3310:3;:12;;:23;3323:9;3310:23;;;;;;;;;;;:36;;;;3032:373;3000:405;3486:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3581:3;:12;;:19;3594:5;3581:19;;;;;;;;;;;3574:26;;;3624:4;3617:11;;;;;;;2509:1176;3668:5;3661:12;;;2272:1420;;;;;:::o;3778:129::-;3851:4;3898:1;3875:3;:12;;:19;3888:5;3875:19;;;;;;;;;;;;:24;;3868:31;;3778:129;;;;:::o;1589:451:9:-;1664:13;1690:19;1735:1;1726:6;1722:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1712:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:47;;1748:15;:6;1755:1;1748:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1774;:6;1781:1;1774:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1805:9;1830:1;1821:6;1817:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1805:26;;1800:135;1837:1;1833;:5;1800:135;;;1872:12;1893:3;1885:5;:11;1872:25;;;;;;;:::i;:::-;;;;;1860:6;1867:1;1860:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1922:1;1912:11;;;;;1840:3;;;;:::i;:::-;;;1800:135;;;;1962:1;1953:5;:10;1945:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2025:6;2011:21;;;1589:451;;;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:126::-;2945:7;2985:42;2978:5;2974:54;2963:65;;2908:126;;;:::o;3040:96::-;3077:7;3106:24;3124:5;3106:24;:::i;:::-;3095:35;;3040:96;;;:::o;3142:122::-;3215:24;3233:5;3215:24;:::i;:::-;3208:5;3205:35;3195:63;;3254:1;3251;3244:12;3195:63;3142:122;:::o;3270:139::-;3316:5;3354:6;3341:20;3332:29;;3370:33;3397:5;3370:33;:::i;:::-;3270:139;;;;:::o;3415:77::-;3452:7;3481:5;3470:16;;3415:77;;;:::o;3498:122::-;3571:24;3589:5;3571:24;:::i;:::-;3564:5;3561:35;3551:63;;3610:1;3607;3600:12;3551:63;3498:122;:::o;3626:139::-;3672:5;3710:6;3697:20;3688:29;;3726:33;3753:5;3726:33;:::i;:::-;3626:139;;;;:::o;3771:474::-;3839:6;3847;3896:2;3884:9;3875:7;3871:23;3867:32;3864:119;;;3902:79;;:::i;:::-;3864:119;4022:1;4047:53;4092:7;4083:6;4072:9;4068:22;4047:53;:::i;:::-;4037:63;;3993:117;4149:2;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4120:118;3771:474;;;;;:::o;4251:118::-;4338:24;4356:5;4338:24;:::i;:::-;4333:3;4326:37;4251:118;;:::o;4375:222::-;4468:4;4506:2;4495:9;4491:18;4483:26;;4519:71;4587:1;4576:9;4572:17;4563:6;4519:71;:::i;:::-;4375:222;;;;:::o;4603:619::-;4680:6;4688;4696;4745:2;4733:9;4724:7;4720:23;4716:32;4713:119;;;4751:79;;:::i;:::-;4713:119;4871:1;4896:53;4941:7;4932:6;4921:9;4917:22;4896:53;:::i;:::-;4886:63;;4842:117;4998:2;5024:53;5069:7;5060:6;5049:9;5045:22;5024:53;:::i;:::-;5014:63;;4969:118;5126:2;5152:53;5197:7;5188:6;5177:9;5173:22;5152:53;:::i;:::-;5142:63;;5097:118;4603:619;;;;;:::o;5228:77::-;5265:7;5294:5;5283:16;;5228:77;;;:::o;5311:122::-;5384:24;5402:5;5384:24;:::i;:::-;5377:5;5374:35;5364:63;;5423:1;5420;5413:12;5364:63;5311:122;:::o;5439:139::-;5485:5;5523:6;5510:20;5501:29;;5539:33;5566:5;5539:33;:::i;:::-;5439:139;;;;:::o;5584:329::-;5643:6;5692:2;5680:9;5671:7;5667:23;5663:32;5660:119;;;5698:79;;:::i;:::-;5660:119;5818:1;5843:53;5888:7;5879:6;5868:9;5864:22;5843:53;:::i;:::-;5833:63;;5789:117;5584:329;;;;:::o;5919:118::-;6006:24;6024:5;6006:24;:::i;:::-;6001:3;5994:37;5919:118;;:::o;6043:222::-;6136:4;6174:2;6163:9;6159:18;6151:26;;6187:71;6255:1;6244:9;6240:17;6231:6;6187:71;:::i;:::-;6043:222;;;;:::o;6271:474::-;6339:6;6347;6396:2;6384:9;6375:7;6371:23;6367:32;6364:119;;;6402:79;;:::i;:::-;6364:119;6522:1;6547:53;6592:7;6583:6;6572:9;6568:22;6547:53;:::i;:::-;6537:63;;6493:117;6649:2;6675:53;6720:7;6711:6;6700:9;6696:22;6675:53;:::i;:::-;6665:63;;6620:118;6271:474;;;;;:::o;6751:86::-;6786:7;6826:4;6819:5;6815:16;6804:27;;6751:86;;;:::o;6843:112::-;6926:22;6942:5;6926:22;:::i;:::-;6921:3;6914:35;6843:112;;:::o;6961:214::-;7050:4;7088:2;7077:9;7073:18;7065:26;;7101:67;7165:1;7154:9;7150:17;7141:6;7101:67;:::i;:::-;6961:214;;;;:::o;7181:329::-;7240:6;7289:2;7277:9;7268:7;7264:23;7260:32;7257:119;;;7295:79;;:::i;:::-;7257:119;7415:1;7440:53;7485:7;7476:6;7465:9;7461:22;7440:53;:::i;:::-;7430:63;;7386:117;7181:329;;;;:::o;7516:474::-;7584:6;7592;7641:2;7629:9;7620:7;7616:23;7612:32;7609:119;;;7647:79;;:::i;:::-;7609:119;7767:1;7792:53;7837:7;7828:6;7817:9;7813:22;7792:53;:::i;:::-;7782:63;;7738:117;7894:2;7920:53;7965:7;7956:6;7945:9;7941:22;7920:53;:::i;:::-;7910:63;;7865:118;7516:474;;;;;:::o;7996:118::-;8083:24;8101:5;8083:24;:::i;:::-;8078:3;8071:37;7996:118;;:::o;8120:222::-;8213:4;8251:2;8240:9;8236:18;8228:26;;8264:71;8332:1;8321:9;8317:17;8308:6;8264:71;:::i;:::-;8120:222;;;;:::o;8348:474::-;8416:6;8424;8473:2;8461:9;8452:7;8448:23;8444:32;8441:119;;;8479:79;;:::i;:::-;8441:119;8599:1;8624:53;8669:7;8660:6;8649:9;8645:22;8624:53;:::i;:::-;8614:63;;8570:117;8726:2;8752:53;8797:7;8788:6;8777:9;8773:22;8752:53;:::i;:::-;8742:63;;8697:118;8348:474;;;;;:::o;8828:180::-;8876:77;8873:1;8866:88;8973:4;8970:1;8963:15;8997:4;8994:1;8987:15;9014:320;9058:6;9095:1;9089:4;9085:12;9075:22;;9142:1;9136:4;9132:12;9163:18;9153:81;;9219:4;9211:6;9207:17;9197:27;;9153:81;9281:2;9273:6;9270:14;9250:18;9247:38;9244:84;;9300:18;;:::i;:::-;9244:84;9065:269;9014:320;;;:::o;9340:241::-;9480:34;9476:1;9468:6;9464:14;9457:58;9549:24;9544:2;9536:6;9532:15;9525:49;9340:241;:::o;9587:366::-;9729:3;9750:67;9814:2;9809:3;9750:67;:::i;:::-;9743:74;;9826:93;9915:3;9826:93;:::i;:::-;9944:2;9939:3;9935:12;9928:19;;9587:366;;;:::o;9959:419::-;10125:4;10163:2;10152:9;10148:18;10140:26;;10212:9;10206:4;10202:20;10198:1;10187:9;10183:17;10176:47;10240:131;10366:4;10240:131;:::i;:::-;10232:139;;9959:419;;;:::o;10384:227::-;10524:34;10520:1;10512:6;10508:14;10501:58;10593:10;10588:2;10580:6;10576:15;10569:35;10384:227;:::o;10617:366::-;10759:3;10780:67;10844:2;10839:3;10780:67;:::i;:::-;10773:74;;10856:93;10945:3;10856:93;:::i;:::-;10974:2;10969:3;10965:12;10958:19;;10617:366;;;:::o;10989:419::-;11155:4;11193:2;11182:9;11178:18;11170:26;;11242:9;11236:4;11232:20;11228:1;11217:9;11213:17;11206:47;11270:131;11396:4;11270:131;:::i;:::-;11262:139;;10989:419;;;:::o;11414:177::-;11554:29;11550:1;11542:6;11538:14;11531:53;11414:177;:::o;11597:366::-;11739:3;11760:67;11824:2;11819:3;11760:67;:::i;:::-;11753:74;;11836:93;11925:3;11836:93;:::i;:::-;11954:2;11949:3;11945:12;11938:19;;11597:366;;;:::o;11969:419::-;12135:4;12173:2;12162:9;12158:18;12150:26;;12222:9;12216:4;12212:20;12208:1;12197:9;12193:17;12186:47;12250:131;12376:4;12250:131;:::i;:::-;12242:139;;11969:419;;;:::o;12394:180::-;12442:77;12439:1;12432:88;12539:4;12536:1;12529:15;12563:4;12560:1;12553:15;12580:305;12620:3;12639:20;12657:1;12639:20;:::i;:::-;12634:25;;12673:20;12691:1;12673:20;:::i;:::-;12668:25;;12827:1;12759:66;12755:74;12752:1;12749:81;12746:107;;;12833:18;;:::i;:::-;12746:107;12877:1;12874;12870:9;12863:16;;12580:305;;;;:::o;12891:224::-;13031:34;13027:1;13019:6;13015:14;13008:58;13100:7;13095:2;13087:6;13083:15;13076:32;12891:224;:::o;13121:366::-;13263:3;13284:67;13348:2;13343:3;13284:67;:::i;:::-;13277:74;;13360:93;13449:3;13360:93;:::i;:::-;13478:2;13473:3;13469:12;13462:19;;13121:366;;;:::o;13493:419::-;13659:4;13697:2;13686:9;13682:18;13674:26;;13746:9;13740:4;13736:20;13732:1;13721:9;13717:17;13710:47;13774:131;13900:4;13774:131;:::i;:::-;13766:139;;13493:419;;;:::o;13918:228::-;14058:34;14054:1;14046:6;14042:14;14035:58;14127:11;14122:2;14114:6;14110:15;14103:36;13918:228;:::o;14152:366::-;14294:3;14315:67;14379:2;14374:3;14315:67;:::i;:::-;14308:74;;14391:93;14480:3;14391:93;:::i;:::-;14509:2;14504:3;14500:12;14493:19;;14152:366;;;:::o;14524:419::-;14690:4;14728:2;14717:9;14713:18;14705:26;;14777:9;14771:4;14767:20;14763:1;14752:9;14748:17;14741:47;14805:131;14931:4;14805:131;:::i;:::-;14797:139;;14524:419;;;:::o;14949:223::-;15089:34;15085:1;15077:6;15073:14;15066:58;15158:6;15153:2;15145:6;15141:15;15134:31;14949:223;:::o;15178:366::-;15320:3;15341:67;15405:2;15400:3;15341:67;:::i;:::-;15334:74;;15417:93;15506:3;15417:93;:::i;:::-;15535:2;15530:3;15526:12;15519:19;;15178:366;;;:::o;15550:419::-;15716:4;15754:2;15743:9;15739:18;15731:26;;15803:9;15797:4;15793:20;15789:1;15778:9;15774:17;15767:47;15831:131;15957:4;15831:131;:::i;:::-;15823:139;;15550:419;;;:::o;15975:221::-;16115:34;16111:1;16103:6;16099:14;16092:58;16184:4;16179:2;16171:6;16167:15;16160:29;15975:221;:::o;16202:366::-;16344:3;16365:67;16429:2;16424:3;16365:67;:::i;:::-;16358:74;;16441:93;16530:3;16441:93;:::i;:::-;16559:2;16554:3;16550:12;16543:19;;16202:366;;;:::o;16574:419::-;16740:4;16778:2;16767:9;16763:18;16755:26;;16827:9;16821:4;16817:20;16813:1;16802:9;16798:17;16791:47;16855:131;16981:4;16855:131;:::i;:::-;16847:139;;16574:419;;;:::o;16999:231::-;17139:34;17135:1;17127:6;17123:14;17116:58;17208:14;17203:2;17195:6;17191:15;17184:39;16999:231;:::o;17236:366::-;17378:3;17399:67;17463:2;17458:3;17399:67;:::i;:::-;17392:74;;17475:93;17564:3;17475:93;:::i;:::-;17593:2;17588:3;17584:12;17577:19;;17236:366;;;:::o;17608:419::-;17774:4;17812:2;17801:9;17797:18;17789:26;;17861:9;17855:4;17851:20;17847:1;17836:9;17832:17;17825:47;17889:131;18015:4;17889:131;:::i;:::-;17881:139;;17608:419;;;:::o;18033:224::-;18173:34;18169:1;18161:6;18157:14;18150:58;18242:7;18237:2;18229:6;18225:15;18218:32;18033:224;:::o;18263:366::-;18405:3;18426:67;18490:2;18485:3;18426:67;:::i;:::-;18419:74;;18502:93;18591:3;18502:93;:::i;:::-;18620:2;18615:3;18611:12;18604:19;;18263:366;;;:::o;18635:419::-;18801:4;18839:2;18828:9;18824:18;18816:26;;18888:9;18882:4;18878:20;18874:1;18863:9;18859:17;18852:47;18916:131;19042:4;18916:131;:::i;:::-;18908:139;;18635:419;;;:::o;19060:222::-;19200:34;19196:1;19188:6;19184:14;19177:58;19269:5;19264:2;19256:6;19252:15;19245:30;19060:222;:::o;19288:366::-;19430:3;19451:67;19515:2;19510:3;19451:67;:::i;:::-;19444:74;;19527:93;19616:3;19527:93;:::i;:::-;19645:2;19640:3;19636:12;19629:19;;19288:366;;;:::o;19660:419::-;19826:4;19864:2;19853:9;19849:18;19841:26;;19913:9;19907:4;19903:20;19899:1;19888:9;19884:17;19877:47;19941:131;20067:4;19941:131;:::i;:::-;19933:139;;19660:419;;;:::o;20085:225::-;20225:34;20221:1;20213:6;20209:14;20202:58;20294:8;20289:2;20281:6;20277:15;20270:33;20085:225;:::o;20316:366::-;20458:3;20479:67;20543:2;20538:3;20479:67;:::i;:::-;20472:74;;20555:93;20644:3;20555:93;:::i;:::-;20673:2;20668:3;20664:12;20657:19;;20316:366;;;:::o;20688:419::-;20854:4;20892:2;20881:9;20877:18;20869:26;;20941:9;20935:4;20931:20;20927:1;20916:9;20912:17;20905:47;20969:131;21095:4;20969:131;:::i;:::-;20961:139;;20688:419;;;:::o;21113:166::-;21253:18;21249:1;21241:6;21237:14;21230:42;21113:166;:::o;21285:366::-;21427:3;21448:67;21512:2;21507:3;21448:67;:::i;:::-;21441:74;;21524:93;21613:3;21524:93;:::i;:::-;21642:2;21637:3;21633:12;21626:19;;21285:366;;;:::o;21657:419::-;21823:4;21861:2;21850:9;21846:18;21838:26;;21910:9;21904:4;21900:20;21896:1;21885:9;21881:17;21874:47;21938:131;22064:4;21938:131;:::i;:::-;21930:139;;21657:419;;;:::o;22082:170::-;22222:22;22218:1;22210:6;22206:14;22199:46;22082:170;:::o;22258:366::-;22400:3;22421:67;22485:2;22480:3;22421:67;:::i;:::-;22414:74;;22497:93;22586:3;22497:93;:::i;:::-;22615:2;22610:3;22606:12;22599:19;;22258:366;;;:::o;22630:419::-;22796:4;22834:2;22823:9;22819:18;22811:26;;22883:9;22877:4;22873:20;22869:1;22858:9;22854:17;22847:47;22911:131;23037:4;22911:131;:::i;:::-;22903:139;;22630:419;;;:::o;23055:148::-;23157:11;23194:3;23179:18;;23055:148;;;;:::o;23209:173::-;23349:25;23345:1;23337:6;23333:14;23326:49;23209:173;:::o;23388:402::-;23548:3;23569:85;23651:2;23646:3;23569:85;:::i;:::-;23562:92;;23663:93;23752:3;23663:93;:::i;:::-;23781:2;23776:3;23772:12;23765:19;;23388:402;;;:::o;23796:377::-;23902:3;23930:39;23963:5;23930:39;:::i;:::-;23985:89;24067:6;24062:3;23985:89;:::i;:::-;23978:96;;24083:52;24128:6;24123:3;24116:4;24109:5;24105:16;24083:52;:::i;:::-;24160:6;24155:3;24151:16;24144:23;;23906:267;23796:377;;;;:::o;24179:167::-;24319:19;24315:1;24307:6;24303:14;24296:43;24179:167;:::o;24352:402::-;24512:3;24533:85;24615:2;24610:3;24533:85;:::i;:::-;24526:92;;24627:93;24716:3;24627:93;:::i;:::-;24745:2;24740:3;24736:12;24729:19;;24352:402;;;:::o;24760:967::-;25142:3;25164:148;25308:3;25164:148;:::i;:::-;25157:155;;25329:95;25420:3;25411:6;25329:95;:::i;:::-;25322:102;;25441:148;25585:3;25441:148;:::i;:::-;25434:155;;25606:95;25697:3;25688:6;25606:95;:::i;:::-;25599:102;;25718:3;25711:10;;24760:967;;;;;:::o;25733:180::-;25781:77;25778:1;25771:88;25878:4;25875:1;25868:15;25902:4;25899:1;25892:15;25919:191;25959:4;25979:20;25997:1;25979:20;:::i;:::-;25974:25;;26013:20;26031:1;26013:20;:::i;:::-;26008:25;;26052:1;26049;26046:8;26043:34;;;26057:18;;:::i;:::-;26043:34;26102:1;26099;26095:9;26087:17;;25919:191;;;;:::o;26116:180::-;26164:77;26161:1;26154:88;26261:4;26258:1;26251:15;26285:4;26282:1;26275:15;26302:348;26342:7;26365:20;26383:1;26365:20;:::i;:::-;26360:25;;26399:20;26417:1;26399:20;:::i;:::-;26394:25;;26587:1;26519:66;26515:74;26512:1;26509:81;26504:1;26497:9;26490:17;26486:105;26483:131;;;26594:18;;:::i;:::-;26483:131;26642:1;26639;26635:9;26624:20;;26302:348;;;;:::o;26656:180::-;26704:77;26701:1;26694:88;26801:4;26798:1;26791:15;26825:4;26822:1;26815:15;26842:171;26881:3;26904:24;26922:5;26904:24;:::i;:::-;26895:33;;26950:4;26943:5;26940:15;26937:41;;26958:18;;:::i;:::-;26937:41;27005:1;26998:5;26994:13;26987:20;;26842:171;;;:::o;27019:182::-;27159:34;27155:1;27147:6;27143:14;27136:58;27019:182;:::o;27207:366::-;27349:3;27370:67;27434:2;27429:3;27370:67;:::i;:::-;27363:74;;27446:93;27535:3;27446:93;:::i;:::-;27564:2;27559:3;27555:12;27548:19;;27207:366;;;:::o;27579:419::-;27745:4;27783:2;27772:9;27768:18;27760:26;;27832:9;27826:4;27822:20;27818:1;27807:9;27803:17;27796:47;27860:131;27986:4;27860:131;:::i;:::-;27852:139;;27579:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2255200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "446",
								"MAX_TOKEN_COUNT()": "2517",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2864",
								"decimals()": "410",
								"decreaseAllowance(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "2952",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3207",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"paused()": "2612",
								"pausedOptions()": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "840",
								"symbol()": "infinite",
								"totalSupply()": "2527",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unPausedOptions()": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_maxTokenCountSet(uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2109,
									"end": 2280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 934,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 931,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 924,
									"end": 931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 924,
									"end": 939,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 924,
									"end": 939,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 924,
									"end": 939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2184,
									"end": 2189,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2181,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2176,
									"end": 2189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2176,
									"end": 2189,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2210,
									"end": 2217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2207,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2200,
									"end": 2217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2200,
									"end": 2217,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2228,
									"end": 2272,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2052,
									"end": 2056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2239,
									"end": 2257,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2239,
									"end": 2257,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2271,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2259,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2259,
									"end": 2269,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2259,
									"end": 2269,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2271,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2259,
									"end": 2271,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2259,
									"end": 2271,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2259,
									"end": 2271,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2228,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2228,
									"end": 2238,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2228,
									"end": 2238,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2228,
									"end": 2272,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2228,
									"end": 2272,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2228,
									"end": 2272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2228,
									"end": 2272,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2228,
									"end": 2272,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2280,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 602,
									"end": 700,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 602,
									"end": 700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 655,
									"end": 662,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 675,
									"end": 692,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 675,
									"end": 692,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 602,
									"end": 700,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 602,
									"end": 700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2909,
									"end": 3078,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2909,
									"end": 3078,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2997,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 3014,
									"end": 3018,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3027,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2997,
									"end": 3013,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2997,
									"end": 3013,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2997,
									"end": 3013,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2997,
									"end": 3013,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551740"
								},
								{
									"begin": 2997,
									"end": 3013,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2997,
									"end": 3028,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2997,
									"end": 3028,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2997,
									"end": 3028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2997,
									"end": 3028,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2997,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3062,
									"end": 3069,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3051,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3052,
									"end": 3056,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3039,
									"end": 3057,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 3039,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3039,
									"end": 3061,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551741"
								},
								{
									"begin": 3039,
									"end": 3061,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3061,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3039,
									"end": 3070,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2909,
									"end": 3078,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2909,
									"end": 3078,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2909,
									"end": 3078,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6353,
									"end": 6465,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 6353,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6443,
									"end": 6447,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6449,
									"end": 6456,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6442,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6432,
									"end": 6442,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6432,
									"end": 6442,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6457,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6432,
									"end": 6457,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6432,
									"end": 6457,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6432,
									"end": 6457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6353,
									"end": 6465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6353,
									"end": 6465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6353,
									"end": 6465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7767,
									"end": 7919,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 7767,
									"end": 7919,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7841,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7861,
									"end": 7911,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 7866,
									"end": 7869,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7866,
									"end": 7876,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7866,
									"end": 7876,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7902,
									"end": 7907,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7886,
									"end": 7909,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7886,
									"end": 7909,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7878,
									"end": 7910,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7878,
									"end": 7910,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 7861,
									"end": 7865,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 7861,
									"end": 7865,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7861,
									"end": 7865,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 7861,
									"end": 7911,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7861,
									"end": 7911,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7861,
									"end": 7911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7861,
									"end": 7911,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 7861,
									"end": 7911,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7854,
									"end": 7911,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7854,
									"end": 7911,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7767,
									"end": 7919,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7767,
									"end": 7919,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7767,
									"end": 7919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7767,
									"end": 7919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7767,
									"end": 7919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6977,
									"end": 7215,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6977,
									"end": 7215,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7061,
									"end": 7083,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7069,
									"end": 7073,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7075,
									"end": 7082,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7061,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7061,
									"end": 7068,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7061,
									"end": 7068,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7061,
									"end": 7083,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7061,
									"end": 7083,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7061,
									"end": 7083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7061,
									"end": 7083,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7061,
									"end": 7083,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7056,
									"end": 7208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7056,
									"end": 7208,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7132,
									"end": 7136,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7100,
									"end": 7106,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7107,
									"end": 7111,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7112,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7120,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7120,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7121,
									"end": 7128,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7100,
									"end": 7136,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7183,
									"end": 7195,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7183,
									"end": 7193,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 7183,
									"end": 7193,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7183,
									"end": 7193,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7183,
									"end": 7195,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7183,
									"end": 7195,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7183,
									"end": 7195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7183,
									"end": 7195,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7183,
									"end": 7195,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7174,
									"end": 7181,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7168,
									"end": 7172,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "PUSH",
									"source": 2,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7156,
									"end": 7196,
									"name": "LOG4",
									"source": 2
								},
								{
									"begin": 7056,
									"end": 7208,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7056,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6977,
									"end": 7215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6977,
									"end": 7215,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6977,
									"end": 7215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1745,
									"end": 1749,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1777,
									"end": 1780,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1782,
									"end": 1787,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1762,
									"end": 2089,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1816,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1805,
									"end": 1816,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1822,
									"end": 1827,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1828,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 1991,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 1999,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1988,
									"end": 1999,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 2006,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 2006,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 2006,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 2006,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1978,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1966,
									"end": 1978,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2006,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2006,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2006,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 2006,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2028,
									"end": 2032,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2021,
									"end": 2032,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2021,
									"end": 2032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2021,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2021,
									"end": 2032,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 2089,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1762,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2072,
									"end": 2077,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2065,
									"end": 2077,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2077,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 2096,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1682,
									"end": 2096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2916,
									"end": 3055,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 2916,
									"end": 3055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2994,
									"end": 2998,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3029,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3030,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3038,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3038,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3039,
									"end": 3046,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 3018,
									"end": 3047,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3011,
									"end": 3047,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3011,
									"end": 3047,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2916,
									"end": 3055,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2916,
									"end": 3055,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2916,
									"end": 3055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2916,
									"end": 3055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2916,
									"end": 3055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3778,
									"end": 3907,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3778,
									"end": 3907,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3851,
									"end": 3855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3878,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3887,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3875,
									"end": 3887,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3888,
									"end": 3893,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3894,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3899,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3875,
									"end": 3899,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3868,
									"end": 3899,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3868,
									"end": 3899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3778,
									"end": 3907,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3778,
									"end": 3907,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3778,
									"end": 3907,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3778,
									"end": 3907,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3778,
									"end": 3907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1443,
									"end": 13639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 1443,
									"end": 13639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 2053,
									"end": 2102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2037,
									"end": 2103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2209,
									"end": 2288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 2299,
									"end": 2338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1923,
									"end": 2344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2488,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2623,
									"end": 2713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2364,
									"end": 2719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2887,
									"end": 2966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 3080,
									"end": 3159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 3185,
									"end": 3259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 3382,
									"end": 3461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 3487,
									"end": 3561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2725,
									"end": 3578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 4056,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3770,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 13639,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220113553d54462740a165ee89504e9ca7b44063a6cc06ba26d7b47f275c040a5da64736f6c634300080e0033",
									".code": [
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "C6E858FE"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "D0BBB0D7"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "5394A892"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 13639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 568,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 568,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 568,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 568,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2350,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2350,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5178,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5178,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5178,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3879,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3879,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5829,
											"end": 6426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5829,
											"end": 6426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5829,
											"end": 6426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4031,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4031,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4031,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1926,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1926,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3312,
											"end": 3404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3312,
											"end": 3404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6835,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6835,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6835,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3412,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3412,
											"end": 3608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1041,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1041,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4050,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4050,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4050,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1381,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1381,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1381,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2916,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2916,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2916,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2569,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2569,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2007,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2007,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7645,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7645,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7645,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4504,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4504,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4504,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3616,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3616,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1700,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1700,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1700,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1758,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1758,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2215,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2215,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4880,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4880,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4880,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 568,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 568,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "5A05180F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 677,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 734,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 677,
											"end": 734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 677,
											"end": 688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 677,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 734,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 677,
											"end": 734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 677,
											"end": 734,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 677,
											"end": 774,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 677,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 677,
											"end": 774,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 677,
											"end": 774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 738,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 762,
											"end": 773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 738,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 738,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 738,
											"end": 774,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 738,
											"end": 774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 677,
											"end": 774,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 677,
											"end": 774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 670,
											"end": 774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2417,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2430,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2430,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5287,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5287,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5310,
											"end": 5316,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5278,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5278,
											"end": 5317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5278,
											"end": 5317,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5278,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5339,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5328,
											"end": 5339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3960,
											"end": 3979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3960,
											"end": 3979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 5973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6007,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6007,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5986,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5986,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6101,
											"end": 6107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6120,
											"end": 6126,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6091,
											"end": 6127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6127,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6091,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6140,
											"end": 6164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6185,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6186,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6187,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6187,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6187,
											"end": 6199,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6187,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6140,
											"end": 6200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6140,
											"end": 6200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6211,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6211,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6343,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6343,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6355,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6343,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6373,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6357,
											"end": 6382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6326,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6383,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6326,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6414,
											"end": 6418,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6407,
											"end": 6418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 6426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4135,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4146,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4124,
											"end": 4146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4146,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2058,
											"end": 2062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2042,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2072,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2042,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2106,
											"end": 2113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2095,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2100,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2101,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2083,
											"end": 2105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 2122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3396,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3388,
											"end": 3396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6923,
											"end": 6927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6974,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6976,
											"end": 6988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6988,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6976,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6948,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6948,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6948,
											"end": 6989,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6948,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6940,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6940,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7041,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7041,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7041,
											"end": 7053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7041,
											"end": 7053,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7041,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7055,
											"end": 7062,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7076,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7076,
											"end": 7088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7076,
											"end": 7088,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7076,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7097,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7064,
											"end": 7111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7064,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7111,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7064,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7032,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7112,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7032,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7123,
											"end": 7134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 7142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3514,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3514,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3486,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3486,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3478,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3478,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3570,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3578,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3570,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3589,
											"end": 3600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1041,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4160,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1470,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1512,
											"end": 1517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1507,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1490,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2994,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3018,
											"end": 3047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 3055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2651,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2651,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2651,
											"end": 2665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7791,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7791,
											"end": 7803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7763,
											"end": 7804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7804,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 7763,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7755,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7755,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7886,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7886,
											"end": 7898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7886,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7899,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7907,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7874,
											"end": 7908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7847,
											"end": 7908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7962,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7962,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 7919,
											"end": 8004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7919,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8049,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8049,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8049,
											"end": 8061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8061,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8049,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8063,
											"end": 8070,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8106,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8040,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8107,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8040,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8142,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8131,
											"end": 8142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7645,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4642,
											"end": 4654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4607,
											"end": 4736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4607,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4757,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4757,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4757,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4757,
											"end": 4769,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4757,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4747,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4789,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4747,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4800,
											"end": 4811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3720,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3720,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3732,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3720,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3692,
											"end": 3733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3733,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3692,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3684,
											"end": 3765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3684,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3776,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3776,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3786,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3776,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3797,
											"end": 3808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1816,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1799,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1826,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2351,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2351,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2332,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2332,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2437,
											"end": 2441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2420,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2451,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2420,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2474,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2462,
											"end": 2487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4996,
											"end": 5023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4989,
											"end": 5023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4880,
											"end": 5031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6465,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6353,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6443,
											"end": 6447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6432,
											"end": 6457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6353,
											"end": 6465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6353,
											"end": 6465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6353,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7866,
											"end": 7869,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7876,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7902,
											"end": 7907,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7909,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7886,
											"end": 7909,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7878,
											"end": 7910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7910,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7861,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7861,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7861,
											"end": 7911,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7861,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7854,
											"end": 7911,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7854,
											"end": 7911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7767,
											"end": 7919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7767,
											"end": 7919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2824,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2620,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "4F3351B500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2729,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2776,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2776,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2776,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2729,
											"end": 2816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2804,
											"end": 2815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2780,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2780,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2729,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 700,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 602,
											"end": 700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 655,
											"end": 662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 675,
											"end": 692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 675,
											"end": 692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 602,
											"end": 700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 602,
											"end": 700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 12181,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11801,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11954,
											"end": 11955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11937,
											"end": 11956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 11956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11937,
											"end": 11956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11937,
											"end": 11956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 11929,
											"end": 11997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 11929,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 12008,
											"end": 12076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 12008,
											"end": 12076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12101,
											"end": 12106,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12125,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12089,
											"end": 12125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12157,
											"end": 12164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12150,
											"end": 12155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12166,
											"end": 12172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12141,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 12181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 12181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 12181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11801,
											"end": 12181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 9449,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8640,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8782,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 8790,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8782,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8773,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8773,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8850,
											"end": 8920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 8850,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8939,
											"end": 8962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8939,
											"end": 8962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8939,
											"end": 8962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 8931,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 8931,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9034,
											"end": 9040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9042,
											"end": 9051,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 9013,
											"end": 9060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9060,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9013,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9106,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9107,
											"end": 9113,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9097,
											"end": 9114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9150,
											"end": 9156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9156,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9125,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 9125,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9271,
											"end": 9277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9244,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9251,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9235,
											"end": 9252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9323,
											"end": 9329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9308,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 9299,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9299,
											"end": 9329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9364,
											"end": 9373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9356,
											"end": 9362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9375,
											"end": 9381,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9347,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9382,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 9415,
											"end": 9421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9423,
											"end": 9432,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9434,
											"end": 9440,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 9395,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9395,
											"end": 9441,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 9395,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 9449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 9449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 9449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 9449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8640,
											"end": 9449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4416,
											"end": 4563,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4416,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 4512,
											"end": 4516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4499,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 2509,
											"end": 2513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 2515,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2515,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 2498,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 2498,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4530,
											"end": 4555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4541,
											"end": 4545,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4554,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4530,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4530,
											"end": 4555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4530,
											"end": 4555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4530,
											"end": 4555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1921,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1806,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1355,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1346,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1865,
											"end": 1872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1865,
											"end": 1872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1901,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1901,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1901,
											"end": 1913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 1901,
											"end": 1913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1894,
											"end": 1914,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1914,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9144,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 9192,
											"end": 9195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9209,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9188,
											"end": 9210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9210,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 9188,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9180,
											"end": 9211,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9211,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 9157,
											"end": 9213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9157,
											"end": 9213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9063,
											"end": 9221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9063,
											"end": 9221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2170,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2053,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1620,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1620,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1620,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1612,
											"end": 1653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1612,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2121,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2111,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2126,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2150,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2150,
											"end": 2162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2150,
											"end": 2162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2141,
											"end": 2163,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2163,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 8709,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 8592,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8655,
											"end": 8662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8682,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 8690,
											"end": 8693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8690,
											"end": 8700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8700,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8682,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 8682,
											"end": 8701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8682,
											"end": 8701,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 8682,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8592,
											"end": 8709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8592,
											"end": 8709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8592,
											"end": 8709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8592,
											"end": 8709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4808,
											"end": 4957,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4808,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 4905,
											"end": 4909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4892,
											"end": 4910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2509,
											"end": 2513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2515,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2515,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2515,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 2498,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2498,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 4935,
											"end": 4939,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4923,
											"end": 4949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 4923,
											"end": 4949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4808,
											"end": 4957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8200,
											"end": 8210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8241,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8220,
											"end": 8243,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8220,
											"end": 8243,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8212,
											"end": 8244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8244,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8192,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 8192,
											"end": 8245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8192,
											"end": 8245,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 8192,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8185,
											"end": 8245,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8185,
											"end": 8245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6977,
											"end": 7215,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6977,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7061,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7069,
											"end": 7073,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7075,
											"end": 7082,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7061,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7061,
											"end": 7083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7061,
											"end": 7083,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7061,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7056,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7056,
											"end": 7208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7132,
											"end": 7136,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7100,
											"end": 7106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7107,
											"end": 7111,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7128,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7183,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7183,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7183,
											"end": 7195,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7183,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7174,
											"end": 7181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "PUSH",
											"source": 2,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7196,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7056,
											"end": 7208,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7056,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 7215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1777,
											"end": 1780,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 1767,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1808,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1969,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1966,
											"end": 2006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2032,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 2021,
											"end": 2032,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1762,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 2096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1682,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 787,
											"end": 944,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 787,
											"end": 944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 936,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 896,
											"end": 936,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 936,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 896,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 896,
											"end": 936,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 936,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 896,
											"end": 936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 896,
											"end": 936,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 889,
											"end": 936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 889,
											"end": 936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 787,
											"end": 944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 787,
											"end": 944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 787,
											"end": 944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 787,
											"end": 944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12906,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 12781,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12781,
											"end": 12906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13634,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 13510,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13510,
											"end": 13634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 3345,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 3434,
											"end": 3438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3426,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3448,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 3426,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 3421,
											"end": 3835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 3642,
											"end": 3649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3655,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3614,
											"end": 3655,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 3614,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3655,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 3614,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3728,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3756,
											"end": 3760,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3728,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 3728,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3728,
											"end": 3766,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 3728,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 3519,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3465,
											"end": 3823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3835,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 3421,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4523,
											"end": 4530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4562,
											"end": 4567,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 4550,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4543,
											"end": 4568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4543,
											"end": 4568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4456,
											"end": 4576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 4102,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3993,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4049,
											"end": 4056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4087,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 4102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 4102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 4102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7347,
											"end": 7586,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 7347,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7431,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 7439,
											"end": 7443,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7445,
											"end": 7452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7431,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7431,
											"end": 7453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7431,
											"end": 7453,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 7431,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7427,
											"end": 7579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7427,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 7427,
											"end": 7579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7502,
											"end": 7507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7476,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7491,
											"end": 7498,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7554,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7554,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7539,
											"end": 7543,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "PUSH",
											"source": 2,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7567,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7427,
											"end": 7579,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 7427,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2338,
											"end": 2342,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2489,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2477,
											"end": 2489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2456,
											"end": 2496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2456,
											"end": 2496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2527,
											"end": 2528,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2513,
											"end": 2528,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2912,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 2912,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2983,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2961,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3030,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3083,
											"end": 3092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3071,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3199,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3207,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3221,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3196,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3313,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3310,
											"end": 3322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3000,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3489,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3486,
											"end": 3503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3584,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3593,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3581,
											"end": 3593,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3599,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3574,
											"end": 3600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3574,
											"end": 3600,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3624,
											"end": 3628,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3617,
											"end": 3628,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2509,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3668,
											"end": 3673,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2272,
											"end": 3692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2272,
											"end": 3692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3907,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 3778,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3899,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3878,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3893,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3899,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3899,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3868,
											"end": 3899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3907,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3907,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1589,
											"end": 2040,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1589,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1690,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 1722,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1722,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 1712,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "PUSH",
											"source": 9,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1748,
											"end": 1754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1748,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "PUSH",
											"source": 9,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1774,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 1817,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1817,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1884,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 1885,
											"end": 1890,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1896,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1872,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1860,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1840,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1840,
											"end": 1843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 1945,
											"end": 2000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1945,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1589,
											"end": 2040,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1589,
											"end": 2040,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1589,
											"end": 2040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1589,
											"end": 2040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1589,
											"end": 2040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2335,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2390,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 2470,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2817,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2908,
											"end": 3034,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 2908,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3027,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2974,
											"end": 3028,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 3028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 3028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2908,
											"end": 3034,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2908,
											"end": 3034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2908,
											"end": 3034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2908,
											"end": 3034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3136,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3040,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3084,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 3124,
											"end": 3129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3106,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3130,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 3106,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3136,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3136,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3264,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3142,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 3233,
											"end": 3238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 3215,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3239,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 3215,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3205,
											"end": 3240,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3195,
											"end": 3258,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3252,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3258,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3195,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3409,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 3270,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3316,
											"end": 3321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3361,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3370,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3397,
											"end": 3402,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3370,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3370,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3370,
											"end": 3403,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3370,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3409,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3409,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3492,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3415,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3452,
											"end": 3459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3470,
											"end": 3486,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3470,
											"end": 3486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 3589,
											"end": 3594,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3571,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3561,
											"end": 3596,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3697,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 3753,
											"end": 3758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3726,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3894,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3899,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 3902,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4092,
											"end": 4099,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4047,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3993,
											"end": 4110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4175,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4369,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4251,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4338,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4356,
											"end": 4361,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4338,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 4338,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4338,
											"end": 4362,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4338,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4333,
											"end": 4336,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4597,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4375,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4495,
											"end": 4504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4491,
											"end": 4509,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4519,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4585,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4572,
											"end": 4589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4519,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4519,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4519,
											"end": 4590,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 4519,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4597,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 5222,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 4603,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4680,
											"end": 4686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4733,
											"end": 4742,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4731,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4743,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4716,
											"end": 4748,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4713,
											"end": 4832,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4713,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4713,
											"end": 4832,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 4751,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4751,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4713,
											"end": 4832,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4713,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 4930,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4896,
											"end": 4949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 4896,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4949,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4959,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4998,
											"end": 5000,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 5069,
											"end": 5076,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5066,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5058,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 5024,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5077,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 5024,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5077,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 5087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5197,
											"end": 5204,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 5152,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5205,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 5222,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 5222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 5222,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 5222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 5222,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4603,
											"end": 5222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5305,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 5228,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5272,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5299,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5299,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5305,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 5402,
											"end": 5407,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 5384,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 5384,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5377,
											"end": 5382,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5409,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5364,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5433,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5578,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 5439,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5490,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5510,
											"end": 5530,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5501,
											"end": 5530,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5501,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 5566,
											"end": 5571,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 5539,
											"end": 5572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5572,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 5539,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5578,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5578,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5913,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5584,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5680,
											"end": 5689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5671,
											"end": 5678,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5690,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5663,
											"end": 5695,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5779,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 5660,
											"end": 5779,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5698,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 5698,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 5698,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5698,
											"end": 5777,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 5698,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5779,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 5660,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5818,
											"end": 5819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 5888,
											"end": 5895,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5868,
											"end": 5877,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 5886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 5843,
											"end": 5896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 5843,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5896,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5789,
											"end": 5906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5913,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5913,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 6037,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 5919,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 6024,
											"end": 6029,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 6006,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6030,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 6006,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6001,
											"end": 6004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6031,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 6037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 6037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 6037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6043,
											"end": 6265,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 6043,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6136,
											"end": 6140,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 6255,
											"end": 6256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6253,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6237,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 6187,
											"end": 6258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6258,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 6187,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6043,
											"end": 6265,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6043,
											"end": 6265,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6043,
											"end": 6265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6043,
											"end": 6265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6043,
											"end": 6265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6745,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 6271,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6375,
											"end": 6382,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6371,
											"end": 6394,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6399,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 6402,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6592,
											"end": 6599,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6568,
											"end": 6590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 6547,
											"end": 6600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6493,
											"end": 6610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 6720,
											"end": 6727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6696,
											"end": 6718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 6675,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6620,
											"end": 6738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6745,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6745,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6751,
											"end": 6837,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 6751,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6830,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6815,
											"end": 6831,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6804,
											"end": 6831,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6804,
											"end": 6831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6751,
											"end": 6837,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6751,
											"end": 6837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6751,
											"end": 6837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6751,
											"end": 6837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6955,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 6843,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6926,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6926,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 6926,
											"end": 6948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6926,
											"end": 6948,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 6926,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6921,
											"end": 6924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6914,
											"end": 6949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7175,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6961,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7054,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7090,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7086,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7065,
											"end": 7091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7065,
											"end": 7091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7101,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 7165,
											"end": 7166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7163,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7167,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7101,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 7101,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7101,
											"end": 7168,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 7101,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7175,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6961,
											"end": 7175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7510,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 7181,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7291,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7268,
											"end": 7275,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7264,
											"end": 7287,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7292,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 7295,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7295,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 7257,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7415,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 7485,
											"end": 7492,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7474,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7461,
											"end": 7483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 7440,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 7440,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7510,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7510,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7990,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7516,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7598,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7627,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7616,
											"end": 7639,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7612,
											"end": 7644,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7728,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 7609,
											"end": 7728,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7647,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 7647,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 7647,
											"end": 7726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7647,
											"end": 7726,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 7647,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7728,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 7609,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 7837,
											"end": 7844,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7828,
											"end": 7834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7817,
											"end": 7826,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7813,
											"end": 7835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 7792,
											"end": 7845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7782,
											"end": 7845,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7782,
											"end": 7845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7738,
											"end": 7855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7894,
											"end": 7896,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 7965,
											"end": 7972,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7956,
											"end": 7962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7945,
											"end": 7954,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 7963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7920,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 7920,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7920,
											"end": 7973,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 7920,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7910,
											"end": 7973,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7910,
											"end": 7973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7865,
											"end": 7983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7990,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7990,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7990,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8114,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 7996,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 8101,
											"end": 8106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8083,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8107,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 8083,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8078,
											"end": 8081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8071,
											"end": 8108,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8120,
											"end": 8342,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 8120,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8213,
											"end": 8217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8253,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8249,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8228,
											"end": 8254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8228,
											"end": 8254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8330,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8317,
											"end": 8334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8308,
											"end": 8314,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 8264,
											"end": 8335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 8264,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8120,
											"end": 8342,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8120,
											"end": 8342,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8120,
											"end": 8342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8120,
											"end": 8342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8120,
											"end": 8342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8822,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 8348,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8416,
											"end": 8422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8473,
											"end": 8475,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8452,
											"end": 8459,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8448,
											"end": 8471,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8476,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8560,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 8441,
											"end": 8560,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8479,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 8479,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8479,
											"end": 8558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8479,
											"end": 8558,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 8479,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8560,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 8441,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8599,
											"end": 8600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8624,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 8669,
											"end": 8676,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8660,
											"end": 8666,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8658,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8645,
											"end": 8667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8624,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8624,
											"end": 8677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8624,
											"end": 8677,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 8624,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8614,
											"end": 8677,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8614,
											"end": 8677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 8687,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8728,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 8797,
											"end": 8804,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8752,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8752,
											"end": 8805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8752,
											"end": 8805,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 8752,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8742,
											"end": 8805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8742,
											"end": 8805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8822,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8822,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 9008,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 8828,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8876,
											"end": 8953,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8873,
											"end": 8874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8866,
											"end": 8954,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8973,
											"end": 8977,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8970,
											"end": 8971,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 9002,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9334,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 9014,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9096,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 9089,
											"end": 9093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9085,
											"end": 9097,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9075,
											"end": 9097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9075,
											"end": 9097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9143,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9136,
											"end": 9140,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9132,
											"end": 9144,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9163,
											"end": 9181,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 9153,
											"end": 9234,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9223,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 9211,
											"end": 9217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9207,
											"end": 9224,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9197,
											"end": 9224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9197,
											"end": 9224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9234,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 9153,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9281,
											"end": 9283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9273,
											"end": 9279,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9284,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9247,
											"end": 9285,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 9244,
											"end": 9328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 9300,
											"end": 9318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 9300,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9328,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 9244,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9065,
											"end": 9334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9340,
											"end": 9581,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 9340,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9514,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2063616C6C657220616E6420726563697069656E74206D757374"
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9464,
											"end": 9478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9457,
											"end": 9515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9549,
											"end": 9573,
											"name": "PUSH",
											"source": 13,
											"value": "20626520646966666572656E7420616464726573732E00000000000000000000"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9536,
											"end": 9542,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9532,
											"end": 9547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9525,
											"end": 9574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9340,
											"end": 9581,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9340,
											"end": 9581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9953,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 9587,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9729,
											"end": 9732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 9814,
											"end": 9816,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 9809,
											"end": 9812,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9750,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 9750,
											"end": 9817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9750,
											"end": 9817,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 9750,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9817,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 9915,
											"end": 9918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 9826,
											"end": 9919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 9919,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 9826,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9944,
											"end": 9946,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9939,
											"end": 9942,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9928,
											"end": 9947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9928,
											"end": 9947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9953,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9587,
											"end": 9953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 10378,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 9959,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10125,
											"end": 10129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10152,
											"end": 10161,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10140,
											"end": 10166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10140,
											"end": 10166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10202,
											"end": 10222,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10198,
											"end": 10199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10183,
											"end": 10200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10176,
											"end": 10223,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 10366,
											"end": 10370,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 10240,
											"end": 10371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10371,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 10240,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10232,
											"end": 10371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10232,
											"end": 10371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 10378,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 10378,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 10378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 10378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10384,
											"end": 10611,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 10384,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10558,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 10520,
											"end": 10521,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10508,
											"end": 10522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10559,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10593,
											"end": 10603,
											"name": "PUSH",
											"source": 13,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10580,
											"end": 10586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10576,
											"end": 10591,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10569,
											"end": 10604,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10384,
											"end": 10611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10384,
											"end": 10611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10617,
											"end": 10983,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 10617,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10759,
											"end": 10762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 10844,
											"end": 10846,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 10839,
											"end": 10842,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10780,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 10780,
											"end": 10847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10780,
											"end": 10847,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 10780,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10773,
											"end": 10847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10773,
											"end": 10847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10856,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 10945,
											"end": 10948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10856,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 10856,
											"end": 10949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10856,
											"end": 10949,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 10856,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10974,
											"end": 10976,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10969,
											"end": 10972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10965,
											"end": 10977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10958,
											"end": 10977,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10958,
											"end": 10977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10617,
											"end": 10983,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10617,
											"end": 10983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10617,
											"end": 10983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10617,
											"end": 10983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10989,
											"end": 11408,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 10989,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11155,
											"end": 11159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11195,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11182,
											"end": 11191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11178,
											"end": 11196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11170,
											"end": 11196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11170,
											"end": 11196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11236,
											"end": 11240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11232,
											"end": 11252,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11228,
											"end": 11229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11226,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11213,
											"end": 11230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11270,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 11396,
											"end": 11400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11270,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 11270,
											"end": 11401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11270,
											"end": 11401,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 11270,
											"end": 11401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11262,
											"end": 11401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11262,
											"end": 11401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10989,
											"end": 11408,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10989,
											"end": 11408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10989,
											"end": 11408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10989,
											"end": 11408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11591,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 11414,
											"end": 11591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11583,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A206D75737420686176652061646D696E20726F6C650000000000"
										},
										{
											"begin": 11550,
											"end": 11551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11538,
											"end": 11552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11531,
											"end": 11584,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11739,
											"end": 11742,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 11824,
											"end": 11826,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 11819,
											"end": 11822,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11760,
											"end": 11827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 11760,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11753,
											"end": 11827,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11753,
											"end": 11827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 11925,
											"end": 11928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 11836,
											"end": 11929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 11836,
											"end": 11929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11954,
											"end": 11956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11949,
											"end": 11952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11945,
											"end": 11957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11597,
											"end": 11963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11597,
											"end": 11963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12135,
											"end": 12139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12175,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12158,
											"end": 12176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12150,
											"end": 12176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12150,
											"end": 12176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12222,
											"end": 12231,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12216,
											"end": 12220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12212,
											"end": 12232,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12208,
											"end": 12209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 12206,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12193,
											"end": 12210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12186,
											"end": 12233,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 12376,
											"end": 12380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 12250,
											"end": 12381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 12250,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12242,
											"end": 12381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12242,
											"end": 12381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 12388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 12388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12394,
											"end": 12574,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12394,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12442,
											"end": 12519,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12439,
											"end": 12440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12432,
											"end": 12520,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12539,
											"end": 12543,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 12536,
											"end": 12537,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12529,
											"end": 12544,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12563,
											"end": 12567,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12560,
											"end": 12561,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12553,
											"end": 12568,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12885,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 12580,
											"end": 12885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12620,
											"end": 12623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 12657,
											"end": 12658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 12639,
											"end": 12659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12659,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 12691,
											"end": 12692,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 12673,
											"end": 12693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12693,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 12673,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12668,
											"end": 12693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12759,
											"end": 12825,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12755,
											"end": 12829,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12752,
											"end": 12753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12749,
											"end": 12830,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12746,
											"end": 12853,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12746,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 12746,
											"end": 12853,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 12833,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12833,
											"end": 12851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 12851,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 12833,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12746,
											"end": 12853,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 12746,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12877,
											"end": 12878,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12874,
											"end": 12875,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12870,
											"end": 12879,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12863,
											"end": 12879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12863,
											"end": 12879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12885,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12885,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12891,
											"end": 13115,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 12891,
											"end": 13115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13031,
											"end": 13065,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 13027,
											"end": 13028,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13019,
											"end": 13025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13015,
											"end": 13029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13008,
											"end": 13066,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13107,
											"name": "PUSH",
											"source": 13,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13087,
											"end": 13093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13083,
											"end": 13098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13076,
											"end": 13108,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12891,
											"end": 13115,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12891,
											"end": 13115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13121,
											"end": 13487,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 13121,
											"end": 13487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13263,
											"end": 13266,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 13348,
											"end": 13350,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 13343,
											"end": 13346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 13284,
											"end": 13351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 13351,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 13284,
											"end": 13351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13351,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 13449,
											"end": 13452,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 13360,
											"end": 13453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13453,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 13360,
											"end": 13453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13478,
											"end": 13480,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13473,
											"end": 13476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13469,
											"end": 13481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13462,
											"end": 13481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13462,
											"end": 13481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13121,
											"end": 13487,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13121,
											"end": 13487,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13121,
											"end": 13487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13121,
											"end": 13487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13912,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 13493,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 13663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13697,
											"end": 13699,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13686,
											"end": 13695,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13682,
											"end": 13700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13674,
											"end": 13700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13674,
											"end": 13700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13746,
											"end": 13755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13740,
											"end": 13744,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13756,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13732,
											"end": 13733,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13721,
											"end": 13730,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13717,
											"end": 13734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13710,
											"end": 13757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13774,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 13900,
											"end": 13904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13774,
											"end": 13905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 13774,
											"end": 13905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13774,
											"end": 13905,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 13774,
											"end": 13905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13766,
											"end": 13905,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13766,
											"end": 13905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13912,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13918,
											"end": 14146,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 13918,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14058,
											"end": 14092,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2063616C6C65722063616E206E6F74207265766F6B65206F776E"
										},
										{
											"begin": 14054,
											"end": 14055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14046,
											"end": 14052,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14035,
											"end": 14093,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14127,
											"end": 14138,
											"name": "PUSH",
											"source": 13,
											"value": "20616464726573732E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14122,
											"end": 14124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14114,
											"end": 14120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14110,
											"end": 14125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14103,
											"end": 14139,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13918,
											"end": 14146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13918,
											"end": 14146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 14518,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 14152,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14294,
											"end": 14297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14315,
											"end": 14382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 14379,
											"end": 14381,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 14374,
											"end": 14377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14315,
											"end": 14382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 14315,
											"end": 14382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14315,
											"end": 14382,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 14315,
											"end": 14382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14308,
											"end": 14382,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14308,
											"end": 14382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14391,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 14480,
											"end": 14483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14391,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 14391,
											"end": 14484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14391,
											"end": 14484,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 14391,
											"end": 14484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14509,
											"end": 14511,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14504,
											"end": 14507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14500,
											"end": 14512,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14493,
											"end": 14512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14493,
											"end": 14512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 14518,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 14518,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 14518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14152,
											"end": 14518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14524,
											"end": 14943,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 14524,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14690,
											"end": 14694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14728,
											"end": 14730,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14717,
											"end": 14726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14713,
											"end": 14731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14705,
											"end": 14731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14705,
											"end": 14731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14777,
											"end": 14786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14771,
											"end": 14775,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14767,
											"end": 14787,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14763,
											"end": 14764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14752,
											"end": 14761,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14748,
											"end": 14765,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14741,
											"end": 14788,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14805,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 14931,
											"end": 14935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14805,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 14805,
											"end": 14936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14805,
											"end": 14936,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 14805,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 14936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 14936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14524,
											"end": 14943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14524,
											"end": 14943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14524,
											"end": 14943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14524,
											"end": 14943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14949,
											"end": 15172,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 14949,
											"end": 15172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15089,
											"end": 15123,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 15085,
											"end": 15086,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15077,
											"end": 15083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15073,
											"end": 15087,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15066,
											"end": 15124,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15158,
											"end": 15164,
											"name": "PUSH",
											"source": 13,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15153,
											"end": 15155,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15145,
											"end": 15151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15141,
											"end": 15156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15165,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14949,
											"end": 15172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14949,
											"end": 15172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15544,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 15178,
											"end": 15544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15320,
											"end": 15323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15341,
											"end": 15408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 15405,
											"end": 15407,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15400,
											"end": 15403,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15341,
											"end": 15408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 15341,
											"end": 15408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15341,
											"end": 15408,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 15341,
											"end": 15408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15334,
											"end": 15408,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15334,
											"end": 15408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15417,
											"end": 15510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 15506,
											"end": 15509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15417,
											"end": 15510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 15417,
											"end": 15510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15417,
											"end": 15510,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 15417,
											"end": 15510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15535,
											"end": 15537,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15530,
											"end": 15533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15526,
											"end": 15538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15519,
											"end": 15538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15519,
											"end": 15538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15178,
											"end": 15544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15550,
											"end": 15969,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 15550,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15716,
											"end": 15720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15754,
											"end": 15756,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15743,
											"end": 15752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15739,
											"end": 15757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15731,
											"end": 15757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15731,
											"end": 15757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15803,
											"end": 15812,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15797,
											"end": 15801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15793,
											"end": 15813,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15789,
											"end": 15790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15778,
											"end": 15787,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15774,
											"end": 15791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15767,
											"end": 15814,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15831,
											"end": 15962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 15957,
											"end": 15961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15831,
											"end": 15962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 15831,
											"end": 15962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15831,
											"end": 15962,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 15831,
											"end": 15962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15823,
											"end": 15962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15823,
											"end": 15962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15550,
											"end": 15969,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15550,
											"end": 15969,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15550,
											"end": 15969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15550,
											"end": 15969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15975,
											"end": 16196,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 15975,
											"end": 16196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16115,
											"end": 16149,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 16111,
											"end": 16112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16103,
											"end": 16109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16099,
											"end": 16113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16092,
											"end": 16150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16184,
											"end": 16188,
											"name": "PUSH",
											"source": 13,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16179,
											"end": 16181,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16171,
											"end": 16177,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16167,
											"end": 16182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16160,
											"end": 16189,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15975,
											"end": 16196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15975,
											"end": 16196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16202,
											"end": 16568,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 16202,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16344,
											"end": 16347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16365,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 16429,
											"end": 16431,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 16424,
											"end": 16427,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16365,
											"end": 16432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 16365,
											"end": 16432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16365,
											"end": 16432,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 16365,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16358,
											"end": 16432,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16358,
											"end": 16432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16441,
											"end": 16534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 16530,
											"end": 16533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16441,
											"end": 16534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 16441,
											"end": 16534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16441,
											"end": 16534,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 16441,
											"end": 16534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16559,
											"end": 16561,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16554,
											"end": 16557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16550,
											"end": 16562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16543,
											"end": 16562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16543,
											"end": 16562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16202,
											"end": 16568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16202,
											"end": 16568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16202,
											"end": 16568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16202,
											"end": 16568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16574,
											"end": 16993,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 16574,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16740,
											"end": 16744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16778,
											"end": 16780,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16776,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16763,
											"end": 16781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16755,
											"end": 16781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16755,
											"end": 16781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16827,
											"end": 16836,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16821,
											"end": 16825,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16817,
											"end": 16837,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16813,
											"end": 16814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16811,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16798,
											"end": 16815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16791,
											"end": 16838,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16855,
											"end": 16986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 16981,
											"end": 16985,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16855,
											"end": 16986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 16855,
											"end": 16986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16855,
											"end": 16986,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 16855,
											"end": 16986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16847,
											"end": 16986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16847,
											"end": 16986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16574,
											"end": 16993,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16574,
											"end": 16993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16574,
											"end": 16993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16574,
											"end": 16993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16999,
											"end": 17230,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 16999,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17139,
											"end": 17173,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066756E6374696F6E2069732070617573"
										},
										{
											"begin": 17135,
											"end": 17136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17127,
											"end": 17133,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17123,
											"end": 17137,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17116,
											"end": 17174,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17208,
											"end": 17222,
											"name": "PUSH",
											"source": 13,
											"value": "65642062792061646D696E2E0000000000000000000000000000000000000000"
										},
										{
											"begin": 17203,
											"end": 17205,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17195,
											"end": 17201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17191,
											"end": 17206,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17184,
											"end": 17223,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16999,
											"end": 17230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16999,
											"end": 17230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17236,
											"end": 17602,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 17236,
											"end": 17602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17378,
											"end": 17381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17399,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 17463,
											"end": 17465,
											"name": "PUSH",
											"source": 13,
											"value": "2C"
										},
										{
											"begin": 17458,
											"end": 17461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17399,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 17399,
											"end": 17466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17399,
											"end": 17466,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 17399,
											"end": 17466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17392,
											"end": 17466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17475,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 17564,
											"end": 17567,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17475,
											"end": 17568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 17475,
											"end": 17568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17475,
											"end": 17568,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 17475,
											"end": 17568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17593,
											"end": 17595,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17588,
											"end": 17591,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17584,
											"end": 17596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17577,
											"end": 17596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17577,
											"end": 17596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17236,
											"end": 17602,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17236,
											"end": 17602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17236,
											"end": 17602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17236,
											"end": 17602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17608,
											"end": 18027,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 17608,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17774,
											"end": 17778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17812,
											"end": 17814,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17801,
											"end": 17810,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17797,
											"end": 17815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17789,
											"end": 17815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17861,
											"end": 17870,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17855,
											"end": 17859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17851,
											"end": 17871,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17848,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17836,
											"end": 17845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17832,
											"end": 17849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 17872,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17889,
											"end": 18020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 18015,
											"end": 18019,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17889,
											"end": 18020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 17889,
											"end": 18020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17889,
											"end": 18020,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 17889,
											"end": 18020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17881,
											"end": 18020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17881,
											"end": 18020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17608,
											"end": 18027,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17608,
											"end": 18027,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17608,
											"end": 18027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17608,
											"end": 18027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18257,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 18033,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18173,
											"end": 18207,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 18169,
											"end": 18170,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18161,
											"end": 18167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18157,
											"end": 18171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18150,
											"end": 18208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18242,
											"end": 18249,
											"name": "PUSH",
											"source": 13,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18237,
											"end": 18239,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18229,
											"end": 18235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18225,
											"end": 18240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18218,
											"end": 18250,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18263,
											"end": 18629,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 18263,
											"end": 18629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18405,
											"end": 18408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18426,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 18490,
											"end": 18492,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 18485,
											"end": 18488,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18426,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 18426,
											"end": 18493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18426,
											"end": 18493,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 18426,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18419,
											"end": 18493,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18419,
											"end": 18493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18502,
											"end": 18595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 18591,
											"end": 18594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18502,
											"end": 18595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 18502,
											"end": 18595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18502,
											"end": 18595,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 18502,
											"end": 18595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18620,
											"end": 18622,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18615,
											"end": 18618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18611,
											"end": 18623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 18623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 18623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18263,
											"end": 18629,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18263,
											"end": 18629,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18263,
											"end": 18629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18263,
											"end": 18629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18635,
											"end": 19054,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 18635,
											"end": 19054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18801,
											"end": 18805,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18839,
											"end": 18841,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18828,
											"end": 18837,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18824,
											"end": 18842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18816,
											"end": 18842,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18816,
											"end": 18842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18888,
											"end": 18897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18882,
											"end": 18886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18878,
											"end": 18898,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18874,
											"end": 18875,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18863,
											"end": 18872,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18859,
											"end": 18876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18852,
											"end": 18899,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18916,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 19042,
											"end": 19046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18916,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 18916,
											"end": 19047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18916,
											"end": 19047,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 18916,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18908,
											"end": 19047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18908,
											"end": 19047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18635,
											"end": 19054,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18635,
											"end": 19054,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18635,
											"end": 19054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18635,
											"end": 19054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19060,
											"end": 19282,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 19060,
											"end": 19282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19200,
											"end": 19234,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 19196,
											"end": 19197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19188,
											"end": 19194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19184,
											"end": 19198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19177,
											"end": 19235,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19269,
											"end": 19274,
											"name": "PUSH",
											"source": 13,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19264,
											"end": 19266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19256,
											"end": 19262,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19252,
											"end": 19267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19245,
											"end": 19275,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19060,
											"end": 19282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19060,
											"end": 19282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19288,
											"end": 19654,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 19288,
											"end": 19654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19430,
											"end": 19433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19451,
											"end": 19518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 19515,
											"end": 19517,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 19510,
											"end": 19513,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19451,
											"end": 19518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 19451,
											"end": 19518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19451,
											"end": 19518,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 19451,
											"end": 19518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19444,
											"end": 19518,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19444,
											"end": 19518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19527,
											"end": 19620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 19616,
											"end": 19619,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19527,
											"end": 19620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 19527,
											"end": 19620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19527,
											"end": 19620,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 19527,
											"end": 19620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19645,
											"end": 19647,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19640,
											"end": 19643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19636,
											"end": 19648,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19629,
											"end": 19648,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19629,
											"end": 19648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19288,
											"end": 19654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19288,
											"end": 19654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19288,
											"end": 19654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19288,
											"end": 19654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19660,
											"end": 20079,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 19660,
											"end": 20079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19826,
											"end": 19830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19864,
											"end": 19866,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19853,
											"end": 19862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19849,
											"end": 19867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19841,
											"end": 19867,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19841,
											"end": 19867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19913,
											"end": 19922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19907,
											"end": 19911,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19903,
											"end": 19923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19899,
											"end": 19900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19888,
											"end": 19897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19884,
											"end": 19901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19877,
											"end": 19924,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19941,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 20067,
											"end": 20071,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19941,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 19941,
											"end": 20072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19941,
											"end": 20072,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 19941,
											"end": 20072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19660,
											"end": 20079,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19660,
											"end": 20079,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19660,
											"end": 20079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19660,
											"end": 20079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20085,
											"end": 20310,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 20085,
											"end": 20310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20225,
											"end": 20259,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 20221,
											"end": 20222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20213,
											"end": 20219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20209,
											"end": 20223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20260,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20294,
											"end": 20302,
											"name": "PUSH",
											"source": 13,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20289,
											"end": 20291,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20281,
											"end": 20287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20277,
											"end": 20292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20270,
											"end": 20303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20085,
											"end": 20310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20085,
											"end": 20310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20682,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 20316,
											"end": 20682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20458,
											"end": 20461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20479,
											"end": 20546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 20543,
											"end": 20545,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 20538,
											"end": 20541,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20479,
											"end": 20546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 20479,
											"end": 20546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20479,
											"end": 20546,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 20479,
											"end": 20546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20472,
											"end": 20546,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20472,
											"end": 20546,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20555,
											"end": 20648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 20644,
											"end": 20647,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20555,
											"end": 20648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 20555,
											"end": 20648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20555,
											"end": 20648,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 20555,
											"end": 20648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20673,
											"end": 20675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20668,
											"end": 20671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20664,
											"end": 20676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20657,
											"end": 20676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20657,
											"end": 20676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20688,
											"end": 21107,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 20688,
											"end": 21107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20854,
											"end": 20858,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20892,
											"end": 20894,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20881,
											"end": 20890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20877,
											"end": 20895,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20869,
											"end": 20895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20869,
											"end": 20895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20941,
											"end": 20950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20935,
											"end": 20939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20931,
											"end": 20951,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20927,
											"end": 20928,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20916,
											"end": 20925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20912,
											"end": 20929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20905,
											"end": 20952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20969,
											"end": 21100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 21095,
											"end": 21099,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20969,
											"end": 21100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 20969,
											"end": 21100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20969,
											"end": 21100,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 20969,
											"end": 21100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20961,
											"end": 21100,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20961,
											"end": 21100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20688,
											"end": 21107,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20688,
											"end": 21107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20688,
											"end": 21107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20688,
											"end": 21107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21113,
											"end": 21279,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 21113,
											"end": 21279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21253,
											"end": 21271,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 21249,
											"end": 21250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21241,
											"end": 21247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21237,
											"end": 21251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21230,
											"end": 21272,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21113,
											"end": 21279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21113,
											"end": 21279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21651,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 21285,
											"end": 21651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21427,
											"end": 21430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21448,
											"end": 21515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 21512,
											"end": 21514,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 21507,
											"end": 21510,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21448,
											"end": 21515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 21448,
											"end": 21515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21448,
											"end": 21515,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 21448,
											"end": 21515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21515,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21524,
											"end": 21617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 21613,
											"end": 21616,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21524,
											"end": 21617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 21524,
											"end": 21617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21524,
											"end": 21617,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 21524,
											"end": 21617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21642,
											"end": 21644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21637,
											"end": 21640,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21633,
											"end": 21645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21626,
											"end": 21645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21626,
											"end": 21645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21651,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21651,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21657,
											"end": 22076,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 21657,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21823,
											"end": 21827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21861,
											"end": 21863,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21850,
											"end": 21859,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21846,
											"end": 21864,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21838,
											"end": 21864,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21838,
											"end": 21864,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21910,
											"end": 21919,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21904,
											"end": 21908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21900,
											"end": 21920,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21896,
											"end": 21897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21885,
											"end": 21894,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21881,
											"end": 21898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21874,
											"end": 21921,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21938,
											"end": 22069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 22064,
											"end": 22068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21938,
											"end": 22069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 21938,
											"end": 22069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21938,
											"end": 22069,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 21938,
											"end": 22069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21930,
											"end": 22069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21930,
											"end": 22069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21657,
											"end": 22076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21657,
											"end": 22076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21657,
											"end": 22076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21657,
											"end": 22076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22082,
											"end": 22252,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 22082,
											"end": 22252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22222,
											"end": 22244,
											"name": "PUSH",
											"source": 13,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 22218,
											"end": 22219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22210,
											"end": 22216,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22206,
											"end": 22220,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22199,
											"end": 22245,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22082,
											"end": 22252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22082,
											"end": 22252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22258,
											"end": 22624,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 22258,
											"end": 22624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22400,
											"end": 22403,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22421,
											"end": 22488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 22485,
											"end": 22487,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 22480,
											"end": 22483,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22421,
											"end": 22488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 22421,
											"end": 22488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22421,
											"end": 22488,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 22421,
											"end": 22488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22414,
											"end": 22488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22414,
											"end": 22488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22497,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 22586,
											"end": 22589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22497,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 22497,
											"end": 22590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22497,
											"end": 22590,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 22497,
											"end": 22590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22615,
											"end": 22617,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22610,
											"end": 22613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22606,
											"end": 22618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22599,
											"end": 22618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22599,
											"end": 22618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22258,
											"end": 22624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22258,
											"end": 22624,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22258,
											"end": 22624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22258,
											"end": 22624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22630,
											"end": 23049,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 22630,
											"end": 23049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22796,
											"end": 22800,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22834,
											"end": 22836,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22823,
											"end": 22832,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22819,
											"end": 22837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22811,
											"end": 22837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22811,
											"end": 22837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22883,
											"end": 22892,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22877,
											"end": 22881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22873,
											"end": 22893,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22869,
											"end": 22870,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22858,
											"end": 22867,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22854,
											"end": 22871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22847,
											"end": 22894,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22911,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 23037,
											"end": 23041,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22911,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 22911,
											"end": 23042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22911,
											"end": 23042,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 22911,
											"end": 23042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22903,
											"end": 23042,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22903,
											"end": 23042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22630,
											"end": 23049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22630,
											"end": 23049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22630,
											"end": 23049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22630,
											"end": 23049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23055,
											"end": 23203,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 23055,
											"end": 23203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23157,
											"end": 23168,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23194,
											"end": 23197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23179,
											"end": 23197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23179,
											"end": 23197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23055,
											"end": 23203,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23055,
											"end": 23203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23055,
											"end": 23203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23055,
											"end": 23203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23055,
											"end": 23203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23382,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 23209,
											"end": 23382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23349,
											"end": 23374,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 23345,
											"end": 23346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23337,
											"end": 23343,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23333,
											"end": 23347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23326,
											"end": 23375,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23388,
											"end": 23790,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 23388,
											"end": 23790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23548,
											"end": 23551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23569,
											"end": 23654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 23651,
											"end": 23653,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 23646,
											"end": 23649,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23569,
											"end": 23654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 23569,
											"end": 23654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23569,
											"end": 23654,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 23569,
											"end": 23654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23562,
											"end": 23654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23562,
											"end": 23654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23663,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 23752,
											"end": 23755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23663,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 23663,
											"end": 23756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23663,
											"end": 23756,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 23663,
											"end": 23756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23781,
											"end": 23783,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 23776,
											"end": 23779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23765,
											"end": 23784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23765,
											"end": 23784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23388,
											"end": 23790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23388,
											"end": 23790,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23388,
											"end": 23790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23388,
											"end": 23790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23796,
											"end": 24173,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 23796,
											"end": 24173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23902,
											"end": 23905,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23930,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 23963,
											"end": 23968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23930,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 23930,
											"end": 23969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23930,
											"end": 23969,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 23930,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23985,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 24067,
											"end": 24073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24062,
											"end": 24065,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23985,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 23985,
											"end": 24074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23985,
											"end": 24074,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 23985,
											"end": 24074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23978,
											"end": 24074,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23978,
											"end": 24074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24083,
											"end": 24135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 24128,
											"end": 24134,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24123,
											"end": 24126,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24116,
											"end": 24120,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24109,
											"end": 24114,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24105,
											"end": 24121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24083,
											"end": 24135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 24083,
											"end": 24135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24083,
											"end": 24135,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 24083,
											"end": 24135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24160,
											"end": 24166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 24155,
											"end": 24158,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24151,
											"end": 24167,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24144,
											"end": 24167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24144,
											"end": 24167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23906,
											"end": 24173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23796,
											"end": 24173,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23796,
											"end": 24173,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23796,
											"end": 24173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23796,
											"end": 24173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23796,
											"end": 24173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24179,
											"end": 24346,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 24179,
											"end": 24346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24319,
											"end": 24338,
											"name": "PUSH",
											"source": 13,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 24315,
											"end": 24316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24307,
											"end": 24313,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24303,
											"end": 24317,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24296,
											"end": 24339,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24179,
											"end": 24346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24179,
											"end": 24346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24352,
											"end": 24754,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 24352,
											"end": 24754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24512,
											"end": 24515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24533,
											"end": 24618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 24615,
											"end": 24617,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 24610,
											"end": 24613,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24533,
											"end": 24618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 24533,
											"end": 24618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24533,
											"end": 24618,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 24533,
											"end": 24618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24526,
											"end": 24618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24526,
											"end": 24618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24627,
											"end": 24720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 24716,
											"end": 24719,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24627,
											"end": 24720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 24627,
											"end": 24720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24627,
											"end": 24720,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 24627,
											"end": 24720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24745,
											"end": 24747,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 24740,
											"end": 24743,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24736,
											"end": 24748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24729,
											"end": 24748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24729,
											"end": 24748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24352,
											"end": 24754,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24352,
											"end": 24754,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24352,
											"end": 24754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24352,
											"end": 24754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 25727,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 24760,
											"end": 25727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25142,
											"end": 25145,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25164,
											"end": 25312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 25308,
											"end": 25311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25164,
											"end": 25312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 25164,
											"end": 25312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25164,
											"end": 25312,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 25164,
											"end": 25312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25157,
											"end": 25312,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25157,
											"end": 25312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25329,
											"end": 25424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 25420,
											"end": 25423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25411,
											"end": 25417,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25329,
											"end": 25424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 25329,
											"end": 25424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25329,
											"end": 25424,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 25329,
											"end": 25424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25322,
											"end": 25424,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25322,
											"end": 25424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25441,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 25585,
											"end": 25588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25441,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 25441,
											"end": 25589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25441,
											"end": 25589,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 25441,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25434,
											"end": 25589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25434,
											"end": 25589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25606,
											"end": 25701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 25697,
											"end": 25700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25688,
											"end": 25694,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25606,
											"end": 25701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 25606,
											"end": 25701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25606,
											"end": 25701,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 25606,
											"end": 25701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25599,
											"end": 25701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25599,
											"end": 25701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25718,
											"end": 25721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25711,
											"end": 25721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25711,
											"end": 25721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 25727,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 25727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 25727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 25727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 25727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24760,
											"end": 25727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25733,
											"end": 25913,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 25733,
											"end": 25913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25781,
											"end": 25858,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25778,
											"end": 25779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25771,
											"end": 25859,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25878,
											"end": 25882,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 25875,
											"end": 25876,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 25868,
											"end": 25883,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25902,
											"end": 25906,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 25899,
											"end": 25900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25892,
											"end": 25907,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 25919,
											"end": 26110,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 25919,
											"end": 26110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25959,
											"end": 25963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25979,
											"end": 25999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 25997,
											"end": 25998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25979,
											"end": 25999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 25979,
											"end": 25999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25979,
											"end": 25999,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 25979,
											"end": 25999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25974,
											"end": 25999,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25974,
											"end": 25999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26013,
											"end": 26033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 26031,
											"end": 26032,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26013,
											"end": 26033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 26013,
											"end": 26033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26013,
											"end": 26033,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 26013,
											"end": 26033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26008,
											"end": 26033,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26008,
											"end": 26033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26052,
											"end": 26053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26049,
											"end": 26050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26046,
											"end": 26054,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 26043,
											"end": 26077,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26043,
											"end": 26077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 26043,
											"end": 26077,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 26057,
											"end": 26075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 26057,
											"end": 26075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26075,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 26057,
											"end": 26075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26043,
											"end": 26077,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 26043,
											"end": 26077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26102,
											"end": 26103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26099,
											"end": 26100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26095,
											"end": 26104,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26087,
											"end": 26104,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26087,
											"end": 26104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25919,
											"end": 26110,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25919,
											"end": 26110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25919,
											"end": 26110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25919,
											"end": 26110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25919,
											"end": 26110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26116,
											"end": 26296,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 26116,
											"end": 26296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26164,
											"end": 26241,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26161,
											"end": 26162,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26154,
											"end": 26242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26261,
											"end": 26265,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 26258,
											"end": 26259,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 26251,
											"end": 26266,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26285,
											"end": 26289,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 26282,
											"end": 26283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26275,
											"end": 26290,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 26302,
											"end": 26650,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 26302,
											"end": 26650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26342,
											"end": 26349,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26365,
											"end": 26385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 26383,
											"end": 26384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26365,
											"end": 26385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 26365,
											"end": 26385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26365,
											"end": 26385,
											"name": "tag",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 26365,
											"end": 26385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26360,
											"end": 26385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26360,
											"end": 26385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26399,
											"end": 26419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 26417,
											"end": 26418,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26399,
											"end": 26419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 26399,
											"end": 26419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26399,
											"end": 26419,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 26399,
											"end": 26419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26394,
											"end": 26419,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26394,
											"end": 26419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26587,
											"end": 26588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26519,
											"end": 26585,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26515,
											"end": 26589,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 26512,
											"end": 26513,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26509,
											"end": 26590,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 26504,
											"end": 26505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26497,
											"end": 26506,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26490,
											"end": 26507,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26486,
											"end": 26591,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 26483,
											"end": 26614,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26483,
											"end": 26614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 26483,
											"end": 26614,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26594,
											"end": 26612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 26594,
											"end": 26612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 26594,
											"end": 26612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26594,
											"end": 26612,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 26594,
											"end": 26612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26483,
											"end": 26614,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 26483,
											"end": 26614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26642,
											"end": 26643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26639,
											"end": 26640,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26635,
											"end": 26644,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 26624,
											"end": 26644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26624,
											"end": 26644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26302,
											"end": 26650,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26302,
											"end": 26650,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26302,
											"end": 26650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26302,
											"end": 26650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26302,
											"end": 26650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26656,
											"end": 26836,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 26656,
											"end": 26836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26704,
											"end": 26781,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26701,
											"end": 26702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26694,
											"end": 26782,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26801,
											"end": 26805,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 26798,
											"end": 26799,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 26791,
											"end": 26806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26825,
											"end": 26829,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 26822,
											"end": 26823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26815,
											"end": 26830,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 26842,
											"end": 27013,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 26842,
											"end": 27013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26881,
											"end": 26884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26904,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 26922,
											"end": 26927,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26904,
											"end": 26928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 26904,
											"end": 26928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26904,
											"end": 26928,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 26904,
											"end": 26928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26895,
											"end": 26928,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26895,
											"end": 26928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26950,
											"end": 26954,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26943,
											"end": 26948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26940,
											"end": 26955,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26937,
											"end": 26978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 26937,
											"end": 26978,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26958,
											"end": 26976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 26958,
											"end": 26976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 26958,
											"end": 26976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26958,
											"end": 26976,
											"name": "tag",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 26958,
											"end": 26976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26937,
											"end": 26978,
											"name": "tag",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 26937,
											"end": 26978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27005,
											"end": 27006,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26998,
											"end": 27003,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26994,
											"end": 27007,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26987,
											"end": 27007,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26987,
											"end": 27007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26842,
											"end": 27013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26842,
											"end": 27013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26842,
											"end": 27013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26842,
											"end": 27013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27019,
											"end": 27201,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 27019,
											"end": 27201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27159,
											"end": 27193,
											"name": "PUSH",
											"source": 13,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 27155,
											"end": 27156,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27147,
											"end": 27153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27143,
											"end": 27157,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27136,
											"end": 27194,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27019,
											"end": 27201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27019,
											"end": 27201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27207,
											"end": 27573,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 27207,
											"end": 27573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27349,
											"end": 27352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27370,
											"end": 27437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 27434,
											"end": 27436,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27429,
											"end": 27432,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27370,
											"end": 27437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 27370,
											"end": 27437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27370,
											"end": 27437,
											"name": "tag",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 27370,
											"end": 27437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27363,
											"end": 27437,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27363,
											"end": 27437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27446,
											"end": 27539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 27535,
											"end": 27538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27446,
											"end": 27539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 27446,
											"end": 27539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27446,
											"end": 27539,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 27446,
											"end": 27539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27564,
											"end": 27566,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27559,
											"end": 27562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27555,
											"end": 27567,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27548,
											"end": 27567,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27548,
											"end": 27567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27207,
											"end": 27573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27207,
											"end": 27573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27207,
											"end": 27573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27207,
											"end": 27573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27579,
											"end": 27998,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 27579,
											"end": 27998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27745,
											"end": 27749,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27783,
											"end": 27785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27772,
											"end": 27781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27768,
											"end": 27786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27760,
											"end": 27786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27760,
											"end": 27786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27832,
											"end": 27841,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27826,
											"end": 27830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27822,
											"end": 27842,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 27818,
											"end": 27819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27807,
											"end": 27816,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27803,
											"end": 27820,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27796,
											"end": 27843,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27860,
											"end": 27991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 27986,
											"end": 27990,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27860,
											"end": 27991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 27860,
											"end": 27991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27860,
											"end": 27991,
											"name": "tag",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 27860,
											"end": 27991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27852,
											"end": 27991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27852,
											"end": 27991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27579,
											"end": 27998,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27579,
											"end": 27998,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27579,
											"end": 27998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27579,
											"end": 27998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"ERC20/ERC20.sol",
								"ERC20/IERC20.sol",
								"ERC20/access/AccessControl.sol",
								"ERC20/access/AccessControlEnumerable.sol",
								"ERC20/access/IAccessControl.sol",
								"ERC20/access/IAccessControlEnumerable.sol",
								"ERC20/extensions/IERC20Metadata.sol",
								"ERC20/security/Pausable.sol",
								"ERC20/utils/Context.sol",
								"ERC20/utils/Strings.sol",
								"ERC20/utils/introspection/ERC165.sol",
								"ERC20/utils/introspection/IERC165.sol",
								"ERC20/utils/structs/EnumerableSet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MAX_TOKEN_COUNT()": "d0bbb0d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"pausedOptions()": "5394a892",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unPausedOptions()": "c6e858fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOKEN_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedOptions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unPausedOptions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0xa5e18da857f5886eebcf609f84c016b095198b81c061199f881a32a21b007ae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90c6a21c1809b31b30e54b7f5475a6f675e25e7fe2e3f2a99975b5708a7201e3\",\"dweb:/ipfs/QmexHLexCbjHRQYWebrsvsvsgFt3T9YrjW7ZAe6RqasaHD\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x8fccb9a8388849dbe8d29525ec3b8388ec638b92bae22c7bf1c951a2a1ad4a25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://711da5a49b19c44087ccc838e61f46dc2290a88b475787703c3ba3263ffabd55\",\"dweb:/ipfs/QmQ6R2DpSvuEV9DSdU6Lcye2P9i5Vp344kmgAGHvgXsVp9\"]},\"ERC20/access/AccessControl.sol\":{\"keccak256\":\"0x8e1450e8ca0c07441f3a3e5a79f3269059fba944065e68e47243f63f7bc317ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85f64f29ab892ce688a8c9cf428fc3776ca409ce43b94a8fef959dc726cc7f42\",\"dweb:/ipfs/QmPfbetW6n5WGrv3ZEX7YXFjr3bcpnrJJyatCUdt9r9k1V\"]},\"ERC20/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0xae929d11d84e49968e28df2e34ebbe3d79694007d0c9c28fd395e2cbcc9b5d30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ff039bc616652cc796f9111305368dbdf29cb0af59478f45e756b3a11d72de\",\"dweb:/ipfs/QmUjUTXCckfVQqQRm1TxQHq45vZyWPpLCVDXaEk8b8TRYP\"]},\"ERC20/access/IAccessControl.sol\":{\"keccak256\":\"0x334dbfcb5b0ef61686f14ccf0cabf41666c46f2445f1a0525d15c3806b84b10a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd7910d477d71898c503bec4a5a9126e2a5aeb6af81a720a8f6871e049c270e\",\"dweb:/ipfs/QmbPtbvLypAY3WFyt9DeUUeR7aeo6iY55KAKocbXvz4F3Q\"]},\"ERC20/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x853b1ef3dbc3ea84031b152f8fe16eb3ebb4b7390e1d22a693fd35e208af18ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54d94188708f9e8cf1e5d2535c70e1107ea7be1f1a6689b71b67919737b5ac58\",\"dweb:/ipfs/Qme7Gnk6xYKTaEkRGGa8DYWp4wqgF66Ysj3GNrcFqAm5F1\"]},\"ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x750e44d21c2a68e37d0a653708ab407fa686a9913954315acb5b8ee62b13ede2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63caf25854fdac2eac3e447b680ed3731a5f91c694060e4f4c740f6dec77515d\",\"dweb:/ipfs/QmS8KSxahitmgbYrsMFmwQwQguRn2Li1bcj9o881N6UEpL\"]},\"ERC20/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"ERC20/utils/Context.sol\":{\"keccak256\":\"0x2e2ac762cc60af55c199a4926f4c360aa00cec4af6dfed7475fc866353ea6c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f72b227c30903022ee8a898b55dacbbcc73d633e10022edcaeea61e4ef312e\",\"dweb:/ipfs/QmedXrqXE7r6Pazs4aBfwDJNPdiw25ovisBiWZ3EACFQFh\"]},\"ERC20/utils/Strings.sol\":{\"keccak256\":\"0xf1d4a1306f61d74dd46dbb85fda4613b4238bd57df381e6768a660b08bfcceab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167cfa4f1dcdc7e263b9ee9761974a1d6e526cc2ef0c05e340c393fae0ad1204\",\"dweb:/ipfs/Qmc91NDjbXBTAb5fjvWY2htcKhjjw2Zgdwq6Z9TRsYMZ6M\"]},\"ERC20/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x071cfd008ed1810ddf23f56bd1ce2f0c3983bc291559067e94618547f579e1f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3235dc4cbf8fe1bde8426a0515c2d19205953cce2bef84e635a74b1b0140250\",\"dweb:/ipfs/QmcLniP23L9VH3rSdoE4YnLosayZELS38z6HJCZQ3Q4Vq2\"]},\"ERC20/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x7e30ce048ac2ce3cc97d725487ed5a82192bb939456f46e0cbe38f1b48644f9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93406f5266094615e2b829d0eb4a3a668c72a3a6562da91a9ea9044cd001dd80\",\"dweb:/ipfs/QmUqT5ZLn5HTvE4Bas9BA5RSCamz4p3KwbvEsNvNJ2taav\"]},\"ERC20/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xb42f52f374372121b2f84f4b26c3e652885e4e9ee0dad6526ce363cde9d8095b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5586e75c4afa8c081e128dc59da45a0a8b26ca4ace8671ee618621b52ae8cc75\",\"dweb:/ipfs/QmUTHNq6guEirh74EB8W2CKp1xE35iQQg6N8U83xfWwoum\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 783,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)778_storage)"
							},
							{
								"astId": 1063,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)1985_storage)"
							},
							{
								"astId": 1338,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 21,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 29,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 31,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 33,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 35,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "MAX_TOKEN_COUNT",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)1985_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)1985_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)778_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)778_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1985_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1984,
										"contract": "ERC20/ERC20.sol:ERC20",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1684_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)778_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 775,
										"contract": "ERC20/ERC20.sol:ERC20",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 777,
										"contract": "ERC20/ERC20.sol:ERC20",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1684_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1679,
										"contract": "ERC20/ERC20.sol:ERC20",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1683,
										"contract": "ERC20/ERC20.sol:ERC20",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x8fccb9a8388849dbe8d29525ec3b8388ec638b92bae22c7bf1c951a2a1ad4a25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://711da5a49b19c44087ccc838e61f46dc2290a88b475787703c3ba3263ffabd55\",\"dweb:/ipfs/QmQ6R2DpSvuEV9DSdU6Lcye2P9i5Vp344kmgAGHvgXsVp9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/access/AccessControl.sol\":{\"keccak256\":\"0x8e1450e8ca0c07441f3a3e5a79f3269059fba944065e68e47243f63f7bc317ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85f64f29ab892ce688a8c9cf428fc3776ca409ce43b94a8fef959dc726cc7f42\",\"dweb:/ipfs/QmPfbetW6n5WGrv3ZEX7YXFjr3bcpnrJJyatCUdt9r9k1V\"]},\"ERC20/access/IAccessControl.sol\":{\"keccak256\":\"0x334dbfcb5b0ef61686f14ccf0cabf41666c46f2445f1a0525d15c3806b84b10a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd7910d477d71898c503bec4a5a9126e2a5aeb6af81a720a8f6871e049c270e\",\"dweb:/ipfs/QmbPtbvLypAY3WFyt9DeUUeR7aeo6iY55KAKocbXvz4F3Q\"]},\"ERC20/utils/Context.sol\":{\"keccak256\":\"0x2e2ac762cc60af55c199a4926f4c360aa00cec4af6dfed7475fc866353ea6c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f72b227c30903022ee8a898b55dacbbcc73d633e10022edcaeea61e4ef312e\",\"dweb:/ipfs/QmedXrqXE7r6Pazs4aBfwDJNPdiw25ovisBiWZ3EACFQFh\"]},\"ERC20/utils/Strings.sol\":{\"keccak256\":\"0xf1d4a1306f61d74dd46dbb85fda4613b4238bd57df381e6768a660b08bfcceab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167cfa4f1dcdc7e263b9ee9761974a1d6e526cc2ef0c05e340c393fae0ad1204\",\"dweb:/ipfs/Qmc91NDjbXBTAb5fjvWY2htcKhjjw2Zgdwq6Z9TRsYMZ6M\"]},\"ERC20/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x071cfd008ed1810ddf23f56bd1ce2f0c3983bc291559067e94618547f579e1f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3235dc4cbf8fe1bde8426a0515c2d19205953cce2bef84e635a74b1b0140250\",\"dweb:/ipfs/QmcLniP23L9VH3rSdoE4YnLosayZELS38z6HJCZQ3Q4Vq2\"]},\"ERC20/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x7e30ce048ac2ce3cc97d725487ed5a82192bb939456f46e0cbe38f1b48644f9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93406f5266094615e2b829d0eb4a3a668c72a3a6562da91a9ea9044cd001dd80\",\"dweb:/ipfs/QmUqT5ZLn5HTvE4Bas9BA5RSCamz4p3KwbvEsNvNJ2taav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 783,
								"contract": "ERC20/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)778_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)778_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)778_storage"
							},
							"t_struct(RoleData)778_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 775,
										"contract": "ERC20/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 777,
										"contract": "ERC20/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/access/AccessControlEnumerable.sol": {
				"AccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {AccessControl} that allows enumerating the members of each role.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Overload {grantRole} to track enumerable memberships"
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Overload {revokeRole} to track enumerable memberships"
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/access/AccessControl.sol\":{\"keccak256\":\"0x8e1450e8ca0c07441f3a3e5a79f3269059fba944065e68e47243f63f7bc317ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85f64f29ab892ce688a8c9cf428fc3776ca409ce43b94a8fef959dc726cc7f42\",\"dweb:/ipfs/QmPfbetW6n5WGrv3ZEX7YXFjr3bcpnrJJyatCUdt9r9k1V\"]},\"ERC20/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0xae929d11d84e49968e28df2e34ebbe3d79694007d0c9c28fd395e2cbcc9b5d30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ff039bc616652cc796f9111305368dbdf29cb0af59478f45e756b3a11d72de\",\"dweb:/ipfs/QmUjUTXCckfVQqQRm1TxQHq45vZyWPpLCVDXaEk8b8TRYP\"]},\"ERC20/access/IAccessControl.sol\":{\"keccak256\":\"0x334dbfcb5b0ef61686f14ccf0cabf41666c46f2445f1a0525d15c3806b84b10a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd7910d477d71898c503bec4a5a9126e2a5aeb6af81a720a8f6871e049c270e\",\"dweb:/ipfs/QmbPtbvLypAY3WFyt9DeUUeR7aeo6iY55KAKocbXvz4F3Q\"]},\"ERC20/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x853b1ef3dbc3ea84031b152f8fe16eb3ebb4b7390e1d22a693fd35e208af18ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54d94188708f9e8cf1e5d2535c70e1107ea7be1f1a6689b71b67919737b5ac58\",\"dweb:/ipfs/Qme7Gnk6xYKTaEkRGGa8DYWp4wqgF66Ysj3GNrcFqAm5F1\"]},\"ERC20/utils/Context.sol\":{\"keccak256\":\"0x2e2ac762cc60af55c199a4926f4c360aa00cec4af6dfed7475fc866353ea6c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f72b227c30903022ee8a898b55dacbbcc73d633e10022edcaeea61e4ef312e\",\"dweb:/ipfs/QmedXrqXE7r6Pazs4aBfwDJNPdiw25ovisBiWZ3EACFQFh\"]},\"ERC20/utils/Strings.sol\":{\"keccak256\":\"0xf1d4a1306f61d74dd46dbb85fda4613b4238bd57df381e6768a660b08bfcceab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167cfa4f1dcdc7e263b9ee9761974a1d6e526cc2ef0c05e340c393fae0ad1204\",\"dweb:/ipfs/Qmc91NDjbXBTAb5fjvWY2htcKhjjw2Zgdwq6Z9TRsYMZ6M\"]},\"ERC20/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x071cfd008ed1810ddf23f56bd1ce2f0c3983bc291559067e94618547f579e1f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3235dc4cbf8fe1bde8426a0515c2d19205953cce2bef84e635a74b1b0140250\",\"dweb:/ipfs/QmcLniP23L9VH3rSdoE4YnLosayZELS38z6HJCZQ3Q4Vq2\"]},\"ERC20/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x7e30ce048ac2ce3cc97d725487ed5a82192bb939456f46e0cbe38f1b48644f9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93406f5266094615e2b829d0eb4a3a668c72a3a6562da91a9ea9044cd001dd80\",\"dweb:/ipfs/QmUqT5ZLn5HTvE4Bas9BA5RSCamz4p3KwbvEsNvNJ2taav\"]},\"ERC20/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xb42f52f374372121b2f84f4b26c3e652885e4e9ee0dad6526ce363cde9d8095b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5586e75c4afa8c081e128dc59da45a0a8b26ca4ace8671ee618621b52ae8cc75\",\"dweb:/ipfs/QmUTHNq6guEirh74EB8W2CKp1xE35iQQg6N8U83xfWwoum\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 783,
								"contract": "ERC20/access/AccessControlEnumerable.sol:AccessControlEnumerable",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)778_storage)"
							},
							{
								"astId": 1063,
								"contract": "ERC20/access/AccessControlEnumerable.sol:AccessControlEnumerable",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)1985_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)1985_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)1985_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)778_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)778_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1985_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1984,
										"contract": "ERC20/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1684_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)778_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 775,
										"contract": "ERC20/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 777,
										"contract": "ERC20/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1684_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1679,
										"contract": "ERC20/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1683,
										"contract": "ERC20/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/access/IAccessControl.sol\":{\"keccak256\":\"0x334dbfcb5b0ef61686f14ccf0cabf41666c46f2445f1a0525d15c3806b84b10a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd7910d477d71898c503bec4a5a9126e2a5aeb6af81a720a8f6871e049c270e\",\"dweb:/ipfs/QmbPtbvLypAY3WFyt9DeUUeR7aeo6iY55KAKocbXvz4F3Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/access/IAccessControlEnumerable.sol": {
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/access/IAccessControl.sol\":{\"keccak256\":\"0x334dbfcb5b0ef61686f14ccf0cabf41666c46f2445f1a0525d15c3806b84b10a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd7910d477d71898c503bec4a5a9126e2a5aeb6af81a720a8f6871e049c270e\",\"dweb:/ipfs/QmbPtbvLypAY3WFyt9DeUUeR7aeo6iY55KAKocbXvz4F3Q\"]},\"ERC20/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x853b1ef3dbc3ea84031b152f8fe16eb3ebb4b7390e1d22a693fd35e208af18ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54d94188708f9e8cf1e5d2535c70e1107ea7be1f1a6689b71b67919737b5ac58\",\"dweb:/ipfs/Qme7Gnk6xYKTaEkRGGa8DYWp4wqgF66Ysj3GNrcFqAm5F1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x8fccb9a8388849dbe8d29525ec3b8388ec638b92bae22c7bf1c951a2a1ad4a25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://711da5a49b19c44087ccc838e61f46dc2290a88b475787703c3ba3263ffabd55\",\"dweb:/ipfs/QmQ6R2DpSvuEV9DSdU6Lcye2P9i5Vp344kmgAGHvgXsVp9\"]},\"ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x750e44d21c2a68e37d0a653708ab407fa686a9913954315acb5b8ee62b13ede2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63caf25854fdac2eac3e447b680ed3731a5f91c694060e4f4c740f6dec77515d\",\"dweb:/ipfs/QmS8KSxahitmgbYrsMFmwQwQguRn2Li1bcj9o881N6UEpL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"ERC20/utils/Context.sol\":{\"keccak256\":\"0x2e2ac762cc60af55c199a4926f4c360aa00cec4af6dfed7475fc866353ea6c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f72b227c30903022ee8a898b55dacbbcc73d633e10022edcaeea61e4ef312e\",\"dweb:/ipfs/QmedXrqXE7r6Pazs4aBfwDJNPdiw25ovisBiWZ3EACFQFh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1338,
								"contract": "ERC20/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/utils/Context.sol\":{\"keccak256\":\"0x2e2ac762cc60af55c199a4926f4c360aa00cec4af6dfed7475fc866353ea6c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98f72b227c30903022ee8a898b55dacbbcc73d633e10022edcaeea61e4ef312e\",\"dweb:/ipfs/QmedXrqXE7r6Pazs4aBfwDJNPdiw25ovisBiWZ3EACFQFh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/utils/Strings.sol\":100:2049  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/utils/Strings.sol\":100:2049  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220546016763714902ec4d1a654ddb5083cae2ba6a8f1cc15f521f2a20686e6bd7464736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220546016763714902ec4d1a654ddb5083cae2ba6a8f1cc15f521f2a20686e6bd7464736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH1 0x16 PUSH23 0x3714902EC4D1A654DDB5083CAE2BA6A8F1CC15F521F2A2 MOD DUP7 0xE6 0xBD PUSH21 0x64736F6C634300080E003300000000000000000000 ",
							"sourceMap": "100:1949:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220546016763714902ec4d1a654ddb5083cae2ba6a8f1cc15f521f2a20686e6bd7464736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH1 0x16 PUSH23 0x3714902EC4D1A654DDB5083CAE2BA6A8F1CC15F521F2A2 MOD DUP7 0xE6 0xBD PUSH21 0x64736F6C634300080E003300000000000000000000 ",
							"sourceMap": "100:1949:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 100,
									"end": 2049,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220546016763714902ec4d1a654ddb5083cae2ba6a8f1cc15f521f2a20686e6bd7464736f6c634300080e0033",
									".code": [
										{
											"begin": 100,
											"end": 2049,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 100,
											"end": 2049,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"ERC20/ERC20.sol",
								"ERC20/IERC20.sol",
								"ERC20/access/AccessControl.sol",
								"ERC20/access/AccessControlEnumerable.sol",
								"ERC20/access/IAccessControl.sol",
								"ERC20/access/IAccessControlEnumerable.sol",
								"ERC20/extensions/IERC20Metadata.sol",
								"ERC20/security/Pausable.sol",
								"ERC20/utils/Context.sol",
								"ERC20/utils/Strings.sol",
								"ERC20/utils/introspection/ERC165.sol",
								"ERC20/utils/introspection/IERC165.sol",
								"ERC20/utils/structs/EnumerableSet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/utils/Strings.sol\":{\"keccak256\":\"0xf1d4a1306f61d74dd46dbb85fda4613b4238bd57df381e6768a660b08bfcceab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167cfa4f1dcdc7e263b9ee9761974a1d6e526cc2ef0c05e340c393fae0ad1204\",\"dweb:/ipfs/Qmc91NDjbXBTAb5fjvWY2htcKhjjw2Zgdwq6Z9TRsYMZ6M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x071cfd008ed1810ddf23f56bd1ce2f0c3983bc291559067e94618547f579e1f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3235dc4cbf8fe1bde8426a0515c2d19205953cce2bef84e635a74b1b0140250\",\"dweb:/ipfs/QmcLniP23L9VH3rSdoE4YnLosayZELS38z6HJCZQ3Q4Vq2\"]},\"ERC20/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x7e30ce048ac2ce3cc97d725487ed5a82192bb939456f46e0cbe38f1b48644f9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93406f5266094615e2b829d0eb4a3a668c72a3a6562da91a9ea9044cd001dd80\",\"dweb:/ipfs/QmUqT5ZLn5HTvE4Bas9BA5RSCamz4p3KwbvEsNvNJ2taav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x7e30ce048ac2ce3cc97d725487ed5a82192bb939456f46e0cbe38f1b48644f9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93406f5266094615e2b829d0eb4a3a668c72a3a6562da91a9ea9044cd001dd80\",\"dweb:/ipfs/QmUqT5ZLn5HTvE4Bas9BA5RSCamz4p3KwbvEsNvNJ2taav\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/utils/structs/EnumerableSet.sol\":773:12468  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/utils/structs/EnumerableSet.sol\":773:12468  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220805d27aa59f5d56631ecfd4d125220e5efff7e0e33e35b80e3f23acc50b7df5864736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220805d27aa59f5d56631ecfd4d125220e5efff7e0e33e35b80e3f23acc50b7df5864736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x5D 0x27 0xAA MSIZE CREATE2 0xD5 PUSH7 0x31ECFD4D125220 0xE5 0xEF SELFDESTRUCT PUSH31 0xE33E35B80E3F23ACC50B7DF5864736F6C634300080E003300000000000000 ",
							"sourceMap": "773:11695:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220805d27aa59f5d56631ecfd4d125220e5efff7e0e33e35b80e3f23acc50b7df5864736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x5D 0x27 0xAA MSIZE CREATE2 0xD5 PUSH7 0x31ECFD4D125220 0xE5 0xEF SELFDESTRUCT PUSH31 0xE33E35B80E3F23ACC50B7DF5864736F6C634300080E003300000000000000 ",
							"sourceMap": "773:11695:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 773,
									"end": 12468,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220805d27aa59f5d56631ecfd4d125220e5efff7e0e33e35b80e3f23acc50b7df5864736f6c634300080e0033",
									".code": [
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 773,
											"end": 12468,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"ERC20/ERC20.sol",
								"ERC20/IERC20.sol",
								"ERC20/access/AccessControl.sol",
								"ERC20/access/AccessControlEnumerable.sol",
								"ERC20/access/IAccessControl.sol",
								"ERC20/access/IAccessControlEnumerable.sol",
								"ERC20/extensions/IERC20Metadata.sol",
								"ERC20/security/Pausable.sol",
								"ERC20/utils/Context.sol",
								"ERC20/utils/Strings.sol",
								"ERC20/utils/introspection/ERC165.sol",
								"ERC20/utils/introspection/IERC165.sol",
								"ERC20/utils/structs/EnumerableSet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xb42f52f374372121b2f84f4b26c3e652885e4e9ee0dad6526ce363cde9d8095b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5586e75c4afa8c081e128dc59da45a0a8b26ca4ace8671ee618621b52ae8cc75\",\"dweb:/ipfs/QmUTHNq6guEirh74EB8W2CKp1xE35iQQg6N8U83xfWwoum\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/ERC20.sol",
					"exportedSymbols": {
						"AccessControl": [
							1044
						],
						"AccessControlEnumerable": [
							1205
						],
						"Context": [
							1434
						],
						"ERC165": [
							1661
						],
						"ERC20": [
							680
						],
						"EnumerableSet": [
							2272
						],
						"IAccessControl": [
							1270
						],
						"IAccessControlEnumerable": [
							1295
						],
						"IERC165": [
							1673
						],
						"IERC20": [
							758
						],
						"IERC20Metadata": [
							1320
						],
						"Pausable": [
							1412
						],
						"Strings": [
							1637
						]
					},
					"id": 681,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 681,
							"sourceUnit": 759,
							"src": "62:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 681,
							"sourceUnit": 1321,
							"src": "86:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/access/AccessControlEnumerable.sol",
							"file": "./access/AccessControlEnumerable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 681,
							"sourceUnit": 1206,
							"src": "129:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/utils/Context.sol",
							"file": "./utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 681,
							"sourceUnit": 1435,
							"src": "177:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/security/Pausable.sol",
							"file": "./security/Pausable.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 681,
							"sourceUnit": 1413,
							"src": "208:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1434,
										"src": "1461:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:7:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "AccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1205,
										"src": "1470:23:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1470:23:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 758,
										"src": "1495:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "1495:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1320,
										"src": "1503:14:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1503:14:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1412,
										"src": "1519:8:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "1519:8:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 7,
								"nodeType": "StructuredDocumentation",
								"src": "245:1196:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 680,
							"linearizedBaseContracts": [
								680,
								1412,
								1320,
								758,
								1205,
								1044,
								1661,
								1673,
								1295,
								1270,
								1434
							],
							"name": "ERC20",
							"nameLocation": "1452:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1571:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 680,
									"src": "1535:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1535:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 19,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1554:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1645:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 680,
									"src": "1589:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 26,
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1597:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1589:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 25,
											"keyType": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1616:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1608:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1627:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1681:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 680,
									"src": "1665:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1665:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1717:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 680,
									"src": "1702:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 30,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1702:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1744:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 680,
									"src": "1729:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1729:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d0bbb0d7",
									"id": 35,
									"mutability": "mutable",
									"name": "MAX_TOKEN_COUNT",
									"nameLocation": "1773:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 680,
									"src": "1758:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1758:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "2165:115:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2176:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2184:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2176:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2176:13:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2200:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2200:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2239:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 53,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "2259:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2259:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 51,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1204
														],
														"referencedDeclaration": 1204,
														"src": "2228:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "2228:44:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2135:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2121:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 37,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2142:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 39,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2142:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:44:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2165:0:0"
									},
									"scope": 680,
									"src": "2109:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "2419:31:0",
										"statements": [
											{
												"expression": {
													"id": 65,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "2437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 64,
												"id": 66,
												"nodeType": "Return",
												"src": "2430:12:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2288:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2359:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 61,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2386:8:0"
									},
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2404:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 62,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2404:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:15:0"
									},
									"scope": 680,
									"src": "2350:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "2640:33:0",
										"statements": [
											{
												"expression": {
													"id": 75,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "2651:14:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2458:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2578:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 71,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2607:8:0"
									},
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2584:2:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "2625:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2625:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2624:15:0"
									},
									"scope": 680,
									"src": "2569:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1319
									],
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3377:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "38",
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3395:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8_by_1",
														"typeString": "int_const 8"
													},
													"value": "8"
												},
												"functionReturnParameters": 84,
												"id": 86,
												"nodeType": "Return",
												"src": "3388:8:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "2681:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3321:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 81,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3352:8:0"
									},
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3329:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3370:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 82,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3370:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:7:0"
									},
									"scope": 680,
									"src": "3312:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "3467:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 95,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "3494:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 96,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "3514:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3514:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 94,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "3486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3486:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d75737420686176652061646d696e20726f6c65",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3529:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															},
															"value": "ERC20: must have admin role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3478:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "3478:81:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 102,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "3570:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3570:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "3570:8:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 92,
												"id": 106,
												"nodeType": "Return",
												"src": "3589:11:0"
											}
										]
									},
									"functionSelector": "5394a892",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pausedOptions",
									"nameLocation": "3421:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3434:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3461:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 90,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:6:0"
									},
									"scope": 680,
									"src": "3412:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3673:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 115,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "3700:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 116,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "3720:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3720:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 114,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "3692:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3692:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d75737420686176652061646d696e20726f6c65",
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3735:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															},
															"value": "ERC20: must have admin role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3684:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "3684:81:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 122,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3776:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3776:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "3776:10:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3804:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "3797:11:0"
											}
										]
									},
									"functionSelector": "c6e858fe",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unPausedOptions",
									"nameLocation": "3625:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3640:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3667:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:6:0"
									},
									"scope": 680,
									"src": "3616:200:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										689
									],
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "3949:38:0",
										"statements": [
											{
												"expression": {
													"id": 135,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "3967:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 134,
												"id": 136,
												"nodeType": "Return",
												"src": "3960:19:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3822:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3888:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3922:8:0"
									},
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3899:2:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3940:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:9:0"
									},
									"scope": 680,
									"src": "3879:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4133:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 147,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "4151:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 149,
													"indexExpression": {
														"id": 148,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4151:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 150,
												"nodeType": "Return",
												"src": "4144:25:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "3995:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4059:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 143,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4106:8:0"
									},
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4077:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4069:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4068:17:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4124:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:9:0"
									},
									"scope": 680,
									"src": "4050:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4248:45:0",
										"statements": [
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "MAX_TOKEN_COUNT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "4259:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "maxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "4277:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4259:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "4259:26:0"
											}
										]
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_maxTokenCountSet",
									"nameLocation": "4194:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "maxValue",
												"nameLocation": "4221:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4212:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:19:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4248:0:0"
									},
									"scope": 680,
									"src": "4185:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										707
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "4596:223:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 174,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "4629:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 175,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "4642:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4642:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4629:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2063616c6c657220616e6420726563697069656e74206d75737420626520646966666572656e7420616464726573732e",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4669:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f",
																"typeString": "literal_string \"ERC20: caller and recipient must be different address.\""
															},
															"value": "ERC20: caller and recipient must be different address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f",
																"typeString": "literal_string \"ERC20: caller and recipient must be different address.\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4607:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "4607:129:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 182,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "4757:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4757:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 184,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4771:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4782:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 181,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "4747:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4747:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 172,
												"id": 189,
												"nodeType": "Return",
												"src": "4800:11:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4299:199:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4513:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4572:8:0"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4530:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4549:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4521:35:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4590:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:6:0"
									},
									"scope": 680,
									"src": "4504:315:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										717
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "4978:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 202,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "4996:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 204,
														"indexExpression": {
															"id": 203,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5008:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4996:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 206,
													"indexExpression": {
														"id": 205,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "5015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4996:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 201,
												"id": 207,
												"nodeType": "Return",
												"src": "4989:34:0"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4825:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4889:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4951:8:0"
									},
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4922:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4914:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:32:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:9:0"
									},
									"scope": 680,
									"src": "4880:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										727
									],
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "5267:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 221,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "5287:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5287:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 223,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "5301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "5310:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 220,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "5278:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5278:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "5278:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 219,
												"id": 228,
												"nodeType": "Return",
												"src": "5328:11:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5039:133:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5187:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 216,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5243:8:0"
									},
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "5195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5220:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "5212:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5194:33:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "5261:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:6:0"
									},
									"scope": 680,
									"src": "5178:169:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										739
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "5975:451:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "5994:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 245,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "6007:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6007:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5994:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2063616c6c657220616e6420726563697069656e74206d75737420626520646966666572656e7420616464726573732e",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6021:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f",
																"typeString": "literal_string \"ERC20: caller and recipient must be different address.\""
															},
															"value": "ERC20: caller and recipient must be different address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3651eecc5390890ae21e99c87edf1e93685961f4a20bb37c235816ed60ccef8f",
																"typeString": "literal_string \"ERC20: caller and recipient must be different address.\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "5986:92:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 252,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6109:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6091:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6091:36:0"
											},
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6148:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "6140:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6140:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 259,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "6167:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 261,
														"indexExpression": {
															"id": 260,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6167:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 264,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 262,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "6187:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6187:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6167:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6140:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 267,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "6219:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 268,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "6239:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6219:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6247:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6211:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "6211:79:0"
											},
											{
												"id": 282,
												"nodeType": "UncheckedBlock",
												"src": "6301:94:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 274,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "6335:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 275,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "6343:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6343:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 277,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "6357:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 278,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "6376:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6357:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 273,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "6326:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6326:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 281,
														"nodeType": "ExpressionStatement",
														"src": "6326:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 242,
												"id": 284,
												"nodeType": "Return",
												"src": "6407:11:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "5355:468:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5838:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5951:8:0"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5869:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5861:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5894:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5886:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5850:85:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5969:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5968:6:0"
									},
									"scope": 680,
									"src": "5829:597:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "6929:213:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 298,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "6956:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 299,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "6976:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6976:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 297,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "6948:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6948:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d75737420686176652061646d696e20726f6c65",
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6991:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															},
															"value": "ERC20: must have admin role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6940:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "6940:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 306,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "7041:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7041:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 309,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "7064:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 312,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 310,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "7076:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7076:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7064:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 314,
																"indexExpression": {
																	"id": 313,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "7090:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7064:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 315,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7101:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7064:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "7032:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7032:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "7032:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 295,
												"id": 320,
												"nodeType": "Return",
												"src": "7123:11:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "6434:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6844:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6870:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "6862:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6887:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "6879:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6861:37:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "6923:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6923:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6922:6:0"
									},
									"scope": 680,
									"src": "6835:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7744:406:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "7771:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 335,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "7791:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7791:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 333,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "7763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7763:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d75737420686176652061646d696e20726f6c65",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7806:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															},
															"value": "ERC20: must have admin role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7755:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "7755:81:0"
											},
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7855:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "7847:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7847:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 343,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "7874:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 346,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 344,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "7886:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7886:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7874:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"id": 347,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "7900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7874:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7847:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 351,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "7927:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 352,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "7947:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7927:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7964:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7919:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7919:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "7919:85:0"
											},
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "8015:104:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 358,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "8049:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8049:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "8063:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "8072:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "8091:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8072:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 357,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "8040:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8040:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "8040:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 331,
												"id": 368,
												"nodeType": "Return",
												"src": "8131:11:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "7150:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7654:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7680:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7672:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7697:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7689:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7671:42:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "7738:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7737:6:0"
									},
									"scope": 680,
									"src": "7645:505:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "8762:687:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8781:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 381,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "8782:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8782:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066756e6374696f6e206973207061757365642062792061646d696e2e",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8792:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c",
																"typeString": "literal_string \"ERC20: transfer function is paused by admin.\""
															},
															"value": "ERC20: transfer function is paused by admin."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71d0ec195af2248375cc5e92f95cb9901470846092b0c92da9c95f2d8770b61c",
																"typeString": "literal_string \"ERC20: transfer function is paused by admin.\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8773:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "8773:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "8858:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8876:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8868:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 389,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8868:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8868:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8858:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8880:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8850:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "8850:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 398,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "8939:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8960:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8952:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8952:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8952:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8939:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8964:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8931:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "8931:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "9034:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9042:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9053:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "9013:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9013:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "9013:47:0"
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "9081:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "9073:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"baseExpression": {
														"id": 415,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "9097:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 417,
													"indexExpression": {
														"id": 416,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "9107:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9097:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9073:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 420,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "9133:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 421,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "9150:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9133:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9158:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9125:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "9125:74:0"
											},
											{
												"id": 434,
												"nodeType": "UncheckedBlock",
												"src": "9210:79:0",
												"statements": [
													{
														"expression": {
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 426,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "9235:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 428,
																"indexExpression": {
																	"id": 427,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "9245:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9235:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 429,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9255:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 430,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "9271:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9255:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9235:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 433,
														"nodeType": "ExpressionStatement",
														"src": "9235:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 435,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "9299:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 437,
														"indexExpression": {
															"id": 436,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9309:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9299:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 438,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "9323:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9299:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "9299:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 442,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "9356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9364:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "9347:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "EmitStatement",
												"src": "9342:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "9415:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "9423:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "9434:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "9395:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9395:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "9395:46:0"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "8158:476:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8649:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8677:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "8669:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8702:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "8694:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8730:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "8722:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8658:86:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8762:0:0"
									},
									"scope": 680,
									"src": "8640:809:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "9801:552:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 464,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "9828:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 465,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "9848:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9848:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 463,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "9820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9820:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d75737420686176652061646d696e20726f6c65",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9863:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															},
															"value": "ERC20: must have admin role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a925450abf7f01fbe3a6c4842ad06558162aadd0e1d35b9d12e0ac6598be3e11",
																"typeString": "literal_string \"ERC20: must have admin role\""
															}
														],
														"id": 462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9812:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9812:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "9812:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "9912:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9931:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9923:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 473,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9923:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9923:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9912:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9935:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9904:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "9904:65:0"
											},
											{
												"assignments": [
													482
												],
												"declarations": [
													{
														"constant": false,
														"id": 482,
														"mutability": "mutable",
														"name": "tokenCount",
														"nameLocation": "9988:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "9980:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 483,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "10001:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 484,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "10016:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10001:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9980:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 488,
																"name": "tokenCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "10042:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 489,
																"name": "MAX_TOKEN_COUNT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "10056:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10042:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "544f4b454e204d6178206c696d697420657869737421",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10072:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f7ef39f45e41a5c5cf21ff782e7fb4b1c1440e9dbdf1ce2fd5eef548ee7a718",
																"typeString": "literal_string \"TOKEN Max limit exist!\""
															},
															"value": "TOKEN Max limit exist!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f7ef39f45e41a5c5cf21ff782e7fb4b1c1440e9dbdf1ce2fd5eef548ee7a718",
																"typeString": "literal_string \"TOKEN Max limit exist!\""
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10033:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10033:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10137:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10129:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 495,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10129:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10129:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "10141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "10150:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "10108:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10108:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "10108:49:0"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "10170:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 504,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "10186:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10170:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "10170:22:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 507,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "10203:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 508,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "10213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10203:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "10225:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10203:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "10203:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10264:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10256:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10256:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10256:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "10268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "10277:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "10247:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "EmitStatement",
												"src": "10242:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10325:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10317:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 523,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10317:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10317:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "10329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "10338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "10297:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10297:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "10297:48:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "9457:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9745:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9759:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "9751:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9776:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "9768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9750:33:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9801:0:0"
									},
									"scope": 680,
									"src": "9736:617:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "10751:612:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "10770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10789:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10781:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 542,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10781:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10781:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10770:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10793:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10762:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "10762:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "10848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 552,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "10859:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10859:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10848:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2063616c6c657220616e642061646472657373206d7573742062652073616d652e",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10873:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8af45bdcf55c79e7c02e7faafadf26641498608ceeb705590e29350992e996d",
																"typeString": "literal_string \"ERC20: caller and address must be same.\""
															},
															"value": "ERC20: caller and address must be same."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8af45bdcf55c79e7c02e7faafadf26641498608ceeb705590e29350992e996d",
																"typeString": "literal_string \"ERC20: caller and address must be same.\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "10840:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "10949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10958:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 560,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10958:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10958:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "10970:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "10928:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10928:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "10928:49:0"
											},
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10998:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "10990:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 567,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"baseExpression": {
														"id": 569,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "11015:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 571,
													"indexExpression": {
														"id": 570,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "11025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11015:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10990:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "11052:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 575,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "11070:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11052:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11078:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11044:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "11044:71:0"
											},
											{
												"id": 588,
												"nodeType": "UncheckedBlock",
												"src": "11126:81:0",
												"statements": [
													{
														"expression": {
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 580,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "11151:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"id": 581,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "11161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11151:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 583,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "11172:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 584,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "11189:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11172:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11151:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 587,
														"nodeType": "ExpressionStatement",
														"src": "11151:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "11217:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 590,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "11233:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11217:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "11217:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 594,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "11266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11283:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 595,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11275:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11275:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "11287:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "11257:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11257:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "11252:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 603,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "11327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11344:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11336:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 604,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11336:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11336:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "11348:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "11307:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11307:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "11307:48:0"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "10361:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10695:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "10701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10726:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "10718:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10700:33:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10751:0:0"
									},
									"scope": 680,
									"src": "10686:677:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "11918:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "11937:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 624,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11937:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11958:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11929:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "11929:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 633,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "12016:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12027:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 634,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12027:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12027:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12016:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12039:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12008:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "12008:68:0"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 642,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "12089:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 645,
															"indexExpression": {
																"id": 643,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "12101:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12089:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 646,
														"indexExpression": {
															"id": 644,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "12108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12089:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "12119:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12089:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "12089:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "12150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "12157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "12166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "12141:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12141:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "EmitStatement",
												"src": "12136:37:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "11371:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11810:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11837:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "11829:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11861:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "11853:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11887:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "11879:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11818:82:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11918:0:0"
									},
									"scope": 680,
									"src": "11801:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "12904:2:0",
										"statements": []
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "12189:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12790:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12829:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "12821:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12852:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "12844:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12873:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "12865:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12810:76:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12904:0:0"
									},
									"scope": 680,
									"src": "12781:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "13632:2:0",
										"statements": []
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "12914:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13519:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13557:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "13549:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13580:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "13572:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13601:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "13593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13538:76:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13632:0:0"
									},
									"scope": 680,
									"src": "13510:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 681,
							"src": "1443:12196:0",
							"usedErrors": []
						}
					],
					"src": "35:13606:0"
				},
				"id": 0
			},
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							758
						]
					},
					"id": 759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 682,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 683,
								"nodeType": "StructuredDocumentation",
								"src": "62:72:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 758,
							"linearizedBaseContracts": [
								758
							],
							"name": "IERC20",
							"nameLocation": "146:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "160:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "243:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:1"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "280:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:9:1"
									},
									"scope": 758,
									"src": "234:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "297:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "386:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "404:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "396:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:17:1"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "436:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:9:1"
									},
									"scope": 758,
									"src": "377:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "453:215:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "683:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "700:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "692:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "719:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "711:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:35:1"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "745:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:6:1"
									},
									"scope": 758,
									"src": "674:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "759:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1044:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1062:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1054:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1077:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:32:1"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1109:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:1"
									},
									"scope": 758,
									"src": "1035:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "1126:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1796:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1812:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1804:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1829:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1821:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:33:1"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:6:1"
									},
									"scope": 758,
									"src": "1787:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "1869:304:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2188:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2219:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2211:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2244:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2236:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2272:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2264:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:85:1"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2304:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 736,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:1"
									},
									"scope": 758,
									"src": "2179:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "2322:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 748,
									"name": "Transfer",
									"nameLocation": "2497:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2522:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2506:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2544:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2528:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2556:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2548:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:57:1"
									},
									"src": "2491:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "2573:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 757,
									"name": "Approval",
									"nameLocation": "2736:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2745:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2784:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2768:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2801:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2793:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2744:63:1"
									},
									"src": "2730:78:1"
								}
							],
							"scope": 759,
							"src": "136:2675:1",
							"usedErrors": []
						}
					],
					"src": "35:2778:1"
				},
				"id": 1
			},
			"ERC20/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "ERC20/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							1044
						],
						"Context": [
							1434
						],
						"ERC165": [
							1661
						],
						"IAccessControl": [
							1270
						],
						"IERC165": [
							1673
						],
						"Strings": [
							1637
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "ERC20/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1271,
							"src": "62:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1435,
							"src": "94:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1638,
							"src": "126:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1662,
							"src": "158:43:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 766,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1434,
										"src": "1813:7:2"
									},
									"id": 767,
									"nodeType": "InheritanceSpecifier",
									"src": "1813:7:2"
								},
								{
									"baseName": {
										"id": 768,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1270,
										"src": "1822:14:2"
									},
									"id": 769,
									"nodeType": "InheritanceSpecifier",
									"src": "1822:14:2"
								},
								{
									"baseName": {
										"id": 770,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1661,
										"src": "1838:6:2"
									},
									"id": 771,
									"nodeType": "InheritanceSpecifier",
									"src": "1838:6:2"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 765,
								"nodeType": "StructuredDocumentation",
								"src": "205:1571:2",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044,
								1661,
								1673,
								1270,
								1434
							],
							"name": "AccessControl",
							"nameLocation": "1796:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 778,
									"members": [
										{
											"constant": false,
											"id": 775,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1904:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 778,
											"src": "1879:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 774,
												"keyType": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1879:24:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 777,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1930:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 778,
											"src": "1922:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 776,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1922:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1859:8:2",
									"nodeType": "StructDefinition",
									"scope": 1044,
									"src": "1852:95:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 783,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "1992:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "1955:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$778_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 782,
										"keyType": {
											"id": 779,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1963:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1955:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$778_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 781,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 780,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 778,
												"src": "1974:8:2"
											},
											"referencedDeclaration": 778,
											"src": "1974:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$778_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 786,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2031:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "2007:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 784,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2007:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 785,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2052:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "2487:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "2509:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 793,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "2515:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2515:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 791,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2498:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2498:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "2498:30:2"
											},
											{
												"id": 797,
												"nodeType": "PlaceholderStatement",
												"src": "2539:1:2"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "2065:384:2",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 799,
									"name": "onlyRole",
									"nameLocation": "2464:8:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2481:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "2473:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 788,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:14:2"
									},
									"src": "2455:93:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1660
									],
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "2711:113:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 808,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "2729:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 810,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "2749:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1270_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1270_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 809,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2744:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1270",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2744:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2729:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 816,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2804:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 814,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2780:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$1044_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1660,
															"src": "2780:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2780:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2729:87:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 807,
												"id": 819,
												"nodeType": "Return",
												"src": "2722:94:2"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "2556:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2629:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 804,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2687:8:2"
									},
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2654:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2647:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 801,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2647:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2646:20:2"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2705:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:2"
									},
									"scope": 1044,
									"src": "2620:204:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1245
									],
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "3000:55:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 832,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "3018:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$778_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 834,
															"indexExpression": {
																"id": 833,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "3025:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3018:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$778_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 775,
														"src": "3018:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 837,
													"indexExpression": {
														"id": 836,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "3039:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3018:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 831,
												"id": 838,
												"nodeType": "Return",
												"src": "3011:36:2"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "2832:78:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2925:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 828,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2976:8:2"
									},
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2941:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2933:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 823,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2955:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2947:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2932:31:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "2994:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2994:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:6:2"
									},
									"scope": 1044,
									"src": "2916:139:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "3410:432:2",
										"statements": [
											{
												"condition": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3425:23:2",
													"subExpression": {
														"arguments": [
															{
																"id": 849,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "3434:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 850,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "3440:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 848,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "3426:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3426:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "3421:414:2",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "3450:385:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 858,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3562:25:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 863,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 845,
																										"src": "3642:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 862,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3634:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 861,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "3634:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 864,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3634:16:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 865,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3652:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 859,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1637,
																								"src": "3614:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1637_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 860,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1636,
																							"src": "3614:19:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3614:41:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 867,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3682:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 872,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 843,
																										"src": "3756:4:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 871,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3748:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 870,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "3748:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 873,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3748:13:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 874,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3763:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 868,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1637,
																								"src": "3728:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1637_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 869,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1636,
																							"src": "3728:19:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 875,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3728:38:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 856,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3519:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 857,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3519:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3519:270:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3490:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 854,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3490:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3490:318:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 853,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3465:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3465:358:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "3465:358:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "3063:276:2",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3354:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3373:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3365:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 842,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3387:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3379:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3379:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:31:2"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3410:0:2"
									},
									"scope": 1044,
									"src": "3345:497:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1253
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "4106:48:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 892,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "4124:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$778_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 894,
														"indexExpression": {
															"id": 893,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "4131:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4124:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$778_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 777,
													"src": "4124:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 891,
												"id": 896,
												"nodeType": "Return",
												"src": "4117:29:2"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "3850:175:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4040:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 888,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4079:8:2"
									},
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4061:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "4053:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4052:14:2"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "4097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 889,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4096:9:2"
									},
									"scope": 1044,
									"src": "4031:123:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "4519:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 913,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "4541:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 914,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "4547:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 912,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "4530:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4530:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "4530:25:2"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "4162:248:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 908,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "4512:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 907,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "4499:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4499:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 910,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 906,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "4490:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4490:28:2"
										}
									],
									"name": "grantRole",
									"nameLocation": "4425:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 905,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4481:8:2"
									},
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4443:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4435:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 900,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4457:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4449:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4434:31:2"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4519:0:2"
									},
									"scope": 1044,
									"src": "4416:147:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "4912:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 934,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 932,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "4923:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4923:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "4923:26:2"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "4571:231:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 928,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4905:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 927,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "4892:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 930,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 926,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "4883:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4883:28:2"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4817:10:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 925,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4874:8:2"
									},
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4836:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "4828:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4850:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "4842:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4827:31:2"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4912:0:2"
									},
									"scope": 1044,
									"src": "4808:149:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "6421:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "6443:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 948,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "6449:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 946,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "6432:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6432:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "6432:25:2"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "5702:645:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6362:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6381:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "6373:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 940,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6395:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "6387:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6387:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6372:31:2"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:2"
									},
									"scope": 1044,
									"src": "6353:112:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "6670:178:2",
										"statements": [
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6689:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "6681:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 960,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6681:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [
														{
															"id": 963,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6722:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 962,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "6709:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6709:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6681:46:2"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 966,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "6738:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$778_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 968,
															"indexExpression": {
																"id": 967,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "6745:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6738:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$778_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 777,
														"src": "6738:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 970,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "6763:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6738:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "6738:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 974,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6805:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 975,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "6811:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 976,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "6830:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 973,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "6788:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "EmitStatement",
												"src": "6783:57:2"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "6473:118:2",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6606:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6628:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "6620:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 954,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6642:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "6634:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 956,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6619:33:2"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:2"
									},
									"scope": 1044,
									"src": "6597:251:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "7045:170:2",
										"statements": [
											{
												"condition": {
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7060:23:2",
													"subExpression": {
														"arguments": [
															{
																"id": 989,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "7069:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 990,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "7075:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 988,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7061:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7061:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "7056:152:2",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "7085:123:2",
													"statements": [
														{
															"expression": {
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 993,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "7100:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$778_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 995,
																			"indexExpression": {
																				"id": 994,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "7107:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7100:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$778_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 775,
																		"src": "7100:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 998,
																	"indexExpression": {
																		"id": 997,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "7121:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7100:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7132:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7100:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "7100:36:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "7168:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1004,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "7174:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1005,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "7183:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7183:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1002,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "7156:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7156:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1008,
															"nodeType": "EmitStatement",
															"src": "7151:45:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "6856:115:2",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6986:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7005:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "6997:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 982,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "7011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6996:31:2"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7045:0:2"
									},
									"scope": 1044,
									"src": "6977:238:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "7416:170:2",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1021,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "7439:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1022,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "7445:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1020,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7431:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7431:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "7427:152:2",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "7455:124:2",
													"statements": [
														{
															"expression": {
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1024,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "7470:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$778_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1026,
																			"indexExpression": {
																				"id": 1025,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "7477:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7470:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$778_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 775,
																		"src": "7470:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1029,
																	"indexExpression": {
																		"id": 1028,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "7491:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7470:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7502:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7470:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1032,
															"nodeType": "ExpressionStatement",
															"src": "7470:37:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1034,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "7539:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1035,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "7545:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1036,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "7554:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7554:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1033,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "7527:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7527:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1039,
															"nodeType": "EmitStatement",
															"src": "7522:45:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "7223:118:2",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7356:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7376:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7368:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7368:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7390:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "7382:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7367:31:2"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7416:0:2"
									},
									"scope": 1044,
									"src": "7347:239:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "1778:5811:2",
							"usedErrors": []
						}
					],
					"src": "35:7556:2"
				},
				"id": 2
			},
			"ERC20/access/AccessControlEnumerable.sol": {
				"ast": {
					"absolutePath": "ERC20/access/AccessControlEnumerable.sol",
					"exportedSymbols": {
						"AccessControl": [
							1044
						],
						"AccessControlEnumerable": [
							1205
						],
						"Context": [
							1434
						],
						"ERC165": [
							1661
						],
						"EnumerableSet": [
							2272
						],
						"IAccessControl": [
							1270
						],
						"IAccessControlEnumerable": [
							1295
						],
						"IERC165": [
							1673
						],
						"Strings": [
							1637
						]
					},
					"id": 1206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "ERC20/access/IAccessControlEnumerable.sol",
							"file": "./IAccessControlEnumerable.sol",
							"id": 1047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1206,
							"sourceUnit": 1296,
							"src": "62:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/access/AccessControl.sol",
							"file": "./AccessControl.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1206,
							"sourceUnit": 1045,
							"src": "104:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/utils/structs/EnumerableSet.sol",
							"file": "../utils/structs/EnumerableSet.sol",
							"id": 1049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1206,
							"sourceUnit": 2273,
							"src": "135:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1051,
										"name": "IAccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "326:24:3"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "326:24:3"
								},
								{
									"baseName": {
										"id": 1053,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "352:13:3"
									},
									"id": 1054,
									"nodeType": "InheritanceSpecifier",
									"src": "352:13:3"
								}
							],
							"canonicalName": "AccessControlEnumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1050,
								"nodeType": "StructuredDocumentation",
								"src": "183:96:3",
								"text": " @dev Extension of {AccessControl} that allows enumerating the members of each role."
							},
							"fullyImplemented": true,
							"id": 1205,
							"linearizedBaseContracts": [
								1205,
								1044,
								1661,
								1673,
								1295,
								1270,
								1434
							],
							"name": "AccessControlEnumerable",
							"nameLocation": "299:23:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1058,
									"libraryName": {
										"id": 1055,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2272,
										"src": "379:13:3"
									},
									"nodeType": "UsingForDirective",
									"src": "373:49:3",
									"typeName": {
										"id": 1057,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1056,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1985,
											"src": "397:24:3"
										},
										"referencedDeclaration": 1985,
										"src": "397:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 1063,
									"mutability": "mutable",
									"name": "_roleMembers",
									"nameLocation": "483:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1205,
									"src": "430:65:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1985_storage_$",
										"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
									},
									"typeName": {
										"id": 1062,
										"keyType": {
											"id": 1059,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "438:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "430:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1985_storage_$",
											"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
										},
										"valueType": {
											"id": 1061,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1060,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1985,
												"src": "449:24:3"
											},
											"referencedDeclaration": 1985,
											"src": "449:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										821
									],
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "659:123:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1072,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "677:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1074,
																		"name": "IAccessControlEnumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "697:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$1295_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$1295_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	],
																	"id": 1073,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "692:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "692:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlEnumerable_$1295",
																	"typeString": "type(contract IAccessControlEnumerable)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "692:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "677:57:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1080,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "762:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1078,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "738:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$1205_$",
																	"typeString": "type(contract super AccessControlEnumerable)"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 821,
															"src": "738:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "738:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "677:97:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1083,
												"nodeType": "Return",
												"src": "670:104:3"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "504:58:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "577:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1068,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "635:8:3"
									},
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "602:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "595:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "595:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:20:3"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "653:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "653:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:6:3"
									},
									"scope": 1205,
									"src": "568:214:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1286
									],
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "1472:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1100,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "1512:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1096,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "1490:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1985_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1098,
															"indexExpression": {
																"id": 1097,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1503:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1490:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1985_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2108,
														"src": "1490:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1985_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1985_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1095,
												"id": 1102,
												"nodeType": "Return",
												"src": "1483:35:3"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "790:585:3",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "1390:13:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1092,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1445:8:3"
									},
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1412:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1404:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1426:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1418:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:29:3"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1463:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:9:3"
									},
									"scope": 1205,
									"src": "1381:145:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "1781:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1113,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "1799:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1985_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1115,
															"indexExpression": {
																"id": 1114,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "1812:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1799:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1985_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "1799:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1985_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1985_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1799:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1118,
												"nodeType": "Return",
												"src": "1792:34:3"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "1534:160:3",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "1709:18:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1754:8:3"
									},
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1736:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:14:3"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1772:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:9:3"
									},
									"scope": 1205,
									"src": "1700:134:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										918,
										1261
									],
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "2031:91:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2058:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1135,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "2064:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1131,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2042:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$1205_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "grantRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "2042:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "2042:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "2106:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1138,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "2083:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1985_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1140,
															"indexExpression": {
																"id": 1139,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "2096:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2083:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1985_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2012,
														"src": "2083:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1985_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1985_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2083:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2083:31:3"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "1842:78:3",
										"text": " @dev Overload {grantRole} to track enumerable memberships"
									},
									"functionSelector": "2f2ff15d",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "1935:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1129,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1127,
												"name": "AccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1044,
												"src": "2000:13:3"
											},
											{
												"id": 1128,
												"name": "IAccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1270,
												"src": "2015:14:3"
											}
										],
										"src": "1991:39:3"
									},
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1953:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1945:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1967:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1959:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:31:3"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2031:0:3"
									},
									"scope": 1205,
									"src": "1926:196:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										938,
										1269
									],
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "2321:183:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1158,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "2340:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1159,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "2351:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2351:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2340:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2063616c6c65722063616e206e6f74207265766f6b65206f776e20616464726573732e",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2365:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923",
																"typeString": "literal_string \"ERC20: caller can not revoke own address.\""
															},
															"value": "ERC20: caller can not revoke own address."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38cd6696d63ee44dfd6b1b0700e3a255b9c19adf3544cf8226c2c341227d3923",
																"typeString": "literal_string \"ERC20: caller can not revoke own address.\""
															}
														],
														"id": 1157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2332:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "2332:77:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1168,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "2437:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1169,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2443:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1165,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2420:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$1205_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "revokeRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 938,
														"src": "2420:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "2420:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1176,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2488:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1172,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "2462:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1985_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1174,
															"indexExpression": {
																"id": 1173,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "2475:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2462:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1985_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2039,
														"src": "2462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1985_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1985_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2462:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "2462:34:3"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "2130:79:3",
										"text": " @dev Overload {revokeRole} to track enumerable memberships"
									},
									"functionSelector": "d547741f",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2224:10:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1155,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1153,
												"name": "AccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1044,
												"src": "2290:13:3"
											},
											{
												"id": 1154,
												"name": "IAccessControl",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1270,
												"src": "2305:14:3"
											}
										],
										"src": "2281:39:3"
									},
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2243:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "2235:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2257:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "2249:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:31:3"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:0:3"
									},
									"scope": 1205,
									"src": "2215:289:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "2986:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "3014:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1193,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "3020:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1189,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2997:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$1205_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_setupRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "2997:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2997:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2997:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "3062:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1196,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "3039:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1985_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1198,
															"indexExpression": {
																"id": 1197,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "3052:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1985_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2012,
														"src": "3039:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1985_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1985_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3039:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "3039:31:3"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "2824:79:3",
										"text": " @dev Overload {_setupRole} to track enumerable memberships"
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "2918:10:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1187,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2977:8:3"
									},
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2937:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2929:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2951:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2943:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:31:3"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2986:0:3"
									},
									"scope": 1205,
									"src": "2909:169:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1206,
							"src": "281:2800:3",
							"usedErrors": []
						}
					],
					"src": "35:3048:3"
				},
				"id": 3
			},
			"ERC20/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "ERC20/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1270
						]
					},
					"id": 1271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1207,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1208,
								"nodeType": "StructuredDocumentation",
								"src": "62:91:4",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1270,
							"linearizedBaseContracts": [
								1270
							],
							"name": "IAccessControl",
							"nameLocation": "165:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "187:299:4",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1217,
									"name": "RoleAdminChanged",
									"nameLocation": "498:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "531:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "515:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "553:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "537:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "588:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "572:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:87:4"
									},
									"src": "492:110:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "610:217:4",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1226,
									"name": "RoleGranted",
									"nameLocation": "839:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "867:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "851:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "889:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "873:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "914:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "898:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:71:4"
									},
									"src": "833:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "930:281:4",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1235,
									"name": "RoleRevoked",
									"nameLocation": "1223:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1251:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1235:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1273:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1257:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1298:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1282:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:71:4"
									},
									"src": "1217:89:4"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "1314:78:4",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1407:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1423:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1415:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1437:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1429:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:31:4"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1469:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:6:4"
									},
									"scope": 1270,
									"src": "1398:77:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "1483:189:4",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1687:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1708:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1700:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1699:14:4"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1737:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:9:4"
									},
									"scope": 1270,
									"src": "1678:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "1754:248:4",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2017:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2035:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2027:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2049:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2041:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:31:4"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:4"
									},
									"scope": 1270,
									"src": "2008:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2075:231:4",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2321:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2340:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2332:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2354:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2346:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:31:4"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:4"
									},
									"scope": 1270,
									"src": "2312:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1271,
							"src": "155:2792:4",
							"usedErrors": []
						}
					],
					"src": "35:2914:4"
				},
				"id": 4
			},
			"ERC20/access/IAccessControlEnumerable.sol": {
				"ast": {
					"absolutePath": "ERC20/access/IAccessControlEnumerable.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1270
						],
						"IAccessControlEnumerable": [
							1295
						]
					},
					"id": 1296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"absolutePath": "ERC20/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 1273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1296,
							"sourceUnit": 1271,
							"src": "62:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1275,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1270,
										"src": "237:14:5"
									},
									"id": 1276,
									"nodeType": "InheritanceSpecifier",
									"src": "237:14:5"
								}
							],
							"canonicalName": "IAccessControlEnumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1274,
								"nodeType": "StructuredDocumentation",
								"src": "96:101:5",
								"text": " @dev External interface of AccessControlEnumerable declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1295,
							"linearizedBaseContracts": [
								1295,
								1270
							],
							"name": "IAccessControlEnumerable",
							"nameLocation": "209:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "259:585:5",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "859:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "881:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "873:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "895:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "887:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:29:5"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "925:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:5"
									},
									"scope": 1295,
									"src": "850:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "942:160:5",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "1117:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1144:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1136:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:14:5"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1173:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:9:5"
									},
									"scope": 1295,
									"src": "1108:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1296,
							"src": "199:986:5",
							"usedErrors": []
						}
					],
					"src": "35:1152:5"
				},
				"id": 5
			},
			"ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							758
						],
						"IERC20Metadata": [
							1320
						]
					},
					"id": 1321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1321,
							"sourceUnit": 759,
							"src": "62:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1300,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 758,
										"src": "239:6:6"
									},
									"id": 1301,
									"nodeType": "InheritanceSpecifier",
									"src": "239:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1299,
								"nodeType": "StructuredDocumentation",
								"src": "89:120:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1320,
							"linearizedBaseContracts": [
								1320,
								758
							],
							"name": "IERC20Metadata",
							"nameLocation": "221:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "253:56:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "324:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:6"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "354:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:15:6"
									},
									"scope": 1320,
									"src": "315:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "377:58:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "450:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:6"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "482:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "482:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:15:6"
									},
									"scope": 1320,
									"src": "441:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "505:67:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "587:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:2:6"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "621:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1316,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "621:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:7:6"
									},
									"scope": 1320,
									"src": "578:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1321,
							"src": "211:420:6",
							"usedErrors": []
						}
					],
					"src": "35:598:6"
				},
				"id": 6
			},
			"ERC20/security/Pausable.sol": {
				"ast": {
					"absolutePath": "ERC20/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1434
						],
						"Pausable": [
							1412
						]
					},
					"id": 1413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "ERC20/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1413,
							"sourceUnit": 1435,
							"src": "58:30:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1325,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1434,
										"src": "560:7:7"
									},
									"id": 1326,
									"nodeType": "InheritanceSpecifier",
									"src": "560:7:7"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1324,
								"nodeType": "StructuredDocumentation",
								"src": "90:439:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1412,
							"linearizedBaseContracts": [
								1412,
								1434
							],
							"name": "Pausable",
							"nameLocation": "548:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "574:73:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1331,
									"name": "Paused",
									"nameLocation": "658:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "673:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "665:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:17:7"
									},
									"src": "652:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "688:70:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1336,
									"name": "Unpaused",
									"nameLocation": "769:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "786:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "778:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:17:7"
									},
									"src": "763:32:7"
								},
								{
									"constant": false,
									"id": 1338,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "814:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1412,
									"src": "801:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1337,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "801:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "914:32:7",
										"statements": [
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1342,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "924:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "934:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "924:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "924:15:7"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "828:67:7",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1347,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:7"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:0:7"
									},
									"scope": 1412,
									"src": "900:46:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "1094:31:7",
										"statements": [
											{
												"expression": {
													"id": 1353,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "1111:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1354,
												"nodeType": "Return",
												"src": "1104:14:7"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "952:84:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1050:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:2:7"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "1088:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1088:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:6:7"
									},
									"scope": 1412,
									"src": "1041:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "1336:66:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1354:9:7",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1360,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "1355:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1355:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1365:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1346:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "1346:38:7"
											},
											{
												"id": 1366,
												"nodeType": "PlaceholderStatement",
												"src": "1394:1:7"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "1131:175:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1368,
									"name": "whenNotPaused",
									"nameLocation": "1320:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1333:2:7"
									},
									"src": "1311:91:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "1602:69:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1372,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "1620:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1620:8:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1630:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1612:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "1612:41:7"
											},
											{
												"id": 1377,
												"nodeType": "PlaceholderStatement",
												"src": "1663:1:7"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "1408:167:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1379,
									"name": "whenPaused",
									"nameLocation": "1589:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:2:7"
									},
									"src": "1580:91:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "1855:66:7",
										"statements": [
											{
												"expression": {
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1385,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1865:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1875:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1865:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "1865:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1390,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "1901:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1901:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1389,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "1894:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1894:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1393,
												"nodeType": "EmitStatement",
												"src": "1889:25:7"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1677:124:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1382,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1368,
												"src": "1841:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1841:13:7"
										}
									],
									"name": "_pause",
									"nameLocation": "1815:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1821:2:7"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1855:0:7"
									},
									"scope": 1412,
									"src": "1806:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "2101:69:7",
										"statements": [
											{
												"expression": {
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1401,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2111:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2121:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2111:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "2111:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1406,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "2150:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2150:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1405,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "2141:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2141:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "EmitStatement",
												"src": "2136:27:7"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "1927:121:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1398,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1379,
												"src": "2090:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2090:10:7"
										}
									],
									"name": "_unpause",
									"nameLocation": "2062:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:2:7"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:0:7"
									},
									"scope": 1412,
									"src": "2053:117:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1413,
							"src": "530:1642:7",
							"usedErrors": []
						}
					],
					"src": "33:2140:7"
				},
				"id": 7
			},
			"ERC20/utils/Context.sol": {
				"ast": {
					"absolutePath": "ERC20/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1434
						]
					},
					"id": 1435,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1415,
								"nodeType": "StructuredDocumentation",
								"src": "62:505:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1434,
							"linearizedBaseContracts": [
								1434
							],
							"name": "Context",
							"nameLocation": "587:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "664:36:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1420,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "682:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "682:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1422,
												"nodeType": "Return",
												"src": "675:17:8"
											}
										]
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "611:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:8"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "655:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:8"
									},
									"scope": 1434,
									"src": "602:98:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "775:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1429,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "793:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "793:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1431,
												"nodeType": "Return",
												"src": "786:15:8"
											}
										]
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "717:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:8"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "759:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:16:8"
									},
									"scope": 1434,
									"src": "708:101:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1435,
							"src": "569:243:8",
							"usedErrors": []
						}
					],
					"src": "35:779:8"
				},
				"id": 8
			},
			"ERC20/utils/Strings.sol": {
				"ast": {
					"absolutePath": "ERC20/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1637
						]
					},
					"id": 1638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1436,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1437,
								"nodeType": "StructuredDocumentation",
								"src": "62:36:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1637,
							"linearizedBaseContracts": [
								1637
							],
							"name": "Strings",
							"nameLocation": "108:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1440,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "148:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1637,
									"src": "123:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1438,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "123:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1439,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "163:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "359:652:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1448,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "565:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "574:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "565:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1454,
												"nodeType": "IfStatement",
												"src": "561:53:9",
												"trueBody": {
													"id": 1453,
													"nodeType": "Block",
													"src": "577:37:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1447,
															"id": 1452,
															"nodeType": "Return",
															"src": "592:10:9"
														}
													]
												}
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "632:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "624:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "624:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"id": 1457,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1443,
													"src": "639:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "624:20:9"
											},
											{
												"assignments": [
													1460
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "663:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "655:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "655:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1461,
												"nodeType": "VariableDeclarationStatement",
												"src": "655:14:9"
											},
											{
												"body": {
													"id": 1472,
													"nodeType": "Block",
													"src": "698:60:9",
													"statements": [
														{
															"expression": {
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "713:8:9",
																"subExpression": {
																	"id": 1465,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "713:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1467,
															"nodeType": "ExpressionStatement",
															"src": "713:8:9"
														},
														{
															"expression": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1468,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "736:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "744:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "736:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "736:10:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1462,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "687:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "695:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "687:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"nodeType": "WhileStatement",
												"src": "680:78:9"
											},
											{
												"assignments": [
													1475
												],
												"declarations": [
													{
														"constant": false,
														"id": 1475,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "781:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1518,
														"src": "768:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1474,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "768:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"arguments": [
														{
															"id": 1478,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "800:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "790:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1476,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "794:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "790:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "768:39:9"
											},
											{
												"body": {
													"id": 1511,
													"nodeType": "Block",
													"src": "837:135:9",
													"statements": [
														{
															"expression": {
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1484,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "852:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "862:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "852:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1487,
															"nodeType": "ExpressionStatement",
															"src": "852:11:9"
														},
														{
															"expression": {
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1488,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "878:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1490,
																	"indexExpression": {
																		"id": 1489,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1460,
																		"src": "885:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "878:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1502,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "908:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1498,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1443,
																									"src": "921:5:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1499,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "929:2:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "921:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1497,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "913:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1496,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "913:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1501,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "913:19:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "908:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "902:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1493,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "902:5:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "902:31:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "895:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1491,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "895:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "895:39:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "878:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1506,
															"nodeType": "ExpressionStatement",
															"src": "878:56:9"
														},
														{
															"expression": {
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1507,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "949:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "958:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "949:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1510,
															"nodeType": "ExpressionStatement",
															"src": "949:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1481,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "825:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "834:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "825:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1512,
												"nodeType": "WhileStatement",
												"src": "818:154:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1515,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "996:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1513,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1447,
												"id": 1517,
												"nodeType": "Return",
												"src": "982:21:9"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "190:92:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "297:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "314:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "306:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:15:9"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "344:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "344:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:15:9"
									},
									"scope": 1637,
									"src": "288:723:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "1195:266:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "1210:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1219:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1210:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1533,
												"nodeType": "IfStatement",
												"src": "1206:56:9",
												"trueBody": {
													"id": 1532,
													"nodeType": "Block",
													"src": "1222:40:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1244:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1526,
															"id": 1531,
															"nodeType": "Return",
															"src": "1237:13:9"
														}
													]
												}
											},
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1280:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1559,
														"src": "1272:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1272:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1537,
												"initialValue": {
													"id": 1536,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1522,
													"src": "1287:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1272:20:9"
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1311:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1559,
														"src": "1303:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1303:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1541,
												"initialValue": {
													"hexValue": "30",
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1320:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1303:18:9"
											},
											{
												"body": {
													"id": 1552,
													"nodeType": "Block",
													"src": "1350:60:9",
													"statements": [
														{
															"expression": {
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1365:8:9",
																"subExpression": {
																	"id": 1545,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "1365:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "1365:8:9"
														},
														{
															"expression": {
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1548,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "1388:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1397:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1388:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "1388:10:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1542,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "1339:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1347:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1339:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "WhileStatement",
												"src": "1332:78:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1555,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "1439:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1556,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "1446:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1554,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1560,
															1636
														],
														"referencedDeclaration": 1636,
														"src": "1427:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1427:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1558,
												"nodeType": "Return",
												"src": "1420:33:9"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "1019:96:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1130:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1150:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "1142:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:15:9"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "1180:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1180:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:15:9"
									},
									"scope": 1637,
									"src": "1121:340:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "1679:361:9",
										"statements": [
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1703:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1635,
														"src": "1690:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1570,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1690:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1722:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1575,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "1726:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1722:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1735:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1722:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1712:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1572,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1716:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1690:47:9"
											},
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1581,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "1748:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1583,
														"indexExpression": {
															"hexValue": "30",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1755:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1748:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1748:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "1748:15:9"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1587,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "1774:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1589,
														"indexExpression": {
															"hexValue": "31",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1781:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1774:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1786:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1774:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "1774:15:9"
											},
											{
												"body": {
													"id": 1621,
													"nodeType": "Block",
													"src": "1845:90:9",
													"statements": [
														{
															"expression": {
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1607,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "1860:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1609,
																	"indexExpression": {
																		"id": 1608,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "1867:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1860:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1610,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "1872:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1614,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "1885:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1893:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1885:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1872:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1860:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "1860:37:9"
														},
														{
															"expression": {
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1617,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "1912:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1912:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "1912:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1601,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "1833:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1837:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1833:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1622,
												"initializationExpression": {
													"assignments": [
														1594
													],
													"declarations": [
														{
															"constant": false,
															"id": 1594,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1813:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1622,
															"src": "1805:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1805:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1600,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1817:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1596,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "1821:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1817:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1830:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1817:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1805:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1840:3:9",
														"subExpression": {
															"id": 1604,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "1842:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1606,
													"nodeType": "ExpressionStatement",
													"src": "1840:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1800:135:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "1953:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1962:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1953:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1965:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1945:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "1945:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "2025:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2018:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1630,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2018:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2018:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1569,
												"id": 1634,
												"nodeType": "Return",
												"src": "2011:21:9"
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "1469:114:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1598:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1618:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1610:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1633:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1625:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:31:9"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1664:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1664:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:15:9"
									},
									"scope": 1637,
									"src": "1589:451:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1638,
							"src": "100:1949:9",
							"usedErrors": []
						}
					],
					"src": "35:2016:9"
				},
				"id": 9
			},
			"ERC20/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "ERC20/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1661
						],
						"IERC165": [
							1673
						]
					},
					"id": 1662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:10"
						},
						{
							"absolutePath": "ERC20/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 1674,
							"src": "62:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1642,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "708:7:10"
									},
									"id": 1643,
									"nodeType": "InheritanceSpecifier",
									"src": "708:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1641,
								"nodeType": "StructuredDocumentation",
								"src": "89:589:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1661,
							"linearizedBaseContracts": [
								1661,
								1673
							],
							"name": "ERC165",
							"nameLocation": "698:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1672
									],
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "878:66:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1652,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "896:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1654,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "916:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1673_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1673_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1653,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "911:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "911:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1673",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "911:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "896:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1658,
												"nodeType": "Return",
												"src": "889:47:10"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "723:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "796:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1648,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "854:8:10"
									},
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "821:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "814:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "814:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "813:20:10"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1649,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:6:10"
									},
									"scope": 1661,
									"src": "787:157:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1662,
							"src": "680:267:10",
							"usedErrors": []
						}
					],
					"src": "35:914:10"
				},
				"id": 10
			},
			"ERC20/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "ERC20/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1673
						]
					},
					"id": 1674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1664,
								"nodeType": "StructuredDocumentation",
								"src": "62:287:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1673,
							"linearizedBaseContracts": [
								1673
							],
							"name": "IERC165",
							"nameLocation": "361:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "376:347:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "738:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "763:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "756:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:11"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "799:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "799:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:6:11"
									},
									"scope": 1673,
									"src": "729:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1674,
							"src": "351:457:11",
							"usedErrors": []
						}
					],
					"src": "35:775:11"
				},
				"id": 11
			},
			"ERC20/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "ERC20/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2272
						]
					},
					"id": 2273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1676,
								"nodeType": "StructuredDocumentation",
								"src": "62:709:12",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 2272,
							"linearizedBaseContracts": [
								2272
							],
							"name": "EnumerableSet",
							"nameLocation": "781:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1684,
									"members": [
										{
											"constant": false,
											"id": 1679,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1317:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1684,
											"src": "1307:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1677,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1678,
												"nodeType": "ArrayTypeName",
												"src": "1307:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1683,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1488:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1684,
											"src": "1460:36:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1682,
												"keyType": {
													"id": 1680,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1460:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1258:3:12",
									"nodeType": "StructDefinition",
									"scope": 2272,
									"src": "1251:253:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "1751:345:12",
										"statements": [
											{
												"condition": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1766:22:12",
													"subExpression": {
														"arguments": [
															{
																"id": 1696,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "1777:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1697,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "1782:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1695,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "1767:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1767:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "2050:39:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2072:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1694,
															"id": 1722,
															"nodeType": "Return",
															"src": "2065:12:12"
														}
													]
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "1762:327:12",
												"trueBody": {
													"id": 1720,
													"nodeType": "Block",
													"src": "1790:254:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1705,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "1822:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1700,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "1805:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1679,
																		"src": "1805:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1805:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1707,
															"nodeType": "ExpressionStatement",
															"src": "1805:23:12"
														},
														{
															"expression": {
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1708,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "1966:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1683,
																		"src": "1966:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1712,
																	"indexExpression": {
																		"id": 1710,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "1979:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1966:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1713,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "1988:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1679,
																		"src": "1988:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1988:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1966:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1717,
															"nodeType": "ExpressionStatement",
															"src": "1966:40:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2028:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1694,
															"id": 1719,
															"nodeType": "Return",
															"src": "2021:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "1512:164:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "1691:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "1708:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1696:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1686,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "1696:3:12"
													},
													"referencedDeclaration": 1684,
													"src": "1696:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:32:12"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1745:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1745:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:6:12"
									},
									"scope": 2272,
									"src": "1682:414:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "2344:1348:12",
										"statements": [
											{
												"assignments": [
													1738
												],
												"declarations": [
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2464:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "2456:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2456:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1739,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "2477:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1683,
														"src": "2477:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1742,
													"indexExpression": {
														"id": 1741,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "2490:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2477:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2456:40:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1744,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "2513:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2527:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2513:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1807,
													"nodeType": "Block",
													"src": "3646:39:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3668:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1736,
															"id": 1806,
															"nodeType": "Return",
															"src": "3661:12:12"
														}
													]
												},
												"id": 1808,
												"nodeType": "IfStatement",
												"src": "2509:1176:12",
												"trueBody": {
													"id": 1804,
													"nodeType": "Block",
													"src": "2530:1110:12",
													"statements": [
														{
															"assignments": [
																1748
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1748,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "2896:13:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1804,
																	"src": "2888:21:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1747,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2888:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1752,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1749,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "2912:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2925:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2912:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2888:38:12"
														},
														{
															"assignments": [
																1754
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1754,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "2949:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1804,
																	"src": "2941:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1753,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1760,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1755,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "2961:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1679,
																		"src": "2961:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2961:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2982:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2961:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2941:42:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1761,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "3004:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1762,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "3017:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3004:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1788,
															"nodeType": "IfStatement",
															"src": "3000:405:12",
															"trueBody": {
																"id": 1787,
																"nodeType": "Block",
																"src": "3032:373:12",
																"statements": [
																	{
																		"assignments": [
																			1765
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1765,
																				"mutability": "mutable",
																				"name": "lastvalue",
																				"nameLocation": "3059:9:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 1787,
																				"src": "3051:17:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1764,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3051:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1770,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1766,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1730,
																					"src": "3071:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1767,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1679,
																				"src": "3071:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1769,
																			"indexExpression": {
																				"id": 1768,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1754,
																				"src": "3083:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3071:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3051:42:12"
																	},
																	{
																		"expression": {
																			"id": 1777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1771,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1730,
																						"src": "3196:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1679,
																					"src": "3196:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1775,
																				"indexExpression": {
																					"id": 1773,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1748,
																					"src": "3208:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3196:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1776,
																				"name": "lastvalue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1765,
																				"src": "3225:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3196:38:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1778,
																		"nodeType": "ExpressionStatement",
																		"src": "3196:38:12"
																	},
																	{
																		"expression": {
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1779,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1730,
																						"src": "3310:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1782,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1683,
																					"src": "3310:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1783,
																				"indexExpression": {
																					"id": 1781,
																					"name": "lastvalue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1765,
																					"src": "3323:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3310:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1784,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1738,
																				"src": "3336:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3310:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1786,
																		"nodeType": "ExpressionStatement",
																		"src": "3310:36:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1789,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "3486:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1679,
																		"src": "3486:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3486:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3486:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1795,
															"nodeType": "ExpressionStatement",
															"src": "3486:17:12"
														},
														{
															"expression": {
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3574:26:12",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1796,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "3581:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1683,
																		"src": "3581:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1799,
																	"indexExpression": {
																		"id": 1798,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1732,
																		"src": "3594:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3581:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1801,
															"nodeType": "ExpressionStatement",
															"src": "3574:26:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3624:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1736,
															"id": 1803,
															"nodeType": "Return",
															"src": "3617:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "2104:162:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2281:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2301:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2289:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1728,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "2289:3:12"
													},
													"referencedDeclaration": 1684,
													"src": "2289:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2314:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2306:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1731,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2288:32:12"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2338:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2338:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:6:12"
									},
									"scope": 2272,
									"src": "2272:1420:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "3857:50:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1821,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "3875:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1683,
															"src": "3875:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1824,
														"indexExpression": {
															"id": 1823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "3888:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3875:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3898:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3875:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1820,
												"id": 1827,
												"nodeType": "Return",
												"src": "3868:31:12"
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "3700:72:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "3787:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "3809:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "3797:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1812,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "3797:3:12"
													},
													"referencedDeclaration": 1684,
													"src": "3797:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3822:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "3814:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:32:12"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "3851:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3851:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:6:12"
									},
									"scope": 2272,
									"src": "3778:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "4058:44:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1838,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "4076:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1679,
														"src": "4076:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4076:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1837,
												"id": 1841,
												"nodeType": "Return",
												"src": "4069:25:12"
											}
										]
									},
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "3915:72:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4002:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4022:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4010:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1832,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1831,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "4010:3:12"
													},
													"referencedDeclaration": 1684,
													"src": "4010:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:17:12"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4049:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:9:12"
									},
									"scope": 2272,
									"src": "3993:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "4532:44:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1854,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "4550:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1679,
														"src": "4550:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1857,
													"indexExpression": {
														"id": 1856,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "4562:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4550:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1858,
												"nodeType": "Return",
												"src": "4543:25:12"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "4110:340:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4465:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4481:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4469:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1845,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "4469:3:12"
													},
													"referencedDeclaration": 1684,
													"src": "4469:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4494:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4486:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:32:12"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4523:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1851,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:9:12"
									},
									"scope": 2272,
									"src": "4456:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "5200:37:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1870,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "5218:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1679,
													"src": "5218:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1872,
												"nodeType": "Return",
												"src": "5211:18:12"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "4584:536:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5135:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5155:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5143:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1862,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "5143:3:12"
													},
													"referencedDeclaration": 1684,
													"src": "5143:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5142:17:12"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5182:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1866,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5182:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1867,
													"nodeType": "ArrayTypeName",
													"src": "5182:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5181:18:12"
									},
									"scope": 2272,
									"src": "5126:111:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1878,
									"members": [
										{
											"constant": false,
											"id": 1877,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5299:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1878,
											"src": "5295:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1876,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1875,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1684,
													"src": "5295:3:12"
												},
												"referencedDeclaration": 1684,
												"src": "5295:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5273:10:12",
									"nodeType": "StructDefinition",
									"scope": 2272,
									"src": "5266:47:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "5567:49:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1890,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "5590:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "5590:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1892,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "5602:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1889,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "5585:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5585:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1888,
												"id": 1894,
												"nodeType": "Return",
												"src": "5578:30:12"
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "5321:164:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5500:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5523:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "5504:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1880,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "5504:10:12"
													},
													"referencedDeclaration": 1878,
													"src": "5504:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5536:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "5528:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5528:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:39:12"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "5561:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5561:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5560:6:12"
									},
									"scope": 2272,
									"src": "5491:125:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "5871:52:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1908,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1900,
																"src": "5897:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "5897:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1910,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "5909:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1907,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "5889:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5889:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1912,
												"nodeType": "Return",
												"src": "5882:33:12"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "5624:162:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "5801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5827:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "5808:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1899,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1898,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "5808:10:12"
													},
													"referencedDeclaration": 1878,
													"src": "5808:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5840:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "5832:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1901,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5807:39:12"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "5865:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5865:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5864:6:12"
									},
									"scope": 2272,
									"src": "5792:131:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "6095:54:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1926,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "6123:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "6123:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1928,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "6135:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1925,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "6113:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6113:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1924,
												"id": 1930,
												"nodeType": "Return",
												"src": "6106:35:12"
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "5931:72:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6018:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6046:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "6027:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1916,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "6027:10:12"
													},
													"referencedDeclaration": 1878,
													"src": "6027:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "6051:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6026:39:12"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "6089:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6089:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6088:6:12"
									},
									"scope": 2272,
									"src": "6009:140:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "6307:45:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1942,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "6333:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "6333:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1941,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "6325:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6325:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1945,
												"nodeType": "Return",
												"src": "6318:26:12"
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "6157:72:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6244:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6270:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "6251:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1934,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "6251:10:12"
													},
													"referencedDeclaration": 1878,
													"src": "6251:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:24:12"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "6298:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:9:12"
									},
									"scope": 2272,
									"src": "6235:117:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "6789:48:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1959,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "6811:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "6811:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1961,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "6823:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "6807:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6807:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1963,
												"nodeType": "Return",
												"src": "6800:29:12"
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "6360:340:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "6715:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6737:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "6718:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1949,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "6718:10:12"
													},
													"referencedDeclaration": 1878,
													"src": "6718:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6750:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "6742:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6742:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6717:39:12"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "6780:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1955,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:9:12"
									},
									"scope": 2272,
									"src": "6706:131:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "7468:45:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1976,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "7494:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "7494:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1975,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "7486:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7486:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1974,
												"id": 1979,
												"nodeType": "Return",
												"src": "7479:26:12"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "6845:536:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7396:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7422:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "7403:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1967,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1878,
														"src": "7403:10:12"
													},
													"referencedDeclaration": 1878,
													"src": "7403:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1878_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7402:24:12"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "7450:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1971,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7450:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1972,
													"nodeType": "ArrayTypeName",
													"src": "7450:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7449:18:12"
									},
									"scope": 2272,
									"src": "7387:126:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1985,
									"members": [
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7575:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1985,
											"src": "7571:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1983,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1982,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1684,
													"src": "7571:3:12"
												},
												"referencedDeclaration": 1684,
												"src": "7571:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7549:10:12",
									"nodeType": "StructDefinition",
									"scope": 2272,
									"src": "7542:47:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "7843:76:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1997,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "7866:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "7866:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2005,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1991,
																					"src": "7902:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7894:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2003,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "7894:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7894:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7886:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2001,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7886:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7886:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7878:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1999,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7878:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7878:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1996,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "7861:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7861:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1995,
												"id": 2010,
												"nodeType": "Return",
												"src": "7854:57:12"
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "7597:164:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "7776:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7799:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "7780:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1987,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "7780:10:12"
													},
													"referencedDeclaration": 1985,
													"src": "7780:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7812:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "7804:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7804:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7779:39:12"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "7837:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7837:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7836:6:12"
									},
									"scope": 2272,
									"src": "7767:152:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "8174:79:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2024,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "8200:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "8200:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2032,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2018,
																					"src": "8236:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8228:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2030,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8228:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8228:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8220:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2028,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8220:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8220:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8212:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2026,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8212:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8212:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2023,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "8192:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2037,
												"nodeType": "Return",
												"src": "8185:60:12"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "7927:162:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8104:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8130:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "8111:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2015,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2014,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "8111:10:12"
													},
													"referencedDeclaration": 1985,
													"src": "8111:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "8135:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8110:39:12"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "8168:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8168:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8167:6:12"
									},
									"scope": 2272,
									"src": "8095:158:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "8425:81:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2051,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "8453:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "8453:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2059,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2045,
																					"src": "8489:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8481:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2057,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8481:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8481:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8473:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2055,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8473:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8473:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8465:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2053,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8465:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2050,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "8443:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2064,
												"nodeType": "Return",
												"src": "8436:62:12"
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "8261:72:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8348:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8376:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "8357:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2041,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "8357:10:12"
													},
													"referencedDeclaration": 1985,
													"src": "8357:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8389:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "8381:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8381:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8356:39:12"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "8419:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:6:12"
									},
									"scope": 2272,
									"src": "8339:167:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "8664:45:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2076,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "8690:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "8690:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2075,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "8682:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8682:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2074,
												"id": 2079,
												"nodeType": "Return",
												"src": "8675:26:12"
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "8514:72:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8601:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8627:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "8608:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2069,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2068,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "8608:10:12"
													},
													"referencedDeclaration": 1985,
													"src": "8608:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8607:24:12"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "8655:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8654:9:12"
									},
									"scope": 2272,
									"src": "8592:117:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "9146:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2099,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2085,
																						"src": "9192:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 2100,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1984,
																					"src": "9192:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1684_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 2101,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2087,
																					"src": "9204:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1684_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2098,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1860,
																				"src": "9188:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9188:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9180:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2096,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9180:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9180:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9172:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2094,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9172:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9172:40:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9164:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2092,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9164:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9164:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2106,
												"nodeType": "Return",
												"src": "9157:56:12"
											}
										]
									},
									"documentation": {
										"id": 2082,
										"nodeType": "StructuredDocumentation",
										"src": "8717:340:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9072:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9094:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "9075:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2084,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2083,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "9075:10:12"
													},
													"referencedDeclaration": 1985,
													"src": "9075:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9107:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "9099:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9099:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9074:39:12"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "9137:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9137:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9136:9:12"
									},
									"scope": 2272,
									"src": "9063:158:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "9852:185:12",
										"statements": [
											{
												"assignments": [
													2122
												],
												"declarations": [
													{
														"constant": false,
														"id": 2122,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "9880:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "9863:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2120,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "9863:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2121,
															"nodeType": "ArrayTypeName",
															"src": "9863:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2127,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2124,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "9896:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "9896:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2123,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "9888:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9863:44:12"
											},
											{
												"assignments": [
													2132
												],
												"declarations": [
													{
														"constant": false,
														"id": 2132,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9935:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "9918:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2130,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9918:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2131,
															"nodeType": "ArrayTypeName",
															"src": "9918:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2133,
												"nodeType": "VariableDeclarationStatement",
												"src": "9918:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9963:41:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9978:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "9988:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2132,
														"isOffset": false,
														"isSlot": false,
														"src": "9978:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2122,
														"isOffset": false,
														"isSlot": false,
														"src": "9988:5:12",
														"valueSize": 1
													}
												],
												"id": 2134,
												"nodeType": "InlineAssembly",
												"src": "9954:50:12"
											},
											{
												"expression": {
													"id": 2135,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2132,
													"src": "10023:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2136,
												"nodeType": "Return",
												"src": "10016:13:12"
											}
										]
									},
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "9229:536:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9780:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9806:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "9787:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2110,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "9787:10:12"
													},
													"referencedDeclaration": 1985,
													"src": "9787:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9786:24:12"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "9834:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2114,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9834:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2115,
													"nodeType": "ArrayTypeName",
													"src": "9834:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9833:18:12"
									},
									"scope": 2272,
									"src": "9771:266:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2142,
									"members": [
										{
											"constant": false,
											"id": 2141,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10093:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2142,
											"src": "10089:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2140,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2139,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1684,
													"src": "10089:3:12"
												},
												"referencedDeclaration": 1684,
												"src": "10089:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1684_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10070:7:12",
									"nodeType": "StructDefinition",
									"scope": 2272,
									"src": "10063:44:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "10358:58:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2154,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "10381:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2141,
															"src": "10381:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "10401:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10393:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2156,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10393:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10393:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2153,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "10376:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10376:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2161,
												"nodeType": "Return",
												"src": "10369:39:12"
											}
										]
									},
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "10115:164:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10294:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10314:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "10298:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2144,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2142,
														"src": "10298:7:12"
													},
													"referencedDeclaration": 2142,
													"src": "10298:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10327:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "10319:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10319:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10297:36:12"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "10352:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10352:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:6:12"
									},
									"scope": 2272,
									"src": "10285:131:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "10668:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2175,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "10694:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2141,
															"src": "10694:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2179,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "10714:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10706:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2177,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10706:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10706:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2174,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "10686:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10686:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2173,
												"id": 2182,
												"nodeType": "Return",
												"src": "10679:42:12"
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "10424:162:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10601:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10624:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "10608:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2165,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2142,
														"src": "10608:7:12"
													},
													"referencedDeclaration": 2142,
													"src": "10608:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10637:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "10629:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10629:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10607:36:12"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "10662:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10662:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10661:6:12"
									},
									"scope": 2272,
									"src": "10592:137:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "10898:63:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2196,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "10926:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2141,
															"src": "10926:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "10946:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10938:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2198,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10938:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2195,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "10916:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10916:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2194,
												"id": 2203,
												"nodeType": "Return",
												"src": "10909:44:12"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "10737:72:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "10824:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10849:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "10833:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2186,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2142,
														"src": "10833:7:12"
													},
													"referencedDeclaration": 2142,
													"src": "10833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10862:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "10854:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10854:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10832:36:12"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "10892:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10892:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10891:6:12"
									},
									"scope": 2272,
									"src": "10815:146:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "11116:45:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2215,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "11142:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2141,
															"src": "11142:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2214,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "11134:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11134:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2218,
												"nodeType": "Return",
												"src": "11127:26:12"
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "10969:72:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11056:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11079:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "11063:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2207,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2142,
														"src": "11063:7:12"
													},
													"referencedDeclaration": 2142,
													"src": "11063:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11062:21:12"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "11107:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11107:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11106:9:12"
									},
									"scope": 2272,
									"src": "11047:114:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "11595:57:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2234,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "11625:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2141,
																	"src": "11625:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1684_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2236,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "11637:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1684_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2233,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "11621:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11621:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11613:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11613:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11613:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2230,
												"id": 2239,
												"nodeType": "Return",
												"src": "11606:38:12"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "11169:340:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11524:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11543:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "11527:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2222,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2142,
														"src": "11527:7:12"
													},
													"referencedDeclaration": 2142,
													"src": "11527:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11556:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "11548:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11548:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11526:36:12"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "11586:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11586:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11585:9:12"
									},
									"scope": 2272,
									"src": "11515:137:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "12280:185:12",
										"statements": [
											{
												"assignments": [
													2255
												],
												"declarations": [
													{
														"constant": false,
														"id": 2255,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12308:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2270,
														"src": "12291:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2253,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12291:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2254,
															"nodeType": "ArrayTypeName",
															"src": "12291:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2260,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2257,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "12324:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2141,
															"src": "12324:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1684_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2256,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "12316:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1684_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12316:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12291:44:12"
											},
											{
												"assignments": [
													2265
												],
												"declarations": [
													{
														"constant": false,
														"id": 2265,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12363:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2270,
														"src": "12346:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2263,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12346:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2264,
															"nodeType": "ArrayTypeName",
															"src": "12346:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2266,
												"nodeType": "VariableDeclarationStatement",
												"src": "12346:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12391:41:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12406:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12416:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12406:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2265,
														"isOffset": false,
														"isSlot": false,
														"src": "12406:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2255,
														"isOffset": false,
														"isSlot": false,
														"src": "12416:5:12",
														"valueSize": 1
													}
												],
												"id": 2267,
												"nodeType": "InlineAssembly",
												"src": "12382:50:12"
											},
											{
												"expression": {
													"id": 2268,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2265,
													"src": "12451:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2250,
												"id": 2269,
												"nodeType": "Return",
												"src": "12444:13:12"
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "11660:536:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12211:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12234:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "12218:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2243,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2142,
														"src": "12218:7:12"
													},
													"referencedDeclaration": 2142,
													"src": "12218:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2142_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12217:21:12"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "12262:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2247,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12262:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2248,
													"nodeType": "ArrayTypeName",
													"src": "12262:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12261:18:12"
									},
									"scope": 2272,
									"src": "12202:263:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2273,
							"src": "773:11695:12",
							"usedErrors": []
						}
					],
					"src": "35:12435:12"
				},
				"id": 12
			}
		}
	}
}